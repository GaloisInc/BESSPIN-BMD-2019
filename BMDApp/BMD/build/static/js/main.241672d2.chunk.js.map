{"version":3,"sources":["../../Implementation-07154pm/typescript/eg-api/dist/data/nounlist.js","../../Implementation-07154pm/typescript/eg-api/dist/csv.js","config/globals.ts","utils/mod.ts","lib/gamepad.ts","contexts/ballotContext.ts","components/Main.tsx","components/Prose.tsx","components/QRCode.tsx","pages/ActivationPage.tsx","components/Breadcrumbs.tsx","components/ButtonBar.tsx","components/Button.tsx","components/LinkButton.tsx","components/Text.tsx","pages/CastBallotPage.tsx","utils/find.ts","components/Modal.tsx","components/CandidateContest.tsx","components/YesNoContest.tsx","pages/ContestPage.tsx","pages/HelpPage.tsx","pages/NotFoundPage.tsx","pages/PreReviewPage.tsx","components/Seal.tsx","utils/random.ts","pages/PrintPage.tsx","encodeVotes.ts","pages/ReviewPage.tsx","components/RangeInput.tsx","pages/SettingsPage.tsx","pages/StartPage.tsx","pages/InstructionsPage.tsx","endToEnd.ts","pages/TrackerPage.tsx","components/Ballot.tsx","components/Screen.tsx","utils/isJSON.ts","components/UploadConfig.tsx","App.tsx","serviceWorker.ts","index.tsx","../../Implementation-07154pm/typescript/eg-api/dist/ballotTracker.js","../../Implementation-07154pm/typescript/eg-api/dist/index.js"],"names":["Object","defineProperty","exports","value","dictionary","__importDefault","this","mod","__esModule","default","sync_1","__webpack_require__","fs_1","ballotTracker_1","translateCSV","fileName","csv","readFileSync","toString","records","delimiter","map","record","makeBallotTrackerFromString","join","globals","CHECK_ICON","FONT_SIZES","TEXT_SIZE","YES_NO_VOTES","no","yes","x","n","getFocusableElements","tabbableElements","Array","from","document","querySelectorAll","ariaHiddenTabbableElements","filter","element","indexOf","getActiveElement","activeElement","handleArrowUp","focusable","currentIndex","length","focus","handleArrowDown","handleArrowLeft","prevButton","getElementById","click","handleArrowRight","nextButton","handleClick","handleGamepadButtonDown","buttonName","handleGamepadKeyboardEvent","event","key","ballot","activateBallot","ballotStyleId","contests","election","undefined","markVoterCardUsed","_markVoterCardUsed","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","stop","apply","arguments","precinctId","resetBallot","setUserSettings","updateVote","userSettings","textSize","GLOBALS","votes","BallotContext","createContext","Main","styled","_templateObject","_ref","_ref$noOverflow","noOverflow","_ref2","_ref2$noPadding","noPadding","_ref3","_ref3$noPadding","MainChild","_templateObject2","_ref4","_ref4$center","center","_ref4$centerVertical","centerVertical","_ref4$centerHorizonta","centerHorizontal","concat","_ref5","_ref5$padded","padded","Prose","Prose_templateObject","textCenter","compact","ResponsiveSvgWrapper","div","QRCode_templateObject","QRCode","react_default","createElement","qrcode_react_lib_default","renderAs","level","resetBallotCode","Legend","legend","ActivationPage_templateObject","CodeBox","ActivationPage_templateObject2","ActivationPage","props","_useContext","useContext","contextElection","_useState","useState","_useState2","slicedToArray","activationCode","setActivationCode","setBallot","activationData","clearTimeout","history","push","takeShortcut","ballotStyle","ballotStyles","precinct","precincts","find","p","id","demo","Fragment","components_Main","onSubmit","preventDefault","_activationCode$split","split","_activationCode$split2","brand","b","includes","decodeActivationCode","components_Prose","data-testid","onClick","components_QRCode","aria-hidden","className","htmlFor","type","autoFocus","onBlur","target","onChange","window","setTimeout","autoComplete","autoCorrect","autoCapitalize","spellCheck","BreadcrumbContainer","Breadcrumbs_templateObject","StepContainer","Breadcrumbs_templateObject2","Step","_templateObject3","StepCircle","_templateObject4","completed","current","StepLabel","_templateObject5","Breadcrumbs","step","aria-label","label","i","stepNumber","ButtonBar","ButtonBar_templateObject","secondary","_ref2$dark","dark","separatePrimaryButton","_ref5$centerOnlyChild","centerOnlyChild","buttonStyles","css","Button_templateObject","_ref$danger","danger","_ref$primary","primary","_ref2$disabled","disabled","_ref3$fullWidth","fullWidth","_ref4$big","big","_ref4$small","small","_ref5$disabled","_ref5$danger","_ref5$primary","_ref6","_ref6$big","DecoyButton","Button_templateObject2","Button","attrs","Button_templateObject3","withRouter","goBack","location","match","to","staticContext","rest","objectWithoutProperties","components_Button","assign","role","iconStyles","Text_templateObject","warningIcon","voteIcon","Text","Text_templateObject2","narrow","_ref7","_ref8","error","muted","warning","white","_ref9","_ref10","_ref11","bold","_ref12","italic","_ref13","wordBreak","_ref14","TextWithLineBreaks","_ref15","text","y","arr","VoteInstructionsPage","bmdConfig","showHelpPage","showSettingsPage","components_Breadcrumbs","components_Text","components_LinkButton","components_ButtonBar","findPartyById","parties","ModalContent","Modal_templateObject","_ref$centerContent","centerContent","Modal","actions","content","_ref2$ariaLabel","ariaLabel","isOpen","_ref2$onAfterOpen","onAfterOpen","react_modal_lib_default","appElement","body","firstElementChild","ariaHideApp","contentLabel","portalClassName","overlayClassName","as","tabletMinWidth","ContentHeader","CandidateContest_templateObject","ContestSection","CandidateContest_templateObject2","VariableContentContainer","CandidateContest_templateObject3","showTopShadow","showBottomShadow","ScrollControls","CandidateContest_templateObject4","ScrollContainer","CandidateContest_templateObject5","ScrollableContentWrapper","_templateObject6","isScrollable","ChoicesGrid","_templateObject7","Choice","_templateObject8","isSelected","ChoiceInput","input","_templateObject9","WriteInCandidateForm","_templateObject10","WriteInCandidateFieldSet","fieldset","_templateObject11","WriteInCandidateInput","readOnly","_templateObject12","initialState","attemptedOvervoteCandidate","candidatePendingRemoval","isScrollAtBottom","isScrollAtTop","writeInCandateModalIsOpen","writeInCandidateName","CandidateContest","state","keyboard","React","createRef","scrollContainer","componentWillUnmount","removeEventListener","_this","updateContestChoicesScrollStates","findCandidateById","candidates","c","addCandidateToVote","_this$props","contest","vote","candidate","toConsumableArray","removeCandidateFromVote","_this$props2","newVote","handleDisabledClick","handleUpdateSelection","isWriteIn","setState","handleChangeVoteAlert","closeAttemptedVoteAlert","confirmRemovePendingWriteInCandidate","clearCandidateIdPendingRemoval","initWriteInCandidate","toggleWriteInCandidateModal","normalizeName","name","trim","replace","addWriteInCandidate","_this$props3","normalizedCandidateName","camelCase","cancelWriteInCandidateModal","onKeyboardInputChange","isTabletMinWidth","offsetWidth","targetMinHeight","context","windowsScrollTop","Math","ceil","scrollTop","scrollHeight","offsetHeight","scrollContestChoices","direction","dataset","currentScrollTop","idealScrollDistance","round","maxScrollTop","idealScrollTop","top","scrollTo","behavior","left","addEventListener","prevProps","_this2","_this$props4","hasReachedMaxSelections","seats","_this$state","title","section","ref","onScroll","isChecked","isDisabled","party","partyId","checked","allowWriteIns","data-direction","src_components_Modal","placeholder","build_default","layout","display","{bksp}","{space}","mergeDisplay","disableCaretPositioning","maxLength","layoutName","theme","useButtonTag","Component","contextType","YesNoContest_templateObject","YesNoContest_templateObject2","ContestDescription","YesNoContest_templateObject3","ContestFooter","YesNoContest_templateObject4","YesNoContest_templateObject5","YesNoContest_templateObject6","YesNoContest_templateObject7","YesNoContest_templateObject8","YesNoContest_templateObject9","YesNoContest_templateObject10","YesNoContest_templateObject11","overvoteSelection","YesNoContest","closeOvervoteAlert","YesNoContest_ContentHeader","YesNoContest_ContestSection","YesNoContest_VariableContentContainer","YesNoContest_ScrollContainer","YesNoContest_ScrollableContentWrapper","Text_TextWithLineBreaks","description","YesNoContest_ScrollControls","YesNoContest_ChoicesGrid","answer","answerLowerCase","toLowerCase","YesNoContest_Choice","YesNoContest_ChoiceInput","shortTitle","Progress","ContestPage_templateObject","ContestPage","contestNumber","params","currentContestIndex","parseInt","react_router","prevContestIndex","prevContest","nextContestIndex","nextContest","isVoteComplete","isReviewMode","hash","components_CandidateContest","aria-live","YesNoContest_YesNoContest","HelpPage","NotFoundPage","pathname","SummaryPage","SealImage","img","Seal_templateObject","Seal","seal","sealURL","dangerouslySetInnerHTML","__html","src","alt","randomBase64","numBytes","btoa","String","fromCharCode","crypto","getRandomValues","Uint8ClampedArray","Header","PrintPage_templateObject","QRCodeContainer","PrintPage_templateObject2","Content","PrintPage_templateObject3","BallotSelections","PrintPage_templateObject4","Contest","PrintPage_templateObject5","ContestProse","PrintPage_templateObject6","NoSelection","CandidateContestResult","_ref$vote","remainingChoices","PrintPage_NoSelection","YesNoContestResult","showConfirmModal","componentDidMount","afterPrint","ballotTrackerConfig","hideConfirm","showConfirm","print","then","success","_this$context","_this$context$electio","county","date","encodedVotes","contestVote","candidateIDs","encodeVotes","serialNumber","components_Seal","PrintPage_CandidateContestResult","PrintPage_YesNoContestResult","ReviewPage_templateObject","ContentFooter","ReviewPage_templateObject2","ReviewPage_templateObject3","ReviewPage_templateObject4","ReviewPage_templateObject5","LinkButton","ReviewPage_templateObject6","ReviewPage_templateObject7","ContestActions","ReviewPage_templateObject8","_ref3$vote","ReviewPage_NoSelection","index","array","pluralize","ReviewPage","targetElement","querySelector","navigator","userAgent","scrollIntoView","block","_this$context$electio2","ReviewPage_ContentHeader","ReviewPage_VariableContentContainer","ReviewPage_ScrollContainer","ReviewPage_ScrollableContentWrapper","ReviewPage_Contest","ReviewPage_ContestProse","ReviewPage_CandidateContestResult","ReviewPage_YesNoContestResult","trackStyles","stepSize","thumbSize","thumbStyles","Range","RangeInput_templateObject","SettingLabel","SettingsPage_templateObject","FontSizeControlsContainer","SettingsPage_templateObject2","SettingsPage","showResetBallotAlert","setResetBallotAlert","adjustFontSize","RangeInput","min","max","keys","StartPage_templateObject","StartPage_templateObject2","StartPage","StartPage_Seal","StartPage_SealImage","InstructionsPage","encryptAndGetTracker","trackerType","console","log","ElectionGuardAPI","encryptVote","TrackerPage_templateObject","TrackerPage_templateObject2","Highlight","TrackerPage_templateObject3","Divider","TrackerPage_templateObject4","ThinDivider","TrackerPage_templateObject5","VerticalDivider","TrackerPage_templateObject6","Large","TrackerPage_templateObject7","TrackingID","TrackerPage_templateObject8","Steps","TrackerPage_templateObject9","TrackerOptions","TrackerPage_templateObject10","TrackerPage_templateObject11","SealContainer","TrackerPage_templateObject12","ElectionDetails","_templateObject13","TrackerPage","tracker","numStepImagesLoaded","sent","alert","stepImageLoaded","trackerSiteDisplay","trackerUrlTemplate","trackerChunks","boldTrackerChunk","slice","restTracker","trackerSafeForEmbedding","trackerUrl","TrackerPage_Header","TrackerPage_Content","onLoad","TrackerPage_QRCodeContainer","Ballot","requireActivation","ballotActivated","exact","path","component","CastBallotPage","PreReviewPage","PrintPage","StyledScreen","Screen_templateObject","Screen","screen","elementToFocus","tabIndex","children","isObject","obj","prototype","call","isJSON","str","passObject","test","s","reduce","curr","Label","UploadConfig_templateObject","Footer","footer","UploadConfig_templateObject2","errorMessage","loaded","loading","UploadConfig","setErrorMessage","objectSpread","loadSampleElection","setElection","electionSample","onDrop","acceptedFiles","forEach","file","endsWith","reader","FileReader","onload","result","JSON","parse","readAsText","es","accept","multiple","getRootProps","getInputProps","isDragActive","href","mergeWithDefaults","defaults","electionDefaults","electionKey","activationStorageKey","votesStorageKey","removeElectionShortcuts","loadingElection","checkCardInterval","cardReaderAttached","App","_React$Component","_getPrototypeOf2","classCallCheck","_len","args","_key","possibleConstructorReturn","getPrototypeOf","processVoterCardData","voterCardData","uz","bs","pr","processCardData","completeCardData","cardData","longValueExists","t","fetchElection","longValue","fetch","json","startPolling","setInterval","resultJSON","getBallotActivation","present","shortValue","catch","stopPolling","clearInterval","_callee2","_this$getBallotActiva2","newCardData","newCardDataSerialized","readCheck","readCheckObj","_context2","Date","getTime","stringify","method","headers","Content-Type","getElection","_this$getBallotActiva3","getContests","getVotes","Mousetrap","bind","reset","documentElement","setAttribute","setDocumentFontSize","componentWillUnount","unbind","localStorage","getItem","electionConfigFile","setItem","voterData","setBallotActivation","data","process","votesData","setVotes","resetVoterData","removeItem","contestId","prevState","districts","districtId","partial","style","fontSize","inherits","createClass","reload","lib_default","onButtonDown","ballotContext","Provider","components_Ballot","components_UploadConfig","Root","react_router_dom","components_Screen","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","URL","origin","response","contentType","get","status","ready","unregister","checkValidServiceWorker","nounlist_1","chars","numberFromBinary","binString","beginning","end","substring","getRChars","nm","charAt","makeBallotTracker","randomness","binaries","lengthDif","pad","repeat","rnd","binary","startIndex","getRandomCode","nums","floor","random","Uint8Array","_byte","makeRandomTrackers","ct","_classCallCheck","_createClass","axios_1","electionSample_json_1","ballotTracker_2","csv_1","Promise","resolve","post","request","responseURL","failure"],"mappings":"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","file":"static/js/main.241672d2.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dictionary = [\"aardvark\", \"abacus\", \"abbey\", \"abbreviation\", \"ability\", \"abolishment\", \"absence\", \"abundance\", \"academics\", \"academy\", \"accelerant\", \"accelerator\", \"accent\", \"acceptance\", \"access\", \"accessory\", \"accident\", \"accommodation\", \"accompanist\", \"accomplishment\", \"accord\", \"accordance\", \"accordion\", \"account\", \"accountability\", \"accountant\", \"accounting\", \"accuracy\", \"achievement\", \"achiever\", \"acknowledgment\", \"acorn\", \"acoustics\", \"acquaintance\", \"acquisition\", \"acre\", \"acrylic\", \"act\", \"action\", \"activation\", \"activity\", \"actor\", \"actress\", \"adaptation\", \"adapter\", \"addition\", \"address\", \"adjective\", \"adjustment\", \"administration\", \"administrator\", \"admire\", \"admission\", \"adobe\", \"adult\", \"adulthood\", \"advance\", \"advancement\", \"advantage\", \"advent\", \"adverb\", \"advertisement\", \"advertising\", \"advice\", \"adviser\", \"advocacy\", \"advocate\", \"affect\", \"affiliate\", \"affinity\", \"afoul\", \"afterlife\", \"aftermath\", \"afternoon\", \"aftershave\", \"afterthought\", \"age\", \"agency\", \"agenda\", \"agent\", \"agony\", \"agreement\", \"agriculture\", \"aid\", \"aide\", \"aim\", \"air\", \"airbag\", \"aircraft\", \"airfare\", \"airfield\", \"airline\", \"airmail\", \"airplane\", \"airport\", \"airspace\", \"albatross\", \"album\", \"alcove\", \"alder\", \"alfalfa\", \"algebra\", \"algorithm\", \"alias\", \"alibi\", \"allergist\", \"alley\", \"alliance\", \"alligator\", \"allocation\", \"allowance\", \"alloy\", \"almanac\", \"almond\", \"alpaca\", \"alpha\", \"alphabet\", \"altar\", \"alteration\", \"alternative\", \"altitude\", \"alto\", \"aluminium\", \"aluminum\", \"amazement\", \"ambassador\", \"amber\", \"ambience\", \"ambiguity\", \"ambition\", \"ambulance\", \"amendment\", \"amenity\", \"amount\", \"amusement\", \"anagram\", \"analog\", \"analogue\", \"analogy\", \"analysis\", \"analyst\", \"analytics\", \"anatomy\", \"ancestor\", \"anchovy\", \"angel\", \"angle\", \"angora\", \"anguish\", \"animal\", \"anime\", \"anise\", \"ankle\", \"anklet\", \"anniversary\", \"announcement\", \"annual\", \"anorak\", \"answer\", \"ant\", \"anteater\", \"antelope\", \"antennae\", \"anterior\", \"anthropology\", \"antibody\", \"anticipation\", \"antique\", \"antiquity\", \"antler\", \"antling\", \"anybody\", \"anyone\", \"anything\", \"anywhere\", \"apartment\", \"ape\", \"apology\", \"app\", \"apparatus\", \"apparel\", \"appeal\", \"appearance\", \"appendix\", \"appetiser\", \"appetite\", \"appetizer\", \"applause\", \"applewood\", \"appliance\", \"application\", \"appointment\", \"appreciation\", \"apprehension\", \"approach\", \"appropriation\", \"approval\", \"apricot\", \"apron\", \"aquarium\", \"aquifer\", \"arcade\", \"arch\", \"archaeology\", \"archeology\", \"archer\", \"architect\", \"architecture\", \"archives\", \"area\", \"arena\", \"argument\", \"arithmetic\", \"ark\", \"arm\", \"armadillo\", \"armchair\", \"armoire\", \"armpit\", \"armrest\", \"arrangement\", \"array\", \"arrest\", \"arrival\", \"arrow\", \"art\", \"artery\", \"arthur\", \"artichoke\", \"article\", \"artifact\", \"artificer\", \"artist\", \"ascend\", \"ascent\", \"ascot\", \"ash\", \"aside\", \"asparagus\", \"aspect\", \"asphalt\", \"assembly\", \"assertion\", \"assessment\", \"asset\", \"assignment\", \"assist\", \"assistance\", \"assistant\", \"associate\", \"association\", \"assumption\", \"assurance\", \"asterisk\", \"astronomy\", \"asymmetry\", \"atelier\", \"athlete\", \"athletics\", \"atmosphere\", \"atom\", \"atrium\", \"attachment\", \"attainment\", \"attempt\", \"attendance\", \"attendant\", \"attention\", \"attic\", \"attitude\", \"attorney\", \"attraction\", \"attribute\", \"auction\", \"audience\", \"audit\", \"auditorium\", \"aunt\", \"authentication\", \"authenticity\", \"author\", \"authorisation\", \"authority\", \"authorization\", \"auto\", \"automation\", \"automaton\", \"autumn\", \"availability\", \"avalanche\", \"avenue\", \"average\", \"avocado\", \"award\", \"awareness\", \"awe\", \"axis\", \"babe\", \"baby\", \"bachelor\", \"back\", \"backbone\", \"backburn\", \"backdrop\", \"background\", \"backpack\", \"backup\", \"backyard\", \"bacon\", \"badge\", \"badger\", \"bafflement\", \"bag\", \"bagel\", \"baggage\", \"bagpipe\", \"bail\", \"bait\", \"bake\", \"baker\", \"bakery\", \"bakeware\", \"balance\", \"balcony\", \"ball\", \"ballet\", \"balloon\", \"balloonist\", \"ballot\", \"ballpark\", \"bamboo\", \"ban\", \"banana\", \"band\", \"bandana\", \"bandanna\", \"bandwidth\", \"bangle\", \"banjo\", \"bank\", \"bankbook\", \"banker\", \"banking\", \"bankruptcy\", \"banner\", \"banquette\", \"bar\", \"barbecue\", \"barbeque\", \"barber\", \"bargain\", \"barge\", \"baritone\", \"bark\", \"barley\", \"barn\", \"barometer\", \"barrage\", \"barrel\", \"barrier\", \"base\", \"baseball\", \"baseboard\", \"baseline\", \"basement\", \"basics\", \"basil\", \"basin\", \"basis\", \"basket\", \"basketball\", \"bass\", \"bassinet\", \"bassoon\", \"bat\", \"bath\", \"bathrobe\", \"bathroom\", \"bathtub\", \"battalion\", \"batter\", \"battery\", \"batting\", \"bay\", \"bayou\", \"beach\", \"bead\", \"beak\", \"beam\", \"bean\", \"beancurd\", \"beanie\", \"beanstalk\", \"bear\", \"beauty\", \"beck\", \"bedrock\", \"bee\", \"beech\", \"beet\", \"beetle\", \"beginner\", \"beginning\", \"begonia\", \"behalf\", \"behavior\", \"behaviour\", \"behest\", \"behold\", \"being\", \"belfry\", \"belief\", \"believer\", \"bell\", \"bellows\", \"belt\", \"bench\", \"bend\", \"benefit\", \"beret\", \"berry\", \"bestseller\", \"bet\", \"beverage\", \"beyond\", \"bias\", \"bicycle\", \"bid\", \"bidder\", \"bidding\", \"bifocals\", \"bijou\", \"bike\", \"bill\", \"billboard\", \"billing\", \"billion\", \"bin\", \"binoculars\", \"biology\", \"biopsy\", \"biosphere\", \"biplane\", \"birch\", \"bird\", \"birdbath\", \"birdcage\", \"birdhouse\", \"birthday\", \"biscuit\", \"bit\", \"bitten\", \"bitter\", \"blackberry\", \"blackbird\", \"blackboard\", \"blackfish\", \"blackness\", \"blade\", \"blame\", \"blank\", \"blanket\", \"blast\", \"blazer\", \"blend\", \"blind\", \"blinker\", \"blister\", \"blizzard\", \"block\", \"blocker\", \"blog\", \"blogger\", \"bloom\", \"bloomer\", \"blossom\", \"blouse\", \"blue\", \"blueberry\", \"blush\", \"boar\", \"board\", \"boat\", \"boatload\", \"boatyard\", \"bob\", \"bobcat\", \"bog\", \"bolero\", \"bolt\", \"bond\", \"bonding\", \"bondsman\", \"bonfire\", \"bongo\", \"bonnet\", \"bonsai\", \"bonus\", \"book\", \"bookcase\", \"bookend\", \"booking\", \"booklet\", \"bookmark\", \"boolean\", \"boom\", \"boon\", \"boost\", \"booster\", \"boot\", \"border\", \"bore\", \"borrower\", \"borrowing\", \"boss\", \"botany\", \"bother\", \"bottle\", \"bottling\", \"bough\", \"boulder\", \"boulevard\", \"boundary\", \"bouquet\", \"bout\", \"boutique\", \"bow\", \"bower\", \"bowl\", \"bowler\", \"bowling\", \"bowtie\", \"boxer\", \"boxspring\", \"boy\", \"boycott\", \"boyfriend\", \"boyhood\", \"boysenberry\", \"brace\", \"bracelet\", \"bracket\", \"brain\", \"brake\", \"bran\", \"branch\", \"brand\", \"brass\", \"bratwurst\", \"bread\", \"breadcrumb\", \"breadfruit\", \"break\", \"breakdown\", \"breakfast\", \"breakpoint\", \"breakthrough\", \"breath\", \"breeze\", \"brewer\", \"bribery\", \"brick\", \"bricklaying\", \"bride\", \"bridge\", \"brief\", \"briefing\", \"briefly\", \"brilliant\", \"brink\", \"brisket\", \"broad\", \"broadcast\", \"broccoli\", \"brochure\", \"broiler\", \"broker\", \"bronco\", \"bronze\", \"brooch\", \"brood\", \"brook\", \"broom\", \"brother\", \"brow\", \"brownie\", \"browser\", \"browsing\", \"brunch\", \"brush\", \"brushfire\", \"brushing\", \"bubble\", \"buck\", \"bucket\", \"buckle\", \"buckwheat\", \"buddy\", \"budget\", \"buffalo\", \"buffer\", \"buffet\", \"bug\", \"buggy\", \"bugle\", \"builder\", \"building\", \"bulb\", \"bulk\", \"bull\", \"bulldozer\", \"bullet\", \"bun\", \"bunch\", \"bungalow\", \"bunghole\", \"bunkhouse\", \"burden\", \"bureau\", \"burglar\", \"burial\", \"burn\", \"burning\", \"burrito\", \"burrow\", \"burst\", \"bus\", \"business\", \"businessman\", \"bustle\", \"butane\", \"butler\", \"butter\", \"butterfly\", \"button\", \"buy\", \"buyer\", \"buying\", \"buzzard\", \"cabana\", \"cabbage\", \"cabin\", \"cabinet\", \"cable\", \"caboose\", \"cacao\", \"cactus\", \"caddy\", \"cadet\", \"cafe\", \"caffeine\", \"caftan\", \"cage\", \"cake\", \"calculation\", \"calculator\", \"calculus\", \"calendar\", \"calf\", \"calico\", \"call\", \"calm\", \"calorie\", \"camel\", \"cameo\", \"camera\", \"camp\", \"campaign\", \"campaigning\", \"campanile\", \"camper\", \"campus\", \"can\", \"canal\", \"candelabra\", \"candidacy\", \"candidate\", \"candle\", \"candy\", \"cane\", \"cannon\", \"canoe\", \"canon\", \"canopy\", \"cantaloupe\", \"canteen\", \"canvas\", \"cap\", \"capability\", \"capacity\", \"cape\", \"caper\", \"capital\", \"capitulation\", \"capon\", \"cappuccino\", \"captain\", \"caption\", \"captor\", \"car\", \"caramel\", \"caravan\", \"carbon\", \"card\", \"cardboard\", \"cardigan\", \"care\", \"career\", \"cargo\", \"caribou\", \"carload\", \"carnation\", \"carnival\", \"carol\", \"carp\", \"carpenter\", \"carpet\", \"carpeting\", \"carport\", \"carriage\", \"carrier\", \"carrot\", \"carry\", \"cart\", \"cartel\", \"carter\", \"cartload\", \"cartoon\", \"cartridge\", \"carving\", \"cascade\", \"case\", \"casement\", \"cash\", \"cashew\", \"cashier\", \"casino\", \"casserole\", \"cassock\", \"cast\", \"castanet\", \"castle\", \"cat\", \"catacomb\", \"catalogue\", \"catalyst\", \"catamaran\", \"catastrophe\", \"catch\", \"catcher\", \"category\", \"caterpillar\", \"cation\", \"catsup\", \"cattle\", \"cauliflower\", \"causal\", \"cause\", \"causeway\", \"caution\", \"cave\", \"caviar\", \"cayenne\", \"ceiling\", \"celebration\", \"celebrity\", \"celeriac\", \"celery\", \"cell\", \"cellar\", \"cello\", \"celsius\", \"cement\", \"census\", \"cent\", \"center\", \"centimeter\", \"centre\", \"centurion\", \"century\", \"ceramic\", \"ceramics\", \"cereal\", \"ceremony\", \"certainty\", \"certificate\", \"certification\", \"chafe\", \"chain\", \"chainstay\", \"chair\", \"chairlift\", \"chairman\", \"chairperson\", \"chaise\", \"chalet\", \"chalice\", \"chalk\", \"challenge\", \"chamber\", \"champagne\", \"champion\", \"championship\", \"chance\", \"chandelier\", \"change\", \"channel\", \"chaos\", \"chap\", \"chapel\", \"chapter\", \"character\", \"chard\", \"charge\", \"charger\", \"charity\", \"charlatan\", \"charm\", \"chart\", \"charter\", \"chasm\", \"chassis\", \"chateau\", \"chatter\", \"check\", \"checkbook\", \"checking\", \"checkout\", \"checkroom\", \"cheddar\", \"cheek\", \"cheer\", \"cheese\", \"cheesecake\", \"cheetah\", \"chef\", \"chem\", \"chemical\", \"chemistry\", \"cherry\", \"chess\", \"chestnut\", \"chicken\", \"chicory\", \"chief\", \"child\", \"childhood\", \"chili\", \"chill\", \"chime\", \"chimpanzee\", \"chin\", \"chino\", \"chip\", \"chipmunk\", \"chivalry\", \"chive\", \"chives\", \"chocolate\", \"choice\", \"choir\", \"choker\", \"choosing\", \"chop\", \"chops\", \"chopstick\", \"chopsticks\", \"chord\", \"chorus\", \"chow\", \"chowder\", \"chrome\", \"chronicle\", \"chrysalis\", \"chub\", \"chuck\", \"chug\", \"churn\", \"chutney\", \"cicada\", \"cilantro\", \"cinder\", \"cinema\", \"cinnamon\", \"circadian\", \"circle\", \"circuit\", \"circulation\", \"circumference\", \"circumstance\", \"cirrus\", \"citizen\", \"citizenship\", \"citron\", \"citrus\", \"city\", \"civilian\", \"civilisation\", \"civilization\", \"claim\", \"clamp\", \"clan\", \"clank\", \"clapboard\", \"clarification\", \"clarinet\", \"clarity\", \"clasp\", \"class\", \"classic\", \"classmate\", \"classroom\", \"clause\", \"clave\", \"clavicle\", \"clavier\", \"claw\", \"clay\", \"cleaner\", \"clearance\", \"clearing\", \"cleat\", \"clef\", \"cleft\", \"clerk\", \"click\", \"client\", \"cliff\", \"climate\", \"climb\", \"clinic\", \"clip\", \"clipboard\", \"clipper\", \"cloak\", \"cloakroom\", \"clock\", \"clockwork\", \"clogs\", \"clone\", \"close\", \"closet\", \"closing\", \"closure\", \"cloth\", \"clothes\", \"clothing\", \"cloud\", \"cloudburst\", \"clove\", \"clover\", \"cloves\", \"club\", \"clue\", \"cluster\", \"clutch\", \"coach\", \"coal\", \"coalition\", \"coast\", \"coaster\", \"coat\", \"cob\", \"cobbler\", \"cobweb\", \"cocktail\", \"cocoa\", \"coconut\", \"cod\", \"code\", \"codepage\", \"codling\", \"codon\", \"cofactor\", \"coffee\", \"coffin\", \"cohesion\", \"cohort\", \"coil\", \"coin\", \"coincidence\", \"coinsurance\", \"cold\", \"coleslaw\", \"coliseum\", \"collaboration\", \"collagen\", \"collapse\", \"collar\", \"collard\", \"collateral\", \"colleague\", \"collection\", \"collector\", \"college\", \"collision\", \"colloquy\", \"colony\", \"color\", \"colt\", \"column\", \"columnist\", \"comb\", \"combination\", \"combine\", \"comeback\", \"comedy\", \"comfort\", \"comfortable\", \"comic\", \"comics\", \"comma\", \"command\", \"commander\", \"comment\", \"commerce\", \"commercial\", \"commission\", \"commitment\", \"committee\", \"commodity\", \"common\", \"commonsense\", \"commotion\", \"communicant\", \"communication\", \"community\", \"commuter\", \"company\", \"comparison\", \"compass\", \"compassion\", \"compassionate\", \"compensation\", \"competence\", \"competition\", \"competitor\", \"complaint\", \"complement\", \"completion\", \"complex\", \"complexity\", \"compliance\", \"complication\", \"complicity\", \"compliment\", \"component\", \"comportment\", \"composer\", \"composite\", \"composition\", \"compost\", \"comprehension\", \"compress\", \"compromise\", \"compulsion\", \"computer\", \"con\", \"concentrate\", \"concept\", \"conception\", \"concern\", \"concert\", \"conclusion\", \"concrete\", \"condition\", \"conditioner\", \"condominium\", \"condor\", \"conduct\", \"conductor\", \"cone\", \"conference\", \"confidence\", \"configuration\", \"conflict\", \"confusion\", \"conga\", \"congo\", \"congress\", \"congressman\", \"conifer\", \"connection\", \"connotation\", \"conscience\", \"consciousness\", \"consensus\", \"consent\", \"consequence\", \"conservation\", \"consideration\", \"consignment\", \"consist\", \"consistency\", \"console\", \"consonant\", \"constant\", \"constellation\", \"constitution\", \"constraint\", \"construction\", \"consul\", \"consulate\", \"consulting\", \"consumer\", \"consumption\", \"contact\", \"container\", \"content\", \"contention\", \"contest\", \"context\", \"continent\", \"continuity\", \"contour\", \"contract\", \"contractor\", \"contrary\", \"contrast\", \"contribution\", \"contributor\", \"control\", \"controller\", \"convection\", \"convenience\", \"convention\", \"conversation\", \"conversion\", \"convert\", \"convertible\", \"cook\", \"cookbook\", \"cookie\", \"cooking\", \"cooperation\", \"coordination\", \"coordinator\", \"cope\", \"copper\", \"copy\", \"copying\", \"copyright\", \"copywriter\", \"coral\", \"cord\", \"corduroy\", \"core\", \"cork\", \"corn\", \"corner\", \"cornerstone\", \"cornflakes\", \"cornmeal\", \"corporal\", \"corporation\", \"corral\", \"corridor\", \"corsage\", \"cosset\", \"cost\", \"costume\", \"cot\", \"cottage\", \"cotton\", \"couch\", \"cough\", \"council\", \"councilor\", \"counsel\", \"counseling\", \"counselling\", \"counsellor\", \"counselor\", \"count\", \"counter\", \"counterpart\", \"countess\", \"country\", \"countryside\", \"county\", \"couple\", \"coupon\", \"courage\", \"court\", \"courthouse\", \"courtroom\", \"cousin\", \"cover\", \"coverage\", \"coverall\", \"cow\", \"cowbell\", \"coyote\", \"crackers\", \"cradle\", \"craft\", \"craftsman\", \"cranberry\", \"crane\", \"cranky\", \"crash\", \"crate\", \"cravat\", \"craw\", \"crawdad\", \"crayfish\", \"crayon\", \"creation\", \"creative\", \"creativity\", \"creator\", \"creature\", \"credential\", \"credenza\", \"credibility\", \"credit\", \"creditor\", \"creek\", \"crepe\", \"crest\", \"crew\", \"crewman\", \"crewmate\", \"crewmember\", \"crewmen\", \"crib\", \"cribbage\", \"cricket\", \"crime\", \"criminal\", \"crisis\", \"crisp\", \"criteria\", \"criterion\", \"critic\", \"criticism\", \"crocodile\", \"crocus\", \"croissant\", \"crook\", \"crop\", \"cross\", \"croup\", \"crow\", \"crowd\", \"crown\", \"cruise\", \"crumb\", \"crunch\", \"crush\", \"crust\", \"cry\", \"crystal\", \"cub\", \"cube\", \"cuckoo\", \"cucumber\", \"cue\", \"cuisine\", \"culture\", \"culvert\", \"cummerbund\", \"cup\", \"cupboard\", \"cupcake\", \"curd\", \"cure\", \"curio\", \"curiosity\", \"curl\", \"curler\", \"currant\", \"currency\", \"current\", \"curriculum\", \"curry\", \"curse\", \"cursor\", \"curtailment\", \"curtain\", \"curve\", \"cushion\", \"custard\", \"custom\", \"customer\", \"cut\", \"cuticle\", \"cutlet\", \"cutover\", \"cutting\", \"cycle\", \"cyclone\", \"cylinder\", \"cymbal\", \"cynic\", \"daffodil\", \"dahlia\", \"daikon\", \"daily\", \"dairy\", \"daisy\", \"damage\", \"dame\", \"dance\", \"dancer\", \"dancing\", \"dandelion\", \"danger\", \"dare\", \"dark\", \"darkness\", \"darn\", \"dart\", \"dash\", \"dashboard\", \"data\", \"database\", \"date\", \"daughter\", \"dawn\", \"day\", \"daybed\", \"daylight\", \"deal\", \"dealing\", \"dearest\", \"debate\", \"debris\", \"debt\", \"debtor\", \"decade\", \"decadence\", \"decency\", \"decimal\", \"decision\", \"deck\", \"declaration\", \"declination\", \"decline\", \"decoder\", \"decoration\", \"decrease\", \"dedication\", \"deduce\", \"deduction\", \"deed\", \"deep\", \"deer\", \"default\", \"defeat\", \"defendant\", \"defender\", \"defense\", \"deficit\", \"definition\", \"degree\", \"delay\", \"deliberation\", \"delight\", \"delivery\", \"demand\", \"democracy\", \"democrat\", \"demur\", \"den\", \"denim\", \"denominator\", \"density\", \"dentist\", \"department\", \"departure\", \"dependency\", \"dependent\", \"deployment\", \"deposit\", \"deposition\", \"depot\", \"depression\", \"depressive\", \"depth\", \"deputy\", \"derby\", \"derivation\", \"derivative\", \"derrick\", \"descendant\", \"descent\", \"description\", \"desert\", \"design\", \"designation\", \"designer\", \"desire\", \"desk\", \"desktop\", \"dessert\", \"destination\", \"destiny\", \"destruction\", \"detail\", \"detection\", \"detective\", \"detector\", \"detention\", \"detour\", \"developer\", \"developing\", \"development\", \"device\", \"dew\", \"diabetes\", \"diadem\", \"diagnosis\", \"diagram\", \"dial\", \"dialect\", \"dialogue\", \"diam\", \"diamond\", \"diaper\", \"diaphragm\", \"diarist\", \"diary\", \"dibble\", \"dick\", \"diction\", \"dictionary\", \"diesel\", \"diet\", \"difference\", \"difficulty\", \"diffuse\", \"dig\", \"digestion\", \"digestive\", \"digger\", \"digging\", \"digit\", \"dignity\", \"dill\", \"dilution\", \"dime\", \"dimension\", \"dimple\", \"diner\", \"dinghy\", \"dining\", \"dinner\", \"dinosaur\", \"dioxide\", \"dip\", \"diploma\", \"diplomacy\", \"direction\", \"directive\", \"director\", \"directory\", \"dirt\", \"disadvantage\", \"disagreement\", \"disaster\", \"discharge\", \"discipline\", \"disclaimer\", \"disclosure\", \"disco\", \"disconnection\", \"discount\", \"discourse\", \"discovery\", \"discrepancy\", \"discretion\", \"discussion\", \"disdain\", \"disembodiment\", \"disengagement\", \"disguise\", \"dish\", \"dishwasher\", \"disk\", \"disparity\", \"dispatch\", \"display\", \"disposal\", \"disposer\", \"disposition\", \"dispute\", \"disregard\", \"disruption\", \"dissemination\", \"dissonance\", \"distance\", \"distinction\", \"distortion\", \"distribution\", \"distributor\", \"district\", \"divan\", \"diver\", \"diversity\", \"divide\", \"dividend\", \"divider\", \"diving\", \"division\", \"doc\", \"dock\", \"doctor\", \"doctorate\", \"doctrine\", \"document\", \"documentary\", \"doe\", \"dog\", \"dogsled\", \"dogwood\", \"doing\", \"doll\", \"dollar\", \"dollop\", \"dolman\", \"dolor\", \"dolphin\", \"domain\", \"dome\", \"donation\", \"donkey\", \"donor\", \"donut\", \"door\", \"doorbell\", \"doorknob\", \"doorpost\", \"doorway\", \"dory\", \"dose\", \"dot\", \"double\", \"doubling\", \"doubt\", \"doubter\", \"dough\", \"doughnut\", \"down\", \"downfall\", \"downgrade\", \"download\", \"downstairs\", \"downtown\", \"downturn\", \"dozen\", \"draft\", \"drag\", \"dragon\", \"dragonfly\", \"dragonfruit\", \"dragster\", \"drain\", \"drainage\", \"drake\", \"drama\", \"drapes\", \"draw\", \"drawbridge\", \"drawer\", \"drawing\", \"dream\", \"dreamer\", \"dredger\", \"dress\", \"dresser\", \"dressing\", \"drill\", \"drink\", \"drinking\", \"drive\", \"driver\", \"driveway\", \"driving\", \"drizzle\", \"drop\", \"drudgery\", \"drum\", \"drummer\", \"dryer\", \"duck\", \"duckling\", \"dud\", \"dude\", \"due\", \"duel\", \"dueling\", \"duffel\", \"dugout\", \"dune\", \"duration\", \"durian\", \"dusk\", \"dust\", \"duster\", \"duty\", \"dwarf\", \"dwell\", \"dwelling\", \"dynamics\", \"dynamo\", \"dynasty\", \"eagle\", \"eaglet\", \"ear\", \"eardrum\", \"earmuffs\", \"earnings\", \"earplug\", \"earring\", \"earrings\", \"earth\", \"earthquake\", \"earthworm\", \"ease\", \"easel\", \"east\", \"eating\", \"eaves\", \"eavesdropper\", \"eclipse\", \"ecliptic\", \"ecology\", \"economics\", \"economy\", \"ecosystem\", \"eddy\", \"edge\", \"edger\", \"edible\", \"editing\", \"edition\", \"editor\", \"editorial\", \"education\", \"eel\", \"effect\", \"effective\", \"effector\", \"efficacy\", \"efficiency\", \"effort\", \"egg\", \"egghead\", \"eggnog\", \"eggplant\", \"ego\", \"elbow\", \"elderberry\", \"election\", \"electricity\", \"electronics\", \"element\", \"elephant\", \"elevation\", \"elevator\", \"eleventh\", \"elf\", \"elicit\", \"eligibility\", \"elimination\", \"elite\", \"elixir\", \"elk\", \"ellipse\", \"elm\", \"elongation\", \"elver\", \"email\", \"emanate\", \"embassy\", \"embossing\", \"emerald\", \"emergence\", \"emergent\", \"emery\", \"emission\", \"emitter\", \"emotion\", \"emphasis\", \"empire\", \"employ\", \"employee\", \"employer\", \"employment\", \"empowerment\", \"emu\", \"enactment\", \"enclave\", \"enclosure\", \"encounter\", \"encouragement\", \"encyclopedia\", \"end\", \"endive\", \"endorsement\", \"endpoint\", \"enemy\", \"energy\", \"enforcement\", \"engagement\", \"engine\", \"engineer\", \"engineering\", \"enigma\", \"enjoyment\", \"enquiry\", \"enrollment\", \"enterprise\", \"entertainment\", \"enthusiasm\", \"entirety\", \"entity\", \"entrance\", \"entree\", \"entrepreneur\", \"entry\", \"envelope\", \"environment\", \"envy\", \"enzyme\", \"epic\", \"episode\", \"epoch\", \"epoxy\", \"equal\", \"equality\", \"equation\", \"equinox\", \"equipment\", \"equity\", \"equivalent\", \"era\", \"eraser\", \"erosion\", \"error\", \"escalator\", \"escape\", \"escort\", \"essay\", \"essence\", \"essential\", \"establishment\", \"estate\", \"estimate\", \"estuary\", \"eternity\", \"ethernet\", \"ethics\", \"evaluation\", \"evaluator\", \"evaporation\", \"eve\", \"evening\", \"event\", \"everybody\", \"everyone\", \"everything\", \"evidence\", \"evocation\", \"evolution\", \"exaggeration\", \"exam\", \"examination\", \"examiner\", \"example\", \"excellence\", \"exception\", \"excerpt\", \"excess\", \"exchange\", \"exclamation\", \"excursion\", \"excuse\", \"executive\", \"executor\", \"exercise\", \"exhaust\", \"exhaustion\", \"exhibit\", \"exhibition\", \"exile\", \"existence\", \"exit\", \"expansion\", \"expectancy\", \"expectation\", \"expedition\", \"expense\", \"experience\", \"experiment\", \"expert\", \"expertise\", \"explanation\", \"exploration\", \"explorer\", \"export\", \"expose\", \"exposition\", \"exposure\", \"expression\", \"extension\", \"extent\", \"exterior\", \"external\", \"extreme\", \"eye\", \"eyeball\", \"eyebrow\", \"eyebrows\", \"eyeglasses\", \"eyelash\", \"eyelashes\", \"eyelid\", \"eyelids\", \"eyeliner\", \"eyestrain\", \"fabric\", \"face\", \"facet\", \"facility\", \"facsimile\", \"fact\", \"factor\", \"factory\", \"faculty\", \"fail\", \"failure\", \"fairness\", \"fairy\", \"fall\", \"fallacy\", \"fame\", \"familiar\", \"familiarity\", \"family\", \"fan\", \"fang\", \"fanlight\", \"farm\", \"farmer\", \"farming\", \"farmland\", \"farrow\", \"fascia\", \"fashion\", \"fat\", \"fate\", \"father\", \"fatigue\", \"faucet\", \"fault\", \"fava\", \"favor\", \"favorite\", \"fawn\", \"fax\", \"fear\", \"feast\", \"feather\", \"feature\", \"federation\", \"fedora\", \"fee\", \"feed\", \"feedback\", \"feeding\", \"feel\", \"feeling\", \"fellow\", \"fen\", \"fence\", \"fencing\", \"fender\", \"fennel\", \"ferret\", \"ferry\", \"ferryboat\", \"fertilizer\", \"festival\", \"few\", \"fiber\", \"fiberglass\", \"fibre\", \"fiction\", \"fiddle\", \"field\", \"fiery\", \"fiesta\", \"fifth\", \"fig\", \"fight\", \"fighter\", \"figure\", \"figurine\", \"file\", \"filing\", \"fill\", \"fillet\", \"filly\", \"film\", \"filter\", \"final\", \"finance\", \"financing\", \"finding\", \"fine\", \"finer\", \"finger\", \"fingerling\", \"fingernail\", \"finish\", \"finisher\", \"fir\", \"fire\", \"fireman\", \"fireplace\", \"firewall\", \"firm\", \"first\", \"fish\", \"fishbone\", \"fisherman\", \"fishery\", \"fishing\", \"fishnet\", \"fit\", \"fitness\", \"fix\", \"fixture\", \"flag\", \"flair\", \"flame\", \"flan\", \"flanker\", \"flare\", \"flash\", \"flat\", \"flatboat\", \"flavor\", \"flax\", \"fleck\", \"fledgling\", \"fleece\", \"flesh\", \"flexibility\", \"flick\", \"flicker\", \"flight\", \"flint\", \"flock\", \"flood\", \"floodplain\", \"floor\", \"flour\", \"flow\", \"flower\", \"fluke\", \"flume\", \"flung\", \"flute\", \"fly\", \"flytrap\", \"foal\", \"foam\", \"fob\", \"focus\", \"fog\", \"fold\", \"folder\", \"folk\", \"folklore\", \"follower\", \"following\", \"fondue\", \"font\", \"food\", \"foodstuffs\", \"fool\", \"foot\", \"footage\", \"football\", \"footnote\", \"footprint\", \"footrest\", \"footstep\", \"footstool\", \"footwear\", \"forage\", \"forager\", \"foray\", \"force\", \"ford\", \"forearm\", \"forebear\", \"forecast\", \"forehead\", \"foreigner\", \"forelimb\", \"forest\", \"forestry\", \"forever\", \"forgery\", \"fork\", \"form\", \"formal\", \"format\", \"formation\", \"former\", \"formula\", \"fort\", \"forte\", \"fortnight\", \"fortress\", \"fortune\", \"forum\", \"foundation\", \"founder\", \"founding\", \"fountain\", \"fourths\", \"fowl\", \"fox\", \"foxglove\", \"fraction\", \"fragrance\", \"frame\", \"framework\", \"fraud\", \"fraudster\", \"freak\", \"freckle\", \"freedom\", \"freelance\", \"freezer\", \"freezing\", \"freight\", \"freighter\", \"frenzy\", \"freon\", \"frequency\", \"fresco\", \"friction\", \"fridge\", \"friend\", \"friendship\", \"fries\", \"fright\", \"fringe\", \"fritter\", \"frock\", \"frog\", \"front\", \"frontier\", \"frost\", \"frosting\", \"frown\", \"fruit\", \"frustration\", \"fry\", \"fuel\", \"fulfillment\", \"full\", \"fun\", \"function\", \"functionality\", \"fund\", \"funding\", \"fundraising\", \"funeral\", \"fur\", \"furnace\", \"furniture\", \"futon\", \"future\", \"gadget\", \"gaffe\", \"gain\", \"gaiters\", \"gale\", \"gallery\", \"galley\", \"gallon\", \"galoshes\", \"gambling\", \"game\", \"gamebird\", \"gaming\", \"gander\", \"gap\", \"garage\", \"garb\", \"garbage\", \"garden\", \"garlic\", \"garment\", \"garter\", \"gas\", \"gasket\", \"gasoline\", \"gasp\", \"gastronomy\", \"gastropod\", \"gate\", \"gateway\", \"gather\", \"gathering\", \"gator\", \"gauge\", \"gauntlet\", \"gavel\", \"gazebo\", \"gazelle\", \"gear\", \"gearshift\", \"geek\", \"gel\", \"gelatin\", \"gelding\", \"gem\", \"gender\", \"gene\", \"general\", \"generation\", \"generator\", \"generosity\", \"genetics\", \"genie\", \"genius\", \"genre\", \"gentleman\", \"geography\", \"geology\", \"geometry\", \"geranium\", \"gerbil\", \"gesture\", \"geyser\", \"ghost\", \"giant\", \"gift\", \"gig\", \"giggle\", \"ginger\", \"gingerbread\", \"ginseng\", \"giraffe\", \"girdle\", \"girl\", \"girlfriend\", \"glacier\", \"gladiolus\", \"glance\", \"gland\", \"glass\", \"glasses\", \"glee\", \"glen\", \"glider\", \"gliding\", \"glimpse\", \"globe\", \"gloom\", \"glory\", \"glove\", \"glow\", \"glucose\", \"glue\", \"glut\", \"glutamate\", \"gnat\", \"gnu\", \"goal\", \"goat\", \"gobbler\", \"goggles\", \"going\", \"gold\", \"goldfish\", \"golf\", \"gondola\", \"gong\", \"good\", \"goodbye\", \"goodie\", \"goodness\", \"goodnight\", \"goodwill\", \"goose\", \"gopher\", \"gorilla\", \"gosling\", \"gossip\", \"governance\", \"government\", \"governor\", \"gown\", \"grace\", \"grade\", \"gradient\", \"graduate\", \"graduation\", \"graffiti\", \"graft\", \"grain\", \"gram\", \"grammar\", \"gran\", \"grand\", \"grandchild\", \"grandfather\", \"grandma\", \"grandmom\", \"grandmother\", \"grandpa\", \"grandparent\", \"grandson\", \"granny\", \"granola\", \"grant\", \"grape\", \"grapefruit\", \"graph\", \"graphic\", \"grasp\", \"grasshopper\", \"grassland\", \"gratitude\", \"gravel\", \"gravitas\", \"gravity\", \"gravy\", \"gray\", \"grease\", \"greatness\", \"greed\", \"green\", \"greenhouse\", \"greens\", \"grenade\", \"grey\", \"grid\", \"grief\", \"grill\", \"grin\", \"grip\", \"gripper\", \"grit\", \"grocery\", \"ground\", \"group\", \"grouper\", \"grouse\", \"grove\", \"growth\", \"grub\", \"guacamole\", \"guarantee\", \"guard\", \"guava\", \"guerrilla\", \"guess\", \"guest\", \"guestbook\", \"guidance\", \"guide\", \"guideline\", \"guilder\", \"guilt\", \"guilty\", \"guinea\", \"guitar\", \"guitarist\", \"gum\", \"gumshoe\", \"gutter\", \"guy\", \"gym\", \"gymnast\", \"gymnastics\", \"gyro\", \"habit\", \"habitat\", \"hacksaw\", \"hackwork\", \"hail\", \"hair\", \"haircut\", \"hake\", \"half\", \"halibut\", \"hall\", \"halloween\", \"hallway\", \"halt\", \"ham\", \"hamburger\", \"hammer\", \"hammock\", \"hamster\", \"hand\", \"handball\", \"handful\", \"handicap\", \"handle\", \"handlebar\", \"handmaiden\", \"handover\", \"handrail\", \"handsaw\", \"hanger\", \"happening\", \"happiness\", \"harald\", \"harbor\", \"harbour\", \"hardboard\", \"hardcover\", \"hardening\", \"hardhat\", \"hardship\", \"hardware\", \"hare\", \"harm\", \"harmonica\", \"harmonise\", \"harmonize\", \"harmony\", \"harp\", \"harpooner\", \"harvest\", \"harvester\", \"hash\", \"hashtag\", \"hassock\", \"haste\", \"hat\", \"hatbox\", \"hatchet\", \"hatchling\", \"haunt\", \"haven\", \"haversack\", \"havoc\", \"hawk\", \"hay\", \"haze\", \"hazel\", \"hazelnut\", \"head\", \"headache\", \"headlight\", \"headline\", \"headphones\", \"headquarters\", \"headrest\", \"health\", \"hearing\", \"hearsay\", \"heart\", \"heartache\", \"heartbeat\", \"hearth\", \"hearthside\", \"heartwood\", \"heat\", \"heater\", \"heating\", \"heaven\", \"heavy\", \"hectare\", \"hedge\", \"hedgehog\", \"heel\", \"heifer\", \"height\", \"heir\", \"heirloom\", \"helicopter\", \"helium\", \"hellcat\", \"hello\", \"helmet\", \"helo\", \"help\", \"hemisphere\", \"hemp\", \"hen\", \"herb\", \"herbs\", \"heritage\", \"hermit\", \"hero\", \"heron\", \"herring\", \"hesitation\", \"hexagon\", \"heyday\", \"hiccups\", \"hide\", \"hierarchy\", \"high\", \"highland\", \"highlight\", \"highway\", \"hike\", \"hiking\", \"hill\", \"hint\", \"hip\", \"hippodrome\", \"hire\", \"hiring\", \"historian\", \"history\", \"hit\", \"hive\", \"hobbit\", \"hobby\", \"hockey\", \"hoe\", \"hog\", \"hold\", \"holder\", \"holiday\", \"home\", \"homeland\", \"hometown\", \"homework\", \"homonym\", \"honesty\", \"honey\", \"honeybee\", \"honeydew\", \"honor\", \"honoree\", \"hood\", \"hoof\", \"hook\", \"hop\", \"hope\", \"hops\", \"horde\", \"horizon\", \"hormone\", \"horn\", \"hornet\", \"horror\", \"horse\", \"horseradish\", \"horst\", \"hose\", \"hosiery\", \"hospice\", \"hospital\", \"hospitality\", \"host\", \"hostel\", \"hostess\", \"hotdog\", \"hotel\", \"hound\", \"hour\", \"hourglass\", \"house\", \"houseboat\", \"household\", \"housewife\", \"housework\", \"housing\", \"hovel\", \"hovercraft\", \"howard\", \"hub\", \"hubcap\", \"hubris\", \"hug\", \"hugger\", \"hull\", \"human\", \"humanity\", \"humidity\", \"hummus\", \"humor\", \"humour\", \"hundred\", \"hunger\", \"hunt\", \"hunter\", \"hunting\", \"hurdle\", \"hurdler\", \"hurricane\", \"hurry\", \"hurt\", \"husband\", \"hut\", \"hutch\", \"hyacinth\", \"hydrant\", \"hydraulics\", \"hydrocarb\", \"hydrocarbon\", \"hydrofoil\", \"hydrogen\", \"hyena\", \"hygienic\", \"hype\", \"hypothesis\", \"ice\", \"iceberg\", \"icebreaker\", \"icecream\", \"icicle\", \"icing\", \"icon\", \"icy\", \"id\", \"idea\", \"ideal\", \"identification\", \"identity\", \"ideology\", \"idiom\", \"igloo\", \"ignorance\", \"ignorant\", \"illegal\", \"illiteracy\", \"illness\", \"illusion\", \"illustration\", \"image\", \"imagination\", \"imbalance\", \"imitation\", \"immortal\", \"impact\", \"impairment\", \"impala\", \"impediment\", \"implement\", \"implementation\", \"implication\", \"import\", \"importance\", \"impostor\", \"impress\", \"impression\", \"imprisonment\", \"impropriety\", \"improvement\", \"impudence\", \"impulse\", \"inability\", \"inauguration\", \"inbox\", \"incandescence\", \"incarnation\", \"incense\", \"incentive\", \"inch\", \"incidence\", \"incident\", \"incision\", \"inclusion\", \"income\", \"incompetence\", \"inconvenience\", \"increase\", \"incubation\", \"independence\", \"independent\", \"index\", \"indication\", \"indicator\", \"indigence\", \"individual\", \"industry\", \"inequality\", \"inevitable\", \"infancy\", \"infant\", \"infection\", \"infiltration\", \"infinite\", \"infix\", \"inflammation\", \"inflation\", \"influence\", \"influx\", \"info\", \"information\", \"infrastructure\", \"infusion\", \"ingrate\", \"ingredient\", \"inhabitant\", \"inheritance\", \"inhibition\", \"inhibitor\", \"initial\", \"initialise\", \"initialize\", \"initiative\", \"injunction\", \"injury\", \"injustice\", \"ink\", \"inlay\", \"inn\", \"innervation\", \"innocence\", \"innocent\", \"innovation\", \"input\", \"inquiry\", \"inscription\", \"insect\", \"insert\", \"inside\", \"insight\", \"insolence\", \"insomnia\", \"inspection\", \"inspector\", \"inspiration\", \"installation\", \"instance\", \"instant\", \"instinct\", \"institute\", \"institution\", \"instruction\", \"instructor\", \"instrument\", \"instrumentalist\", \"instrumentation\", \"insulation\", \"insurance\", \"insurgence\", \"insurrection\", \"integer\", \"integral\", \"integration\", \"integrity\", \"intellect\", \"intelligence\", \"intensity\", \"intent\", \"intention\", \"intentionality\", \"interaction\", \"interchange\", \"interest\", \"interface\", \"interior\", \"interject\", \"interloper\", \"internet\", \"interpretation\", \"interpreter\", \"interval\", \"intervenor\", \"intervention\", \"interview\", \"interviewer\", \"introduction\", \"intuition\", \"invader\", \"invasion\", \"invention\", \"inventor\", \"inventory\", \"inverse\", \"inversion\", \"investigation\", \"investigator\", \"investment\", \"investor\", \"invitation\", \"invite\", \"invoice\", \"involvement\", \"iridescence\", \"iris\", \"iron\", \"ironclad\", \"irony\", \"irrigation\", \"island\", \"isolation\", \"issue\", \"item\", \"itinerary\", \"ivory\", \"jack\", \"jackal\", \"jacket\", \"jackfruit\", \"jade\", \"jaguar\", \"jail\", \"jailhouse\", \"jalapeno\", \"jam\", \"jar\", \"jasmine\", \"jaw\", \"jazz\", \"jealousy\", \"jeans\", \"jeep\", \"jelly\", \"jellybeans\", \"jellyfish\", \"jet\", \"jewel\", \"jeweller\", \"jewellery\", \"jewelry\", \"jicama\", \"jiffy\", \"job\", \"jockey\", \"joey\", \"jogging\", \"joke\", \"jot\", \"journal\", \"journalism\", \"journalist\", \"journey\", \"joy\", \"judge\", \"judgment\", \"judo\", \"jug\", \"juggernaut\", \"juice\", \"julienne\", \"jumbo\", \"jump\", \"jumper\", \"jumpsuit\", \"jungle\", \"junior\", \"junk\", \"junker\", \"junket\", \"jury\", \"justice\", \"jute\", \"kale\", \"kangaroo\", \"karate\", \"kayak\", \"kazoo\", \"kebab\", \"keep\", \"keeper\", \"kendo\", \"kennel\", \"ketch\", \"ketchup\", \"kettle\", \"kettledrum\", \"key\", \"keyboard\", \"keyboarding\", \"keystone\", \"kick\", \"kid\", \"kilogram\", \"kilometer\", \"kilt\", \"kimono\", \"kind\", \"kindness\", \"king\", \"kingdom\", \"kingfish\", \"kiosk\", \"kiss\", \"kit\", \"kitchen\", \"kite\", \"kitsch\", \"kitten\", \"kitty\", \"kiwi\", \"knee\", \"kneejerk\", \"knickers\", \"knife\", \"knight\", \"knitting\", \"knock\", \"knot\", \"knowledge\", \"knuckle\", \"koala\", \"kohlrabi\", \"kumquat\", \"lab\", \"label\", \"labor\", \"laboratory\", \"laborer\", \"labour\", \"labourer\", \"lace\", \"lack\", \"lad\", \"ladder\", \"ladle\", \"lady\", \"ladybug\", \"lag\", \"lake\", \"lamb\", \"lambkin\", \"lament\", \"lamp\", \"lanai\", \"land\", \"landform\", \"landing\", \"landmine\", \"landscape\", \"lane\", \"language\", \"lantern\", \"lap\", \"lapdog\", \"laptop\", \"larch\", \"lard\", \"larder\", \"lark\", \"larva\", \"lasagna\", \"lashes\", \"last\", \"latency\", \"lathe\", \"latitude\", \"latte\", \"latter\", \"laugh\", \"laughter\", \"laundry\", \"lava\", \"law\", \"lawmaker\", \"lawn\", \"lawsuit\", \"lawyer\", \"lay\", \"layer\", \"layout\", \"lead\", \"leader\", \"leadership\", \"leading\", \"leaf\", \"league\", \"leaker\", \"leap\", \"learning\", \"leash\", \"leather\", \"leave\", \"leaver\", \"lecture\", \"leek\", \"leeway\", \"left\", \"leg\", \"legacy\", \"legal\", \"legend\", \"legging\", \"legislation\", \"legislator\", \"legislature\", \"legitimacy\", \"legume\", \"leisure\", \"lemon\", \"lemonade\", \"lemur\", \"lender\", \"lending\", \"length\", \"lens\", \"lentil\", \"leopard\", \"lesson\", \"letter\", \"lettuce\", \"level\", \"lever\", \"leverage\", \"leveret\", \"liability\", \"liar\", \"liberty\", \"library\", \"licence\", \"license\", \"licensing\", \"licorice\", \"lid\", \"lie\", \"lieu\", \"lieutenant\", \"life\", \"lifestyle\", \"lifetime\", \"lift\", \"ligand\", \"light\", \"lighting\", \"lightning\", \"lightscreen\", \"likelihood\", \"likeness\", \"lilac\", \"lily\", \"limb\", \"lime\", \"limestone\", \"limit\", \"limitation\", \"limo\", \"line\", \"linen\", \"liner\", \"linguist\", \"linguistics\", \"lining\", \"link\", \"linkage\", \"linseed\", \"lion\", \"lip\", \"lipid\", \"lipstick\", \"liquid\", \"liquidity\", \"list\", \"listening\", \"listing\", \"literate\", \"literature\", \"litigation\", \"litmus\", \"litter\", \"littleneck\", \"livestock\", \"living\", \"lizard\", \"llama\", \"load\", \"loading\", \"loaf\", \"loafer\", \"loan\", \"lobby\", \"lobster\", \"local\", \"locality\", \"location\", \"lock\", \"locker\", \"locket\", \"locomotive\", \"locust\", \"lode\", \"loft\", \"log\", \"logic\", \"login\", \"logistics\", \"logo\", \"lollipop\", \"loneliness\", \"longboat\", \"longitude\", \"look\", \"lookout\", \"loop\", \"loophole\", \"loquat\", \"loss\", \"lot\", \"lotion\", \"lottery\", \"lounge\", \"louse\", \"lout\", \"love\", \"lox\", \"loyalty\", \"luck\", \"luggage\", \"lumber\", \"lumberman\", \"lunch\", \"luncheonette\", \"lunchmeat\", \"lunchroom\", \"lung\", \"lunge\", \"lute\", \"luxury\", \"lychee\", \"lycra\", \"lye\", \"lynx\", \"lyre\", \"lyrics\", \"lysine\", \"macadamia\", \"macaroni\", \"macaroon\", \"macaw\", \"machine\", \"machinery\", \"macrame\", \"macro\", \"macrofauna\", \"maelstrom\", \"maestro\", \"magazine\", \"magic\", \"magnet\", \"magnitude\", \"maid\", \"maiden\", \"mail\", \"mailbox\", \"mailer\", \"mailing\", \"mailman\", \"main\", \"mainland\", \"mainstream\", \"maintainer\", \"maintenance\", \"major\", \"majority\", \"makeover\", \"maker\", \"makeup\", \"making\", \"male\", \"malice\", \"mall\", \"mallard\", \"mallet\", \"mama\", \"mambo\", \"mammoth\", \"man\", \"manacle\", \"management\", \"manager\", \"manatee\", \"mandarin\", \"mandate\", \"mandolin\", \"mangle\", \"mango\", \"mangrove\", \"manhunt\", \"maniac\", \"manicure\", \"manifestation\", \"manipulation\", \"manner\", \"manor\", \"mansard\", \"mansion\", \"mantel\", \"mantle\", \"mantua\", \"manufacturer\", \"manufacturing\", \"many\", \"map\", \"maple\", \"mapping\", \"maracas\", \"marathon\", \"marble\", \"march\", \"mare\", \"margarine\", \"margin\", \"mariachi\", \"marimba\", \"marines\", \"marionberry\", \"mark\", \"marker\", \"market\", \"marketer\", \"marketing\", \"marketplace\", \"marksman\", \"markup\", \"marmalade\", \"marriage\", \"marsh\", \"marshland\", \"marshmallow\", \"marten\", \"mascara\", \"mask\", \"masonry\", \"mass\", \"massage\", \"mast\", \"master\", \"masterpiece\", \"mastoid\", \"mat\", \"match\", \"matchmaker\", \"mate\", \"material\", \"maternity\", \"math\", \"mathematics\", \"matrix\", \"matter\", \"mattock\", \"mattress\", \"max\", \"maximum\", \"maybe\", \"mayonnaise\", \"mayor\", \"meadow\", \"meal\", \"mean\", \"meander\", \"meaning\", \"means\", \"meantime\", \"measure\", \"measurement\", \"meat\", \"meatball\", \"meatloaf\", \"mecca\", \"mechanic\", \"mechanism\", \"med\", \"medal\", \"media\", \"median\", \"medication\", \"medicine\", \"medium\", \"meet\", \"meeting\", \"melatonin\", \"melody\", \"melon\", \"member\", \"membership\", \"membrane\", \"meme\", \"memo\", \"memorial\", \"memory\", \"men\", \"mention\", \"mentor\", \"menu\", \"merchandise\", \"merchant\", \"mercury\", \"meridian\", \"meringue\", \"merit\", \"mess\", \"message\", \"messenger\", \"messy\", \"metabolite\", \"metal\", \"metaphor\", \"meteor\", \"meteorology\", \"meter\", \"methane\", \"method\", \"methodology\", \"metric\", \"metro\", \"metronome\", \"mezzanine\", \"microlending\", \"microphone\", \"microwave\", \"midden\", \"middle\", \"middleman\", \"midline\", \"midnight\", \"midwife\", \"might\", \"migrant\", \"migration\", \"mile\", \"mileage\", \"milepost\", \"milestone\", \"military\", \"milk\", \"milkshake\", \"mill\", \"millennium\", \"millet\", \"millimeter\", \"million\", \"millisecond\", \"millstone\", \"mime\", \"mimosa\", \"min\", \"mincemeat\", \"mind\", \"mine\", \"mineral\", \"mineshaft\", \"mini\", \"minibus\", \"minimalism\", \"minimum\", \"mining\", \"minion\", \"minister\", \"mink\", \"minnow\", \"minor\", \"minority\", \"mint\", \"minute\", \"miracle\", \"mirror\", \"misfit\", \"misnomer\", \"misplacement\", \"misreading\", \"miss\", \"missile\", \"mission\", \"mist\", \"mistake\", \"mister\", \"misunderstand\", \"miter\", \"mitten\", \"mix\", \"mixer\", \"mixture\", \"moat\", \"mob\", \"mobile\", \"mobility\", \"moccasins\", \"mocha\", \"mochi\", \"mode\", \"model\", \"modeling\", \"modem\", \"modernist\", \"modernity\", \"modification\", \"molar\", \"molasses\", \"molding\", \"mole\", \"molecule\", \"mom\", \"moment\", \"money\", \"monger\", \"monitor\", \"monitoring\", \"monk\", \"monkey\", \"monocle\", \"monopoly\", \"monsoon\", \"monster\", \"month\", \"monument\", \"mood\", \"moody\", \"moon\", \"moonlight\", \"moonscape\", \"moonshine\", \"moose\", \"mop\", \"morale\", \"morning\", \"morsel\", \"mortal\", \"mortality\", \"mortgage\", \"mortise\", \"mosquito\", \"most\", \"motel\", \"moth\", \"mother\", \"motion\", \"motivation\", \"motive\", \"motor\", \"motorboat\", \"motorcar\", \"motorcycle\", \"mound\", \"mountain\", \"mouse\", \"mouser\", \"mousse\", \"moustache\", \"mouton\", \"movement\", \"mover\", \"movie\", \"mower\", \"mozzarella\", \"mud\", \"muffin\", \"mug\", \"mukluk\", \"mule\", \"multimedia\", \"muscat\", \"muscle\", \"museum\", \"mushroom\", \"music\", \"musician\", \"muskrat\", \"mussel\", \"mustache\", \"mustard\", \"mutation\", \"mutt\", \"mutton\", \"mystery\", \"myth\", \"mythology\", \"nail\", \"name\", \"naming\", \"napkin\", \"narrative\", \"nasal\", \"nation\", \"nationality\", \"native\", \"nature\", \"navigation\", \"necessity\", \"necklace\", \"necktie\", \"nectar\", \"nectarine\", \"need\", \"needle\", \"neglect\", \"negotiation\", \"neighbor\", \"neighborhood\", \"neighbour\", \"neighbourhood\", \"neon\", \"neonate\", \"nephew\", \"nerve\", \"nest\", \"nestling\", \"nestmate\", \"net\", \"netball\", \"netbook\", \"network\", \"networking\", \"neuron\", \"news\", \"newsletter\", \"newspaper\", \"newsprint\", \"newsstand\", \"nexus\", \"nibble\", \"nicety\", \"niche\", \"nick\", \"nickel\", \"nickname\", \"niece\", \"night\", \"nightclub\", \"nightgown\", \"nightingale\", \"nightlife\", \"nightlight\", \"nightmare\", \"ninja\", \"nit\", \"nitrogen\", \"nobody\", \"nod\", \"node\", \"noir\", \"noise\", \"nonconformist\", \"nondisclosure\", \"nonsense\", \"noodle\", \"noodles\", \"noon\", \"norm\", \"normal\", \"normalisation\", \"normalization\", \"north\", \"nose\", \"notation\", \"note\", \"notebook\", \"notepad\", \"nothing\", \"notice\", \"notion\", \"notoriety\", \"nougat\", \"noun\", \"nourishment\", \"novel\", \"nudge\", \"number\", \"numeracy\", \"numeric\", \"nurse\", \"nursery\", \"nursing\", \"nurture\", \"nut\", \"nutmeg\", \"nutrient\", \"nutrition\", \"nylon\", \"nymph\", \"oak\", \"oar\", \"oasis\", \"oat\", \"oatmeal\", \"oats\", \"obedience\", \"obi\", \"object\", \"objection\", \"objective\", \"obligation\", \"oboe\", \"observation\", \"observatory\", \"obsession\", \"obsidian\", \"obstacle\", \"occasion\", \"occupation\", \"occurrence\", \"ocean\", \"ocelot\", \"octagon\", \"octave\", \"octavo\", \"octet\", \"octopus\", \"odometer\", \"odyssey\", \"oeuvre\", \"offence\", \"offense\", \"offer\", \"offering\", \"office\", \"officer\", \"official\", \"offset\", \"oil\", \"okra\", \"oldie\", \"oleo\", \"olive\", \"omega\", \"omelet\", \"omission\", \"omnivore\", \"oncology\", \"onion\", \"online\", \"onset\", \"opening\", \"opera\", \"operating\", \"operation\", \"operator\", \"opinion\", \"opossum\", \"opponent\", \"opportunist\", \"opportunity\", \"opposite\", \"opposition\", \"optimal\", \"optimisation\", \"optimist\", \"optimization\", \"option\", \"orange\", \"orangutan\", \"orator\", \"orchard\", \"orchestra\", \"orchid\", \"order\", \"ordinary\", \"ordination\", \"ore\", \"oregano\", \"organ\", \"organisation\", \"organising\", \"organization\", \"organizing\", \"orient\", \"orientation\", \"origin\", \"original\", \"originality\", \"ornament\", \"osmosis\", \"osprey\", \"ostrich\", \"other\", \"otter\", \"ottoman\", \"ounce\", \"outback\", \"outcome\", \"outfielder\", \"outfit\", \"outhouse\", \"outlaw\", \"outlay\", \"outlet\", \"outline\", \"outlook\", \"output\", \"outrage\", \"outrigger\", \"outrun\", \"outset\", \"outside\", \"oval\", \"oven\", \"overcharge\", \"overclocking\", \"overcoat\", \"overexertion\", \"overflight\", \"overhead\", \"overheard\", \"overload\", \"overnighter\", \"overshoot\", \"oversight\", \"overview\", \"owl\", \"owner\", \"ownership\", \"ox\", \"oxford\", \"oxygen\", \"oyster\", \"ozone\", \"pace\", \"pacemaker\", \"pack\", \"package\", \"packaging\", \"packet\", \"pad\", \"paddle\", \"paddock\", \"page\", \"pail\", \"pain\", \"paint\", \"painter\", \"painting\", \"paintwork\", \"pair\", \"pajamas\", \"palace\", \"palate\", \"palm\", \"pamphlet\", \"pan\", \"pancake\", \"pancreas\", \"panda\", \"panel\", \"panic\", \"pannier\", \"panpipe\", \"pansy\", \"panther\", \"pantry\", \"pants\", \"pantsuit\", \"pantyhose\", \"papa\", \"papaya\", \"paper\", \"paperback\", \"paperwork\", \"parable\", \"parachute\", \"parade\", \"paradise\", \"paragraph\", \"paramedic\", \"parameter\", \"paranoia\", \"parcel\", \"parchment\", \"pard\", \"pardon\", \"parent\", \"parenthesis\", \"parenting\", \"park\", \"parka\", \"parking\", \"parliament\", \"parole\", \"parrot\", \"parser\", \"parsley\", \"parsnip\", \"part\", \"participant\", \"participation\", \"particle\", \"particular\", \"partner\", \"partnership\", \"partridge\", \"party\", \"pass\", \"passage\", \"passbook\", \"passenger\", \"passing\", \"passion\", \"passive\", \"passport\", \"password\", \"past\", \"pasta\", \"paste\", \"pastry\", \"pasture\", \"pat\", \"patch\", \"pate\", \"patent\", \"patentee\", \"path\", \"pathology\", \"pathway\", \"patience\", \"patient\", \"patina\", \"patio\", \"patrimony\", \"patriot\", \"patrol\", \"patroller\", \"patrolling\", \"patron\", \"pattern\", \"patty\", \"pattypan\", \"pause\", \"pavement\", \"pavilion\", \"paw\", \"pawnshop\", \"pay\", \"payee\", \"payment\", \"payoff\", \"pea\", \"peace\", \"peach\", \"peacoat\", \"peacock\", \"peak\", \"peanut\", \"pear\", \"pearl\", \"peasant\", \"pecan\", \"pedal\", \"peek\", \"peen\", \"peer\", \"pegboard\", \"pelican\", \"pelt\", \"pen\", \"penalty\", \"pence\", \"pencil\", \"pendant\", \"pendulum\", \"penguin\", \"penicillin\", \"peninsula\", \"pennant\", \"penny\", \"pension\", \"pentagon\", \"peony\", \"people\", \"pepper\", \"pepperoni\", \"percent\", \"percentage\", \"perception\", \"perch\", \"perennial\", \"perfection\", \"performance\", \"perfume\", \"period\", \"periodical\", \"peripheral\", \"permafrost\", \"permission\", \"permit\", \"persimmon\", \"person\", \"personal\", \"personality\", \"personnel\", \"perspective\", \"pest\", \"pet\", \"petal\", \"petition\", \"petitioner\", \"petticoat\", \"pew\", \"pharmacist\", \"phase\", \"pheasant\", \"phenomenon\", \"phenotype\", \"pheromone\", \"philanthropy\", \"philosopher\", \"philosophy\", \"phone\", \"phosphate\", \"photo\", \"photograph\", \"photographer\", \"photography\", \"phrase\", \"phrasing\", \"physical\", \"physics\", \"physiology\", \"pianist\", \"piano\", \"piccolo\", \"pick\", \"pickax\", \"pickaxe\", \"picket\", \"pickle\", \"pickup\", \"picnic\", \"picture\", \"picturesque\", \"pie\", \"piece\", \"pier\", \"piety\", \"pig\", \"pigeon\", \"piglet\", \"pigpen\", \"pigsty\", \"pike\", \"pilaf\", \"pile\", \"pilgrim\", \"pilgrimage\", \"pill\", \"pillar\", \"pillbox\", \"pillow\", \"pilot\", \"pimple\", \"pin\", \"pinafore\", \"pine\", \"pineapple\", \"pinecone\", \"ping\", \"pink\", \"pinkie\", \"pinot\", \"pinstripe\", \"pint\", \"pinto\", \"pinworm\", \"pioneer\", \"pipe\", \"pipeline\", \"piracy\", \"pirate\", \"pistol\", \"pit\", \"pita\", \"pitch\", \"pitcher\", \"pitching\", \"pith\", \"pizza\", \"place\", \"placebo\", \"placement\", \"placode\", \"plagiarism\", \"plain\", \"plaintiff\", \"plan\", \"plane\", \"planet\", \"planning\", \"plant\", \"plantation\", \"planter\", \"planula\", \"plaster\", \"plasterboard\", \"plastic\", \"plate\", \"platelet\", \"platform\", \"platinum\", \"platter\", \"platypus\", \"play\", \"player\", \"playground\", \"playroom\", \"playwright\", \"plea\", \"pleasure\", \"pleat\", \"pledge\", \"plenty\", \"plier\", \"pliers\", \"plight\", \"plot\", \"plough\", \"plover\", \"plow\", \"plowman\", \"plug\", \"plugin\", \"plum\", \"plumber\", \"plume\", \"plunger\", \"plywood\", \"pneumonia\", \"pocket\", \"pocketbook\", \"pod\", \"podcast\", \"poem\", \"poet\", \"poetry\", \"poignance\", \"point\", \"poison\", \"poisoning\", \"poker\", \"pole\", \"polenta\", \"police\", \"policeman\", \"policy\", \"polish\", \"politician\", \"politics\", \"poll\", \"polliwog\", \"pollutant\", \"pollution\", \"polo\", \"polyester\", \"polyp\", \"pomegranate\", \"pomelo\", \"pompom\", \"poncho\", \"pond\", \"pony\", \"pool\", \"poor\", \"pop\", \"popcorn\", \"poppy\", \"popsicle\", \"popularity\", \"population\", \"populist\", \"porcelain\", \"porch\", \"porcupine\", \"pork\", \"porpoise\", \"port\", \"porter\", \"portfolio\", \"porthole\", \"portion\", \"portrait\", \"position\", \"possession\", \"possibility\", \"possible\", \"post\", \"postage\", \"postbox\", \"poster\", \"postfix\", \"pot\", \"potato\", \"potential\", \"pottery\", \"pouch\", \"poultry\", \"pound\", \"pounding\", \"poverty\", \"powder\", \"power\", \"practice\", \"practitioner\", \"prairie\", \"praise\", \"precedence\", \"precedent\", \"precipitation\", \"precision\", \"predecessor\", \"preface\", \"preference\", \"prefix\", \"prejudice\", \"prelude\", \"premeditation\", \"premier\", \"premise\", \"premium\", \"preoccupation\", \"preparation\", \"prescription\", \"presence\", \"present\", \"presentation\", \"preservation\", \"preserves\", \"presidency\", \"president\", \"press\", \"pressroom\", \"pressure\", \"prestige\", \"presume\", \"pretzel\", \"prevalence\", \"prevention\", \"prey\", \"price\", \"pricing\", \"pride\", \"primary\", \"primate\", \"prince\", \"princess\", \"principal\", \"principle\", \"print\", \"printer\", \"printing\", \"prior\", \"priority\", \"prison\", \"prisoner\", \"privacy\", \"private\", \"privilege\", \"prize\", \"prizefight\", \"probability\", \"probation\", \"probe\", \"problem\", \"procedure\", \"proceedings\", \"process\", \"processing\", \"processor\", \"proctor\", \"procurement\", \"produce\", \"producer\", \"product\", \"production\", \"productivity\", \"profession\", \"professional\", \"professor\", \"profile\", \"profit\", \"progenitor\", \"program\", \"programme\", \"programming\", \"progress\", \"progression\", \"prohibition\", \"project\", \"promenade\", \"promise\", \"promotion\", \"prompt\", \"pronoun\", \"proof\", \"propaganda\", \"propane\", \"property\", \"prophet\", \"proponent\", \"proportion\", \"proposal\", \"proposition\", \"proprietor\", \"prose\", \"prosecution\", \"prosecutor\", \"prospect\", \"prosperity\", \"prostanoid\", \"prostrate\", \"protection\", \"protein\", \"protest\", \"protocol\", \"providence\", \"provider\", \"province\", \"provision\", \"prow\", \"proximal\", \"proximity\", \"prune\", \"pruner\", \"psychology\", \"pub\", \"public\", \"publication\", \"publicity\", \"publisher\", \"publishing\", \"pudding\", \"puddle\", \"puffin\", \"pug\", \"puggle\", \"pulley\", \"pulse\", \"puma\", \"pump\", \"pumpernickel\", \"pumpkin\", \"pumpkinseed\", \"pun\", \"punch\", \"punctuation\", \"punishment\", \"pup\", \"pupa\", \"pupil\", \"puppet\", \"puppy\", \"purchase\", \"purity\", \"purple\", \"purpose\", \"purr\", \"purse\", \"pursuit\", \"push\", \"put\", \"puzzle\", \"pyramid\", \"quadrant\", \"quail\", \"qualification\", \"quality\", \"quantity\", \"quart\", \"quarter\", \"quartet\", \"quartz\", \"queen\", \"query\", \"quest\", \"question\", \"questioner\", \"questionnaire\", \"quiche\", \"quicksand\", \"quiet\", \"quill\", \"quilt\", \"quince\", \"quinoa\", \"quit\", \"quiver\", \"quota\", \"quotation\", \"quote\", \"rabbit\", \"raccoon\", \"race\", \"racer\", \"racing\", \"rack\", \"radar\", \"radiator\", \"radio\", \"radish\", \"raffle\", \"raft\", \"rag\", \"rage\", \"raid\", \"rail\", \"railing\", \"railroad\", \"railway\", \"raiment\", \"rain\", \"rainbow\", \"raincoat\", \"rainmaker\", \"rainstorm\", \"rainy\", \"raise\", \"raisin\", \"rake\", \"rally\", \"ram\", \"rambler\", \"ramen\", \"ramie\", \"ranch\", \"rancher\", \"range\", \"ranger\", \"rank\", \"rap\", \"raspberry\", \"rat\", \"rate\", \"ratepayer\", \"rating\", \"ratio\", \"rationale\", \"rations\", \"raven\", \"ravioli\", \"rawhide\", \"ray\", \"rayon\", \"razor\", \"reach\", \"reactant\", \"reaction\", \"read\", \"reader\", \"readiness\", \"reading\", \"real\", \"reality\", \"realization\", \"realm\", \"reamer\", \"rear\", \"reason\", \"reasoning\", \"rebel\", \"rebellion\", \"reboot\", \"recall\", \"receipt\", \"receiver\", \"reception\", \"receptor\", \"recess\", \"recession\", \"recipe\", \"recipient\", \"reciprocity\", \"reclamation\", \"recliner\", \"recognition\", \"recollection\", \"record\", \"recorder\", \"recording\", \"recovery\", \"recreation\", \"recruit\", \"rectangle\", \"red\", \"redesign\", \"redirect\", \"rediscovery\", \"reduction\", \"reef\", \"refectory\", \"reference\", \"referendum\", \"reflection\", \"reform\", \"refreshments\", \"refrigerator\", \"refuge\", \"refund\", \"refusal\", \"refuse\", \"regard\", \"regime\", \"region\", \"regionalism\", \"register\", \"registration\", \"registry\", \"regret\", \"regulation\", \"regulator\", \"reindeer\", \"reject\", \"relation\", \"relationship\", \"relative\", \"relaxation\", \"relay\", \"release\", \"reliability\", \"relief\", \"religion\", \"relish\", \"reluctance\", \"remains\", \"remark\", \"reminder\", \"remnant\", \"remote\", \"removal\", \"renaissance\", \"rent\", \"reorganisation\", \"reorganization\", \"repair\", \"reparation\", \"repayment\", \"repeat\", \"replacement\", \"replica\", \"replication\", \"reply\", \"report\", \"reporter\", \"reporting\", \"repository\", \"representation\", \"representative\", \"reprocessing\", \"republic\", \"republican\", \"reputation\", \"request\", \"requirement\", \"resale\", \"rescue\", \"research\", \"researcher\", \"resemblance\", \"reservation\", \"reserve\", \"reservoir\", \"reset\", \"residence\", \"resident\", \"residue\", \"resist\", \"resistance\", \"resolution\", \"resolve\", \"resort\", \"resource\", \"respect\", \"respite\", \"response\", \"responsibility\", \"rest\", \"restaurant\", \"restoration\", \"restriction\", \"restroom\", \"restructuring\", \"result\", \"resume\", \"retailer\", \"retention\", \"rethinking\", \"retina\", \"retirement\", \"retouching\", \"retreat\", \"retrospect\", \"retrospective\", \"return\", \"reunion\", \"reveal\", \"revelation\", \"revenant\", \"revenge\", \"revenue\", \"reversal\", \"reverse\", \"review\", \"revival\", \"revolution\", \"reward\", \"rhetoric\", \"rhinoceros\", \"rhubarb\", \"rhyme\", \"rhythm\", \"rib\", \"ribbon\", \"rice\", \"riddle\", \"ride\", \"rider\", \"ridge\", \"riding\", \"rifle\", \"right\", \"rim\", \"ring\", \"riot\", \"rip\", \"ripple\", \"rise\", \"riser\", \"risk\", \"rite\", \"ritual\", \"river\", \"riverbed\", \"rivulet\", \"road\", \"roadway\", \"roar\", \"roast\", \"robe\", \"robin\", \"robot\", \"robotics\", \"rock\", \"rocker\", \"rocket\", \"rod\", \"role\", \"roll\", \"roller\", \"romaine\", \"romance\", \"roof\", \"room\", \"roommate\", \"rooster\", \"root\", \"rope\", \"rose\", \"rosemary\", \"roster\", \"rostrum\", \"rotation\", \"round\", \"roundabout\", \"route\", \"router\", \"routine\", \"row\", \"rowboat\", \"rowing\", \"rubbish\", \"rubric\", \"ruby\", \"ruckus\", \"rudiment\", \"ruffle\", \"rug\", \"rugby\", \"ruin\", \"rule\", \"ruler\", \"ruling\", \"rum\", \"rumor\", \"run\", \"runaway\", \"runner\", \"running\", \"runway\", \"rush\", \"rust\", \"rutabaga\", \"rye\", \"sabre\", \"sac\", \"sack\", \"saddle\", \"sadness\", \"safari\", \"safe\", \"safeguard\", \"safety\", \"saffron\", \"sage\", \"sail\", \"sailboat\", \"sailing\", \"sailor\", \"saint\", \"sake\", \"salad\", \"salami\", \"salary\", \"sale\", \"salesman\", \"salmon\", \"salon\", \"saloon\", \"salsa\", \"salt\", \"salute\", \"sample\", \"samurai\", \"sanction\", \"sanctity\", \"sanctuary\", \"sand\", \"sandal\", \"sandbar\", \"sandpaper\", \"sandwich\", \"sanity\", \"sardine\", \"sari\", \"sarong\", \"sash\", \"satellite\", \"satin\", \"satire\", \"satisfaction\", \"sauce\", \"saucer\", \"sauerkraut\", \"sausage\", \"savage\", \"savannah\", \"saving\", \"savings\", \"savior\", \"saviour\", \"savory\", \"saw\", \"saxophone\", \"scaffold\", \"scale\", \"scallion\", \"scallops\", \"scalp\", \"scam\", \"scanner\", \"scarecrow\", \"scarf\", \"scenario\", \"scene\", \"scenery\", \"scent\", \"schedule\", \"scheduling\", \"schema\", \"scheme\", \"scholar\", \"scholarship\", \"school\", \"schoolhouse\", \"schooner\", \"science\", \"scientist\", \"scimitar\", \"scissors\", \"scooter\", \"scope\", \"score\", \"scorn\", \"scorpion\", \"scotch\", \"scout\", \"scow\", \"scrambled\", \"scrap\", \"scraper\", \"scratch\", \"screamer\", \"screen\", \"screening\", \"screenwriting\", \"screwdriver\", \"scrim\", \"scrip\", \"script\", \"scrutiny\", \"sculpting\", \"sculptural\", \"sculpture\", \"sea\", \"seabass\", \"seafood\", \"seagull\", \"seal\", \"seaplane\", \"search\", \"seashore\", \"seaside\", \"season\", \"seat\", \"seaweed\", \"second\", \"secrecy\", \"secret\", \"secretariat\", \"secretary\", \"section\", \"sectional\", \"sector\", \"security\", \"sediment\", \"seed\", \"seeder\", \"seeker\", \"seep\", \"segment\", \"seizure\", \"selection\", \"self\", \"seller\", \"selling\", \"semantics\", \"semester\", \"semicircle\", \"semicolon\", \"seminar\", \"senate\", \"senator\", \"sender\", \"senior\", \"sense\", \"sensibility\", \"sensitive\", \"sensitivity\", \"sensor\", \"sentence\", \"sentencing\", \"sentiment\", \"sepal\", \"separation\", \"sequel\", \"sequence\", \"serial\", \"series\", \"serum\", \"serval\", \"servant\", \"server\", \"service\", \"servitude\", \"sesame\", \"session\", \"set\", \"setback\", \"setting\", \"settlement\", \"settler\", \"severity\", \"sewer\", \"shack\", \"shackle\", \"shade\", \"shadow\", \"shadowbox\", \"shakedown\", \"shaker\", \"shallot\", \"shallows\", \"shame\", \"shampoo\", \"shanty\", \"shape\", \"share\", \"shareholder\", \"shark\", \"shaw\", \"shawl\", \"shear\", \"shearling\", \"sheath\", \"shed\", \"sheep\", \"sheet\", \"shelf\", \"shell\", \"shelter\", \"sherbet\", \"sherry\", \"shield\", \"shift\", \"shin\", \"shine\", \"shingle\", \"ship\", \"shipper\", \"shipping\", \"shipyard\", \"shirt\", \"shirtdress\", \"shoat\", \"shock\", \"shoe\", \"shoehorn\", \"shoelace\", \"shoemaker\", \"shoes\", \"shoestring\", \"shofar\", \"shoot\", \"shootdown\", \"shop\", \"shopper\", \"shopping\", \"shore\", \"shoreline\", \"short\", \"shortage\", \"shorts\", \"shortwave\", \"shot\", \"shoulder\", \"shout\", \"shovel\", \"show\", \"shower\", \"shred\", \"shrimp\", \"shrine\", \"shutdown\", \"sibling\", \"sick\", \"sickness\", \"side\", \"sideboard\", \"sideburns\", \"sidecar\", \"sidestream\", \"sidewalk\", \"siding\", \"siege\", \"sigh\", \"sight\", \"sightseeing\", \"sign\", \"signal\", \"signature\", \"signet\", \"significance\", \"signify\", \"signup\", \"silence\", \"silica\", \"silicon\", \"silk\", \"silkworm\", \"sill\", \"silly\", \"silo\", \"silver\", \"similarity\", \"simple\", \"simplicity\", \"singer\", \"singing\", \"singular\", \"sink\", \"sinuosity\", \"sip\", \"sir\", \"sister\", \"sitar\", \"site\", \"situation\", \"size\", \"skate\", \"skating\", \"skean\", \"skeleton\", \"ski\", \"skiing\", \"skill\", \"skin\", \"skirt\", \"skull\", \"skullcap\", \"skunk\", \"sky\", \"skylight\", \"skyline\", \"skyscraper\", \"skywalk\", \"slang\", \"slapstick\", \"slash\", \"slate\", \"slaw\", \"sled\", \"sledge\", \"sleep\", \"sleepiness\", \"sleeping\", \"sleet\", \"sleuth\", \"slice\", \"slide\", \"slider\", \"slime\", \"slip\", \"slipper\", \"slippers\", \"slope\", \"slot\", \"sloth\", \"slump\", \"smell\", \"smelting\", \"smile\", \"smith\", \"smock\", \"smog\", \"smoke\", \"smoking\", \"smolt\", \"smuggling\", \"snack\", \"snail\", \"snake\", \"snakebite\", \"snap\", \"snarl\", \"sneaker\", \"sneakers\", \"sneeze\", \"sniffle\", \"snob\", \"snorer\", \"snow\", \"snowboarding\", \"snowflake\", \"snowman\", \"snowmobiling\", \"snowplow\", \"snowstorm\", \"snowsuit\", \"snuck\", \"snug\", \"snuggle\", \"soap\", \"soccer\", \"socialism\", \"socialist\", \"society\", \"sociology\", \"sock\", \"socks\", \"soda\", \"sofa\", \"softball\", \"softdrink\", \"softening\", \"software\", \"soil\", \"soldier\", \"sole\", \"solicitation\", \"solicitor\", \"solidarity\", \"solidity\", \"soliloquy\", \"solitaire\", \"solution\", \"solvency\", \"sombrero\", \"somebody\", \"someone\", \"someplace\", \"somersault\", \"something\", \"somewhere\", \"son\", \"sonar\", \"sonata\", \"song\", \"songbird\", \"sonnet\", \"soot\", \"sophomore\", \"soprano\", \"sorbet\", \"sorghum\", \"sorrel\", \"sorrow\", \"sort\", \"soul\", \"soulmate\", \"sound\", \"soundness\", \"soup\", \"source\", \"sourwood\", \"sousaphone\", \"south\", \"southeast\", \"souvenir\", \"sow\", \"soy\", \"soybean\", \"space\", \"spacing\", \"spade\", \"spaghetti\", \"span\", \"spandex\", \"sparerib\", \"spark\", \"sparrow\", \"spasm\", \"spat\", \"spatula\", \"spawn\", \"speaker\", \"speakerphone\", \"speaking\", \"spear\", \"spec\", \"special\", \"specialist\", \"specialty\", \"species\", \"specification\", \"spectacle\", \"spectacles\", \"spectrum\", \"speculation\", \"speech\", \"speed\", \"speedboat\", \"spell\", \"spelling\", \"spelt\", \"spending\", \"sphere\", \"sphynx\", \"spice\", \"spider\", \"spiderling\", \"spike\", \"spill\", \"spinach\", \"spine\", \"spiral\", \"spirit\", \"spit\", \"spite\", \"spleen\", \"splendor\", \"split\", \"spokesman\", \"spokeswoman\", \"sponge\", \"sponsor\", \"sponsorship\", \"spool\", \"spoon\", \"spork\", \"sport\", \"sportsman\", \"spot\", \"spotlight\", \"spouse\", \"sprag\", \"sprat\", \"spray\", \"spread\", \"spreadsheet\", \"spree\", \"spring\", \"sprinkles\", \"sprinter\", \"sprout\", \"spruce\", \"spud\", \"spume\", \"spur\", \"spy\", \"spyglass\", \"square\", \"squash\", \"squatter\", \"squeegee\", \"squid\", \"squirrel\", \"stab\", \"stability\", \"stable\", \"stack\", \"stacking\", \"stadium\", \"staff\", \"stag\", \"stage\", \"stain\", \"stair\", \"staircase\", \"stake\", \"stalk\", \"stall\", \"stallion\", \"stamen\", \"stamina\", \"stamp\", \"stance\", \"stand\", \"standard\", \"standing\", \"standoff\", \"standpoint\", \"star\", \"starboard\", \"start\", \"starter\", \"state\", \"statement\", \"statin\", \"station\", \"statistic\", \"statistics\", \"statue\", \"status\", \"statute\", \"stay\", \"steak\", \"stealth\", \"steam\", \"steamroller\", \"steel\", \"steeple\", \"stem\", \"stench\", \"stencil\", \"step\", \"stepdaughter\", \"stepmother\", \"stepson\", \"stereo\", \"stew\", \"steward\", \"stick\", \"sticker\", \"stiletto\", \"still\", \"stimulation\", \"stimulus\", \"sting\", \"stinger\", \"stitch\", \"stitcher\", \"stock\", \"stockings\", \"stole\", \"stomach\", \"stone\", \"stonework\", \"stool\", \"stop\", \"stopsign\", \"stopwatch\", \"storage\", \"store\", \"storey\", \"storm\", \"story\", \"storyboard\", \"stot\", \"stove\", \"strait\", \"strand\", \"stranger\", \"strap\", \"strategy\", \"straw\", \"strawberry\", \"strawman\", \"stream\", \"street\", \"streetcar\", \"strength\", \"stress\", \"stretch\", \"strife\", \"strike\", \"string\", \"strip\", \"stripe\", \"strobe\", \"stroke\", \"structure\", \"strudel\", \"struggle\", \"stucco\", \"student\", \"studio\", \"study\", \"stuff\", \"stumbling\", \"stump\", \"stupidity\", \"sturgeon\", \"sty\", \"style\", \"styling\", \"stylus\", \"sub\", \"subcomponent\", \"subconscious\", \"subcontractor\", \"subgroup\", \"subject\", \"submarine\", \"submitter\", \"subprime\", \"subroutine\", \"subscription\", \"subsection\", \"subset\", \"subsidence\", \"subsidiary\", \"subsidy\", \"substance\", \"substitution\", \"subtitle\", \"suburb\", \"subway\", \"success\", \"succotash\", \"suede\", \"suet\", \"sugar\", \"suggestion\", \"suit\", \"suitcase\", \"suite\", \"sulfur\", \"sultan\", \"sum\", \"summary\", \"summer\", \"summit\", \"sun\", \"sunbeam\", \"sunbonnet\", \"sundae\", \"sunday\", \"sundial\", \"sunflower\", \"sunglasses\", \"sunlamp\", \"sunlight\", \"sunrise\", \"sunroom\", \"sunset\", \"sunshine\", \"superiority\", \"supermarket\", \"supernatural\", \"supervision\", \"supervisor\", \"supper\", \"supplement\", \"supplier\", \"supply\", \"support\", \"supporter\", \"suppression\", \"supreme\", \"surface\", \"surfboard\", \"surge\", \"surgeon\", \"surgery\", \"surname\", \"surplus\", \"surprise\", \"surround\", \"surroundings\", \"surrounds\", \"survey\", \"survival\", \"survivor\", \"sushi\", \"suspect\", \"suspenders\", \"suspension\", \"sustainment\", \"sustenance\", \"swallow\", \"swamp\", \"swan\", \"swanling\", \"swath\", \"sweat\", \"sweater\", \"sweatshirt\", \"sweatshop\", \"sweatsuit\", \"sweets\", \"swell\", \"swim\", \"swimming\", \"swimsuit\", \"swine\", \"swing\", \"switch\", \"switchboard\", \"switching\", \"swivel\", \"sword\", \"swordfight\", \"swordfish\", \"sycamore\", \"symbol\", \"symmetry\", \"sympathy\", \"symptom\", \"syndicate\", \"syndrome\", \"synergy\", \"synonym\", \"synthesis\", \"syrup\", \"system\", \"tab\", \"tabby\", \"tabernacle\", \"table\", \"tablecloth\", \"tablet\", \"tabletop\", \"tachometer\", \"tackle\", \"taco\", \"tactics\", \"tactile\", \"tadpole\", \"tag\", \"tail\", \"tailbud\", \"tailor\", \"tailspin\", \"takeover\", \"tale\", \"talent\", \"talk\", \"talking\", \"tamale\", \"tambour\", \"tambourine\", \"tan\", \"tandem\", \"tangerine\", \"tank\", \"tanker\", \"tankful\", \"tap\", \"tape\", \"tapioca\", \"target\", \"taro\", \"tarragon\", \"tart\", \"task\", \"tassel\", \"taste\", \"tatami\", \"tattler\", \"tattoo\", \"tavern\", \"tax\", \"taxi\", \"taxicab\", \"taxpayer\", \"tea\", \"teacher\", \"teaching\", \"team\", \"teammate\", \"teapot\", \"tear\", \"tech\", \"technician\", \"technique\", \"technology\", \"tectonics\", \"teen\", \"teenager\", \"teepee\", \"telephone\", \"telescreen\", \"teletype\", \"television\", \"tell\", \"teller\", \"temp\", \"temper\", \"temperature\", \"tempo\", \"temporary\", \"temptation\", \"temptress\", \"tenant\", \"tendency\", \"tender\", \"tenement\", \"tenet\", \"tennis\", \"tenor\", \"tension\", \"tensor\", \"tent\", \"tentacle\", \"tenth\", \"tepee\", \"teriyaki\", \"term\", \"terminal\", \"termination\", \"terminology\", \"termite\", \"terrace\", \"terracotta\", \"terrapin\", \"terrarium\", \"territory\", \"test\", \"testament\", \"testimonial\", \"testimony\", \"testing\", \"text\", \"textbook\", \"textual\", \"texture\", \"thanks\", \"thaw\", \"theater\", \"theft\", \"theme\", \"theory\", \"therapist\", \"therapy\", \"thermals\", \"thermometer\", \"thermostat\", \"thesis\", \"thickness\", \"thief\", \"thigh\", \"thing\", \"thinking\", \"thirst\", \"thistle\", \"thorn\", \"thought\", \"thousand\", \"thread\", \"threat\", \"threshold\", \"thrift\", \"thrill\", \"throat\", \"throne\", \"thrust\", \"thug\", \"thumb\", \"thump\", \"thunder\", \"thunderbolt\", \"thunderhead\", \"thunderstorm\", \"thyme\", \"tiara\", \"tic\", \"tick\", \"ticket\", \"tide\", \"tie\", \"tiger\", \"tights\", \"tile\", \"till\", \"tilt\", \"timbale\", \"timber\", \"time\", \"timeline\", \"timeout\", \"timer\", \"timetable\", \"timing\", \"timpani\", \"tin\", \"tinderbox\", \"tinkle\", \"tintype\", \"tip\", \"tire\", \"tissue\", \"titanium\", \"title\", \"toad\", \"toast\", \"toaster\", \"today\", \"toe\", \"toffee\", \"tofu\", \"tog\", \"toga\", \"toilet\", \"tolerance\", \"tolerant\", \"toll\", \"tomatillo\", \"tomato\", \"tomb\", \"tomography\", \"tomorrow\", \"ton\", \"tonality\", \"tone\", \"tongue\", \"tonic\", \"tonight\", \"tool\", \"toot\", \"tooth\", \"toothbrush\", \"toothpaste\", \"toothpick\", \"top\", \"topic\", \"topsail\", \"toque\", \"toreador\", \"tornado\", \"torso\", \"torte\", \"tortellini\", \"tortilla\", \"tortoise\", \"total\", \"tote\", \"touch\", \"tour\", \"tourism\", \"tourist\", \"tournament\", \"towel\", \"tower\", \"town\", \"townhouse\", \"township\", \"toy\", \"trace\", \"track\", \"tracking\", \"tracksuit\", \"tract\", \"tractor\", \"trade\", \"trader\", \"trading\", \"tradition\", \"traffic\", \"trafficker\", \"tragedy\", \"trail\", \"trailer\", \"trailpatrol\", \"train\", \"trainer\", \"training\", \"trait\", \"tram\", \"trance\", \"transaction\", \"transcript\", \"transfer\", \"transit\", \"transition\", \"translation\", \"transmission\", \"transom\", \"transparency\", \"transport\", \"trap\", \"trapdoor\", \"trash\", \"travel\", \"traveler\", \"tray\", \"treasure\", \"treasury\", \"treat\", \"treatment\", \"treaty\", \"tree\", \"trek\", \"trellis\", \"tremor\", \"trench\", \"trend\", \"triad\", \"trial\", \"triangle\", \"tribe\", \"tributary\", \"trick\", \"trigger\", \"trigonometry\", \"trillion\", \"trim\", \"trinket\", \"trip\", \"tripod\", \"tritone\", \"triumph\", \"trolley\", \"trombone\", \"troop\", \"trooper\", \"trophy\", \"trouble\", \"trousers\", \"trout\", \"trove\", \"trowel\", \"truck\", \"trumpet\", \"trunk\", \"trust\", \"trustee\", \"truth\", \"try\", \"tsunami\", \"tub\", \"tuba\", \"tube\", \"tuber\", \"tug\", \"tugboat\", \"tuition\", \"tulip\", \"tumbler\", \"tummy\", \"tuna\", \"tune\", \"tunic\", \"tunnel\", \"turban\", \"turf\", \"turkey\", \"turmeric\", \"turn\", \"turning\", \"turnip\", \"turnover\", \"turnstile\", \"turret\", \"turtle\", \"tusk\", \"tussle\", \"tutu\", \"tuxedo\", \"tweet\", \"tweezers\", \"twig\", \"twilight\", \"twine\", \"twins\", \"twist\", \"twister\", \"twitter\", \"type\", \"typeface\", \"typewriter\", \"typhoon\", \"ukulele\", \"ultimatum\", \"umbrella\", \"unblinking\", \"uncertainty\", \"uncle\", \"underestimate\", \"underground\", \"underneath\", \"underpass\", \"understanding\", \"understatement\", \"undertaker\", \"underwear\", \"underweight\", \"underwire\", \"underwriting\", \"unemployment\", \"unibody\", \"uniform\", \"uniformity\", \"union\", \"unique\", \"unit\", \"unity\", \"universe\", \"university\", \"update\", \"upgrade\", \"uplift\", \"upper\", \"upstairs\", \"upward\", \"urge\", \"urgency\", \"urn\", \"usage\", \"use\", \"user\", \"usher\", \"usual\", \"utensil\", \"utilisation\", \"utility\", \"utilization\", \"vacation\", \"vacuum\", \"vagrant\", \"valance\", \"valentine\", \"validate\", \"validity\", \"valley\", \"valuable\", \"value\", \"vampire\", \"van\", \"vane\", \"vanilla\", \"vanity\", \"variability\", \"variable\", \"variant\", \"variation\", \"variety\", \"vascular\", \"vase\", \"vault\", \"vaulting\", \"veal\", \"vector\", \"vegetable\", \"vegetarian\", \"vegetation\", \"vehicle\", \"veil\", \"vein\", \"veldt\", \"vellum\", \"velocity\", \"velodrome\", \"velvet\", \"vendor\", \"veneer\", \"vengeance\", \"venison\", \"venom\", \"venti\", \"venture\", \"venue\", \"veranda\", \"verb\", \"verdict\", \"verification\", \"vermicelli\", \"vernacular\", \"verse\", \"version\", \"vertigo\", \"verve\", \"vessel\", \"vest\", \"vestment\", \"vet\", \"veteran\", \"veterinarian\", \"veto\", \"viability\", \"vibe\", \"vibraphone\", \"vibration\", \"vibrissae\", \"vice\", \"vicinity\", \"victim\", \"victory\", \"video\", \"view\", \"viewer\", \"vignette\", \"villa\", \"village\", \"vine\", \"vinegar\", \"vineyard\", \"vintage\", \"vintner\", \"vinyl\", \"viola\", \"violet\", \"violin\", \"virtue\", \"virus\", \"visa\", \"viscose\", \"vise\", \"vision\", \"visit\", \"visitor\", \"visor\", \"vista\", \"visual\", \"vitality\", \"vitamin\", \"vitro\", \"vivo\", \"vixen\", \"vodka\", \"vogue\", \"voice\", \"void\", \"vol\", \"volatility\", \"volcano\", \"volleyball\", \"volume\", \"volunteer\", \"vote\", \"voter\", \"voting\", \"voyage\", \"vulture\", \"wad\", \"wafer\", \"waffle\", \"wage\", \"wagon\", \"waist\", \"waistband\", \"wait\", \"waiter\", \"waiting\", \"waitress\", \"waiver\", \"wake\", \"walk\", \"walker\", \"walking\", \"walkway\", \"wall\", \"wallaby\", \"wallet\", \"walnut\", \"walrus\", \"wannabe\", \"want\", \"war\", \"warden\", \"wardrobe\", \"warlock\", \"warlord\", \"warming\", \"warmth\", \"warning\", \"warrant\", \"warren\", \"warrior\", \"wasabi\", \"wash\", \"washbasin\", \"washcloth\", \"washer\", \"washtub\", \"wasp\", \"waste\", \"wastebasket\", \"wasting\", \"watch\", \"watcher\", \"watchmaker\", \"water\", \"watercress\", \"waterfall\", \"waterfront\", \"watermelon\", \"waterskiing\", \"waterspout\", \"waterwheel\", \"wave\", \"waveform\", \"wax\", \"way\", \"weakness\", \"wealth\", \"weapon\", \"wear\", \"weasel\", \"weather\", \"web\", \"webinar\", \"webmail\", \"webpage\", \"website\", \"wedding\", \"wedge\", \"weeder\", \"weedkiller\", \"week\", \"weekend\", \"weekender\", \"weight\", \"weird\", \"welcome\", \"welfare\", \"well\", \"west\", \"western\", \"wetland\", \"wetsuit\", \"whack\", \"whale\", \"wharf\", \"wheat\", \"wheel\", \"whey\", \"whip\", \"whirlpool\", \"whirlwind\", \"whisker\", \"whiskey\", \"whisper\", \"whistle\", \"white\", \"whole\", \"wholesale\", \"wholesaler\", \"whorl\", \"wick\", \"widget\", \"widow\", \"width\", \"wife\", \"wifi\", \"wild\", \"wildebeest\", \"wilderness\", \"wildlife\", \"will\", \"willow\", \"win\", \"wind\", \"windage\", \"window\", \"windscreen\", \"windshield\", \"wine\", \"winery\", \"wing\", \"wingman\", \"wingtip\", \"wink\", \"winner\", \"winter\", \"wire\", \"wiretap\", \"wiring\", \"wisdom\", \"wiseguy\", \"wish\", \"wisteria\", \"wit\", \"witch\", \"withdrawal\", \"witness\", \"wok\", \"wolf\", \"woman\", \"wombat\", \"wonder\", \"wont\", \"wood\", \"woodchuck\", \"woodland\", \"woodshed\", \"woodwind\", \"wool\", \"woolens\", \"word\", \"wording\", \"work\", \"workbench\", \"worker\", \"workforce\", \"workhorse\", \"working\", \"workout\", \"workplace\", \"workshop\", \"world\", \"worm\", \"worry\", \"worth\", \"wound\", \"wrap\", \"wraparound\", \"wrapper\", \"wrapping\", \"wreck\", \"wrecker\", \"wren\", \"wrench\", \"wrestler\", \"wriggler\", \"wrinkle\", \"wrist\", \"writer\", \"writing\", \"wrong\", \"xylophone\", \"yacht\", \"yahoo\", \"yak\", \"yam\", \"yang\", \"yard\", \"yarn\", \"yawl\", \"year\", \"yeast\", \"yellow\", \"yesterday\", \"yew\", \"yin\", \"yoga\", \"yogurt\", \"yoke\", \"yolk\", \"young\", \"youngster\", \"yourself\", \"youth\", \"yoyo\", \"yurt\", \"zebra\", \"zebrafish\", \"zen\", \"zephyr\", \"zero\", \"ziggurat\", \"zinc\", \"zipper\", \"zither\", \"zombie\", \"zone\", \"zoo\", \"zoologist\", \"zoology\", \"zucchini\"];","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar sync_1 = __importDefault(require(\"csv-parse/lib/sync\"));\n\nvar generate = require('csv-generate/lib/sync');\n\nvar fs_1 = __importDefault(require(\"fs\"));\n\nvar ballotTracker_1 = require(\"./ballotTracker\");\n\nfunction translateCSV(fileName) {\n  var csv = fs_1.default.readFileSync(fileName).toString();\n  var records = sync_1.default(csv, {\n    delimiter: '|'\n  });\n  records.map(function (record) {\n    return record[0] = ballotTracker_1.makeBallotTrackerFromString(record[0]);\n  });\n  var flatRecords = records.map(function (record) {\n    return record.join('|');\n  });\n  var csvResult = flatRecords.join('\\n');\n  return csvResult;\n}\n\nexports.translateCSV = translateCSV;","export default {\r\n  CHECK_ICON: '✓',\r\n  FONT_SIZES: [18, 24, 28, 32],\r\n  TEXT_SIZE: 1,\r\n  YES_NO_VOTES: {\r\n    no: 'No',\r\n    yes: 'Yes',\r\n  },\r\n}\r\n","const mod = (x: number, n: number) => ((x % n) + n) % n\r\nexport default mod\r\n","import mod from '../utils/mod'\r\n\r\nfunction getFocusableElements(): HTMLElement[] {\r\n  const tabbableElements = Array.from(\r\n    document.querySelectorAll(\r\n      'button:not([aria-hidden=\"true\"]):not([disabled]), input:not([aria-hidden=\"true\"]):not([disabled])'\r\n    )\r\n  )\r\n  const ariaHiddenTabbableElements = Array.from(\r\n    document.querySelectorAll(\r\n      '[aria-hidden=\"true\"] button, [aria-hidden=\"true\"] input'\r\n    )\r\n  )\r\n  return tabbableElements.filter(\r\n    element => ariaHiddenTabbableElements.indexOf(element) === -1\r\n  ) as HTMLElement[]\r\n}\r\n\r\nconst getActiveElement = () => document.activeElement! as HTMLInputElement\r\n\r\nfunction handleArrowUp() {\r\n  const focusable = getFocusableElements()\r\n  const currentIndex = focusable.indexOf(getActiveElement())\r\n  /* istanbul ignore else */\r\n  if (focusable.length) {\r\n    if (currentIndex > -1) {\r\n      focusable[mod(currentIndex - 1, focusable.length)].focus()\r\n    } else {\r\n      focusable[focusable.length - 1].focus()\r\n    }\r\n  }\r\n}\r\n\r\nfunction handleArrowDown() {\r\n  const focusable = getFocusableElements()\r\n  const currentIndex = focusable.indexOf(getActiveElement())\r\n  /* istanbul ignore else */\r\n  if (focusable.length) {\r\n    focusable[mod(currentIndex + 1, focusable.length)].focus()\r\n  }\r\n}\r\n\r\nfunction handleArrowLeft() {\r\n  const prevButton = document.getElementById('previous') as HTMLButtonElement\r\n  if (prevButton) {\r\n    prevButton.click()\r\n  }\r\n}\r\n\r\nfunction handleArrowRight() {\r\n  const nextButton = document.getElementById('next') as HTMLButtonElement\r\n  if (nextButton) {\r\n    nextButton.click()\r\n  }\r\n}\r\n\r\nfunction handleClick() {\r\n  getActiveElement().click()\r\n}\r\n\r\nexport function handleGamepadButtonDown(buttonName: string) {\r\n  switch (buttonName) {\r\n    case 'DPadUp':\r\n      handleArrowUp()\r\n      break\r\n    case 'A':\r\n    case 'DPadDown':\r\n      handleArrowDown()\r\n      break\r\n    case 'DPadLeft':\r\n      handleArrowLeft()\r\n      break\r\n    case 'DPadRight':\r\n      handleArrowRight()\r\n      break\r\n    case 'B':\r\n      handleClick()\r\n      break\r\n    // no default\r\n  }\r\n}\r\n\r\n// Add Cypress tests if this solution will become permanent\r\n// https://docs.cypress.io/api/commands/type.html\r\nexport /* istanbul ignore next - triggering keystrokes issue - https://github.com/votingworks/bmd/issues/62 */ function handleGamepadKeyboardEvent(\r\n  event: KeyboardEvent\r\n) {\r\n  switch (event.key) {\r\n    case 'ArrowUp':\r\n      handleArrowUp()\r\n      break\r\n    case '[':\r\n    case 'ArrowDown':\r\n      handleArrowDown()\r\n      break\r\n    case 'ArrowLeft':\r\n      handleArrowLeft()\r\n      break\r\n    case 'ArrowRight':\r\n      handleArrowRight()\r\n      break\r\n    case ']':\r\n    case 'Enter':\r\n      handleClick()\r\n      break\r\n    // no default\r\n  }\r\n}\r\n","import { createContext } from 'react'\r\nimport GLOBALS from '../config/globals'\r\n\r\nimport { BallotContextInterface, TextSizeSetting } from '../config/types'\r\n\r\nconst ballot: BallotContextInterface = {\r\n  activateBallot: () => undefined,\r\n  ballotStyleId: '',\r\n  contests: [],\r\n  election: undefined,\r\n  markVoterCardUsed: async () => false,\r\n  precinctId: '',\r\n  resetBallot: () => undefined,\r\n  setUserSettings: () => undefined,\r\n  updateVote: () => undefined,\r\n  userSettings: { textSize: GLOBALS.TEXT_SIZE as TextSizeSetting },\r\n  votes: {},\r\n}\r\n\r\nconst BallotContext = createContext(ballot)\r\n\r\nexport default BallotContext\r\n","import styled from 'styled-components'\r\n\r\ninterface Props {\r\n  noPadding?: boolean\r\n  noOverflow?: boolean\r\n}\r\n\r\nconst Main = styled('main')<Props>`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  overflow: ${({ noOverflow = false }) => (noOverflow ? undefined : 'auto')};\r\n  padding: ${({ noPadding = false }) =>\r\n    noPadding ? undefined : '1rem 0.5rem 2rem'};\r\n  @media (min-width: 480px) {\r\n    padding: ${({ noPadding = false }) =>\r\n      noPadding ? undefined : '2rem 1rem'};\r\n  }\r\n  @media print {\r\n    justify-content: flex-start;\r\n    padding: 0;\r\n  }\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }    \r\n`\r\n\r\ninterface ChildProps {\r\n  center?: boolean\r\n  centerVertical?: boolean\r\n  centerHorizontal?: boolean\r\n  padded?: boolean\r\n}\r\n\r\nexport const MainChild = styled('div')<ChildProps>`\r\n  margin: ${({\r\n    center = false,\r\n    centerVertical = center,\r\n    centerHorizontal = center,\r\n  }) => `${centerVertical ? 'auto' : '0'} ${centerHorizontal ? 'auto' : '0'}`};\r\n  width: 100%;\r\n  max-width: 35rem;\r\n  padding: ${({ padded = false }) => (padded ? '1rem' : undefined)};\r\n  @media print {\r\n    margin: 0;\r\n    max-width: 100%;\r\n  }\r\n  `\r\n\r\nexport default Main\r\n","import styled from 'styled-components'\r\n\r\ninterface Props {\r\n  textCenter?: boolean\r\n  compact?: boolean\r\n}\r\n\r\nconst Prose = styled('div')<Props>`\r\n  margin: ${({ textCenter }) => (textCenter ? 'auto' : undefined)};\r\n  width: 100%;\r\n  max-width: 66ch;\r\n  text-align: ${({ textCenter }) => (textCenter ? 'center' : undefined)};\r\n  line-height: 1.2;\r\n  @media (min-width: 480px) {\r\n    line-height: 1.3;\r\n  }\r\n  & h1 {\r\n    margin: 2rem 0 1rem;\r\n    line-height: 1.1;\r\n    font-size: 1.5rem;\r\n  }\r\n  & h2 {\r\n    margin: 1.5rem 0 0.75rem;\r\n    font-size: 1.25rem;\r\n  }\r\n  & h3,\r\n  & p {\r\n    margin-top: ${({ compact }) => (compact ? '0' : '1rem')};\r\n    margin-bottom: ${({ compact }) => (compact ? '0' : '1rem')};\r\n    font-size: 1rem;\r\n  }\r\n  & h1 + h2 {\r\n    margin-top: -0.75rem;\r\n  }\r\n  & h1 + p,\r\n  & h2 + p {\r\n    margin-top: -0.75rem;\r\n  }\r\n  & h3 + p {\r\n    margin-top: ${({ compact }) => (compact ? 0 : '-1rem')};\r\n  }\r\n  & :first-child {\r\n    margin-top: 0;\r\n  }\r\n  & :last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nexport default Prose\r\n","import QRCodeReact from 'qrcode.react'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ResponsiveSvgWrapper = styled.div`\r\n  & > svg {\r\n    display: block; /* svg is \"inline\" by default */\r\n    width: 100%; /* reset width */\r\n    height: auto; /* reset height */\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  value: string\r\n}\r\n\r\nconst QRCode = ({ value }: Props) => (\r\n  <ResponsiveSvgWrapper>\r\n    <QRCodeReact renderAs=\"svg\" value={value} level=\"H\" />\r\n  </ResponsiveSvgWrapper>\r\n)\r\n\r\nexport default QRCode\r\n","import React, { useContext, useState } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nimport { ActivationData, Election, Precinct } from '../config/types'\r\n\r\nimport BallotContext from '../contexts/ballotContext'\r\n\r\nimport Main, { MainChild } from '../components/Main'\r\nimport Prose from '../components/Prose'\r\nimport QRCode from '../components/QRCode'\r\n\r\nconst Legend = styled.legend`\r\n  margin: auto;\r\n`\r\nconst CodeBox = styled.div`\r\n  margin: auto;\r\n  border: 1rem solid #ffffff;\r\n  max-width: 320px;\r\n`\r\n\r\nlet resetBallotCode: number\r\n\r\nconst ActivationPage = (props: RouteComponentProps) => {\r\n  const { election: contextElection, activateBallot } = useContext(\r\n    BallotContext\r\n  )\r\n  const election = contextElection as Election\r\n  const [activationCode, setActivationCode] = useState('')\r\n  const setBallot = (activationData: ActivationData) => {\r\n    clearTimeout(resetBallotCode)\r\n    activateBallot(activationData)\r\n    props.history.push('/start')\r\n  }\r\n\r\n  /* istanbul ignore next - shortcut will not exist in official release */\r\n  const takeShortcut = () => {\r\n    const ballotStyle = election.ballotStyles[0]\r\n    setBallot({\r\n      ballotStyle,\r\n      precinct: election.precincts.find(\r\n        p => p.id === ballotStyle.precincts[0]\r\n      ) as Precinct,\r\n    })\r\n  }\r\n  const decodeActivationCode = () => {\r\n    const [brand, precinctId, ballotStyleId] = activationCode.split('.')\r\n    const ballotStyle = election.ballotStyles.find(b => b.id === ballotStyleId)\r\n    const precinct = election.precincts.find(p => p.id === precinctId)\r\n    /* istanbul ignore else */\r\n    if (\r\n      brand === 'VX' &&\r\n      !!precinct &&\r\n      !!ballotStyle &&\r\n      ballotStyle.precincts.includes(precinct.id)\r\n    ) {\r\n      setBallot({ ballotStyle, precinct })\r\n    }\r\n    // TODO: add invalid code state? - https://github.com/votingworks/bmd/issues/289\r\n  }\r\n  const onSubmit = (event: React.FormEvent) => {\r\n    event.preventDefault()\r\n    decodeActivationCode()\r\n  }\r\n  // TODO: Mock jest timers\r\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    clearTimeout(resetBallotCode)\r\n    setActivationCode(event.target.value)\r\n    resetBallotCode = window.setTimeout(() => {\r\n      setActivationCode('')\r\n    }, 1000)\r\n  }\r\n  // TODO: testing for onBlur causes stack overflow error\r\n  const onBlur = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.target.focus()\r\n  }\r\n\r\n  if (election.demo) {\r\n    takeShortcut()\r\n    return <React.Fragment />\r\n  }\r\n\r\n  return (\r\n    <Main>\r\n      <MainChild center>\r\n        <form onSubmit={onSubmit}>\r\n          <fieldset>\r\n            <Legend>\r\n              <Prose textCenter>\r\n                <h1>Scan Your Activation Code</h1>\r\n                <p>Your ballot will be displayed after scan is complete.</p>\r\n                <CodeBox data-testid=\"qrContainer\" onClick={takeShortcut}>\r\n                  <QRCode value=\"VX.21.5\" />\r\n                </CodeBox>\r\n              </Prose>\r\n            </Legend>\r\n            <label\r\n              aria-hidden=\"true\"\r\n              className=\"visually-hidden\"\r\n              htmlFor=\"BallotCode\"\r\n            >\r\n              <div>Activation Code</div>\r\n              <input\r\n                aria-hidden=\"true\"\r\n                data-testid=\"activation-code\"\r\n                type=\"text\"\r\n                id=\"BallotCode\"\r\n                autoFocus // eslint-disable-line jsx-a11y/no-autofocus\r\n                onBlur={onBlur}\r\n                onChange={onChange}\r\n                value={activationCode}\r\n                autoComplete=\"off\"\r\n                autoCorrect=\"off\"\r\n                autoCapitalize=\"off\"\r\n                spellCheck={false}\r\n              />\r\n            </label>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"visually-hidden\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </fieldset>\r\n        </form>\r\n      </MainChild>\r\n    </Main>\r\n  )\r\n}\r\n\r\nexport default ActivationPage\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst BreadcrumbContainer = styled.div`\r\n  margin: 0 auto 2rem;\r\n  max-width: 600px;\r\n  padding-bottom: 2rem;\r\n  @media print {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst StepContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  position: relative;\r\n  &::before {\r\n    position: absolute;\r\n    top: 45%;\r\n    right: 12%;\r\n    left: 12%;\r\n    z-index: -1;\r\n    background-color: #c7d7df;\r\n    height: 10%;\r\n    content: '';\r\n  }\r\n`\r\n\r\ninterface StepProps {\r\n  current: boolean\r\n  completed: boolean\r\n}\r\n\r\nconst Step = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  position: relative;\r\n  padding: 0 4%;\r\n`\r\n\r\nconst StepCircle = styled.div<StepProps>`\r\n  position: relative;\r\n  border-radius: 50%;\r\n  background: ${({ completed, current }) =>\r\n    completed ? '#ffffff' : current ? '#35809c' : '#c7d7df'};\r\n  width: 100%;\r\n  height: 0;\r\n  padding-top: 100%;\r\n  & > span {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n    color: ${({ completed }) => (completed ? '#35809c' : '#ffffff')};\r\n    font-size: 7vw;\r\n    font-weight: 700;\r\n    @media (min-width: 686px) {\r\n      font-size: 2rem;\r\n    }\r\n  }\r\n`\r\n\r\nconst StepLabel = styled.div<StepProps>`\r\n  position: absolute;\r\n  margin: 0.25rem -1rem 0;\r\n  width: calc(100% + 2rem);\r\n  text-align: center;\r\n  color: ${({ current }) => (current ? undefined : '#c7d7df')};\r\n  font-weight: ${({ current }) => (current ? '600' : undefined)};\r\n`\r\n\r\nconst Breadcrumbs = ({ step }: { step: number }) => (\r\n  <BreadcrumbContainer aria-label={`Step ${step} of 4.`}>\r\n    <StepContainer>\r\n      {['Mark', 'Review', 'Print', 'Cast'].map((label, i) => {\r\n        const stepNumber = i + 1\r\n        const completed = stepNumber < step\r\n        return (\r\n          <Step key={label}>\r\n            <StepCircle current={stepNumber === step} completed={completed}>\r\n              <span>{completed ? '✓' : stepNumber}</span>\r\n              <StepLabel current={stepNumber === step} completed={completed}>\r\n                {label}\r\n              </StepLabel>\r\n            </StepCircle>\r\n          </Step>\r\n        )\r\n      })}\r\n    </StepContainer>\r\n  </BreadcrumbContainer>\r\n)\r\n\r\nexport default Breadcrumbs\r\n","import styled from 'styled-components'\r\n\r\ninterface Props {\r\n  dark?: boolean\r\n  secondary?: boolean\r\n  separatePrimaryButton?: boolean\r\n  centerOnlyChild?: boolean\r\n}\r\n\r\nconst ButtonBar = styled('nav')<Props>`\r\n  display: flex;\r\n  flex-wrap: wrap-reverse;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  order: ${({ secondary }) => (secondary ? '-1' : undefined)};\r\n  border-bottom: 1px solid rgb(169, 169, 169);\r\n  background: ${({ dark = true }) =>\r\n    dark ? '#455a64' : 'rgba(0, 0, 0, 0.05)'};\r\n  padding: 0.25rem;\r\n\r\n  & > *:first-child {\r\n    order: 2;\r\n    @media (min-width: 480px) {\r\n      margin-left: ${({ separatePrimaryButton }) =>\r\n        separatePrimaryButton ? 'auto' : undefined};\r\n    }\r\n  }\r\n\r\n  & > * {\r\n    flex: 1;\r\n    margin: 0.25rem;\r\n    @media (min-width: 480px) {\r\n      flex: ${({ separatePrimaryButton }) =>\r\n        separatePrimaryButton ? '0' : undefined};\r\n    }\r\n  }\r\n  & > *:only-child {\r\n    @media (min-width: 480px) {\r\n      flex: 0;\r\n      margin: ${({ centerOnlyChild = true }) =>\r\n        centerOnlyChild ? 'auto' : undefined};\r\n      min-width: 33.333%;\r\n    }\r\n  }\r\n  @media print {\r\n    display: none;\r\n  }\r\n`\r\n\r\nexport default ButtonBar\r\n","import styled, { css } from 'styled-components'\r\n\r\ninterface Attrs extends HTMLButtonElement {\r\n  readonly type: string\r\n}\r\n\r\nexport interface ButtonInterface {\r\n  readonly danger?: boolean\r\n  readonly primary?: boolean\r\n  readonly fullWidth?: boolean\r\n  readonly small?: boolean\r\n  readonly big?: boolean\r\n}\r\n\r\ninterface Props\r\n  extends ButtonInterface,\r\n    React.PropsWithoutRef<JSX.IntrinsicElements['button']> {}\r\n\r\nconst buttonStyles = css<Props>`\r\n  border: none;\r\n  border-radius: 0.25rem;\r\n  box-sizing: border-box;\r\n  background: ${({ danger = false, primary = false }) =>\r\n    (danger && 'red') ||\r\n    (primary && 'rgb(71, 167, 75)') ||\r\n    'rgb(211, 211, 211)'};\r\n  cursor: ${({ disabled = false }) => (disabled ? undefined : 'pointer')};\r\n  width: ${({ fullWidth = false }) => (fullWidth ? '100%' : undefined)};\r\n  padding: ${({ big = false, small = false }) =>\r\n    small ? '0.35rem 0.5rem' : big ? '1rem 1.75rem' : '0.75rem 1rem'};\r\n  line-height: 1.25;\r\n  color: ${({ disabled = false, danger = false, primary = false }) =>\r\n    (disabled && 'rgb(169, 169, 169)') ||\r\n    (danger && '#FFFFFF') ||\r\n    (primary && '#FFFFFF') ||\r\n    'black'};\r\n  font-size: ${({ big = false }) => (big ? '1.25rem' : undefined)};\r\n`\r\n\r\nexport const DecoyButton = styled.div`\r\n  ${buttonStyles} /* stylelint-disable-line value-keyword-case */\r\n`\r\n\r\nconst Button = styled('button').attrs((props: Attrs) => ({\r\n  type: props.type || 'button',\r\n}))`\r\n  ${buttonStyles} /* stylelint-disable-line value-keyword-case */\r\n`\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\r\n\r\nimport Button, { ButtonInterface } from './Button'\r\nimport { ButtonEvent } from '../config/types'\r\n\r\ninterface Props\r\n  extends ButtonInterface,\r\n    RouteComponentProps<{}>,\r\n    React.PropsWithoutRef<JSX.IntrinsicElements['button']> {}\r\n\r\ninterface Props {\r\n  goBack?: boolean\r\n  primary?: boolean\r\n  to?: string\r\n}\r\n\r\nconst LinkButton = (props: Props) => {\r\n  const {\r\n    goBack,\r\n    history,\r\n    location, // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    match, // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    onClick,\r\n    staticContext, // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    to,\r\n    // ⬆ filtering out props that `button` doesn’t know what to do with.\r\n    ...rest\r\n  } = props\r\n  const handleOnClick = (event: ButtonEvent) => {\r\n    if (onClick) {\r\n      onClick(event)\r\n    }\r\n    if (goBack && !to) {\r\n      history.goBack()\r\n    }\r\n    if (to && !goBack) {\r\n      history.push(to)\r\n    }\r\n  }\r\n  return (\r\n    <Button\r\n      {...rest} // `children` is just another prop!\r\n      role=\"option\"\r\n      onClick={handleOnClick}\r\n    />\r\n  )\r\n}\r\n\r\nexport default withRouter(LinkButton)\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\n\r\nimport GLOBALS from '../config/globals'\r\n\r\ninterface Props {\r\n  bold?: boolean\r\n  center?: boolean\r\n  error?: boolean\r\n  italic?: boolean\r\n  muted?: boolean\r\n  narrow?: boolean\r\n  small?: boolean\r\n  warning?: boolean\r\n  warningIcon?: boolean\r\n  wordBreak?: boolean\r\n  white?: boolean\r\n  voteIcon?: boolean\r\n}\r\n\r\nconst iconStyles = css<Props>`\r\n  &::before {\r\n    display: inline-block;\r\n    margin-top: -0.3rem;\r\n    margin-right: 0.25rem;\r\n    border-radius: ${({ warningIcon }) => (warningIcon && '50%') || undefined};\r\n    background: ${({ warningIcon, voteIcon }) =>\r\n      (warningIcon && 'darkorange') || (voteIcon && '#028099')};\r\n    width: 1rem;\r\n    height: 1rem;\r\n    vertical-align: middle;\r\n    text-align: center;\r\n    line-height: 1.1;\r\n    color: #ffffff;\r\n    font-size: 90%;\r\n    font-weight: 800;\r\n    content: ${({ warningIcon, voteIcon }) =>\r\n      (warningIcon && `'!'`) || (voteIcon && `'${GLOBALS.CHECK_ICON}'`)};\r\n  }\r\n`\r\n\r\nconst Text = styled('p')<Props>`\r\n  margin-right: ${({ narrow }) => (narrow ? 'auto' : undefined)};\r\n  margin-left: ${({ narrow }) => (narrow ? 'auto' : undefined)};\r\n  max-width: ${({ narrow }) => (narrow ? '33ch' : undefined)};\r\n  text-align: ${({ center }) => (center ? 'center' : undefined)};\r\n  color: ${({ error, muted, warning, white }) =>\r\n    (error && 'red') ||\r\n    (warning && 'darkorange') ||\r\n    (white && '#FFFFFF') ||\r\n    (muted && 'gray') ||\r\n    undefined};\r\n  @media print {\r\n    color: ${({ error, muted, warning, white }) =>\r\n      (error && 'black') ||\r\n      (warning && 'black') ||\r\n      (white && '#FFFFFF') ||\r\n      (muted && 'black') ||\r\n      undefined};\r\n  }\r\n  font-size: ${({ small }) => (small ? '0.8rem' : undefined)};\r\n  font-weight: ${({ bold }) => (bold ? '600' : undefined)};\r\n  font-style: ${({ italic }) => (italic ? 'italic' : undefined)};\r\n  word-break: ${({ wordBreak }) => (wordBreak ? 'break-word' : undefined)};\r\n  /* stylelint-disable-next-line value-keyword-case, order/properties-order */\r\n  ${({ warningIcon, voteIcon }) => (warningIcon || voteIcon) && iconStyles}\r\n`\r\n\r\nexport const TextWithLineBreaks = ({ text }: { text: string }) => (\r\n  <React.Fragment>\r\n    {text.split(/[\\n|\\r]{2}/g).map(x => (\r\n      <p key={x}>\r\n        {x.split(/[\\n|\\r]/g).map((y, i, arr) => (\r\n          <React.Fragment key={y}>\r\n            {y}\r\n            {arr.length > 1 && i !== arr.length - 1 && <br />}\r\n          </React.Fragment>\r\n        ))}\r\n      </p>\r\n    ))}\r\n  </React.Fragment>\r\n)\r\n\r\nexport default Text\r\n","// <Prose>\r\n//   <h1 aria-label=\"Verify and Cast Your Ballot.\">\r\n//     Verify and Cast Your Ballot\r\n//   </h1>\r\n//   <Text center>Retrieve your printed ballot from the printer.</Text>\r\n//   <Instructions>\r\n//     {/* <li>\r\n//       <h2>Collect Printed Ballot.</h2>\r\n//       <p>The printer has printed your ballot.</p>\r\n//     </li> */}\r\n//     <li>\r\n//       <h2>Verify Ballot Selections.</h2>\r\n//       <p>Review and confirm all selections on your printed ballot.</p>\r\n//     </li>\r\n//     <li>\r\n//       <h2>Cast in Ballot Box.</h2>\r\n//       <p>Deposit your ballot into the secured ballot box.</p>\r\n//     </li>\r\n//   </Instructions>\r\n//   <Text center>\r\n//     I have verified my selections and will cast my ballot.\r\n//   </Text>\r\n//   <Text center>\r\n//     <LinkButton primary to=\"/\">\r\n//       Start Over\r\n//     </LinkButton>\r\n//   </Text>\r\n// </Prose>\r\n\r\nimport React, { useContext } from 'react'\r\n\r\nimport Breadcrumbs from '../components/Breadcrumbs'\r\nimport ButtonBar from '../components/ButtonBar'\r\nimport LinkButton from '../components/LinkButton'\r\nimport Main, { MainChild } from '../components/Main'\r\nimport Prose from '../components/Prose'\r\nimport Text from '../components/Text'\r\nimport BallotContext from '../contexts/ballotContext'\r\n\r\nconst VoteInstructionsPage = () => {\r\n  const { election } = useContext(BallotContext)\r\n  const { bmdConfig } = election!\r\n  const { showHelpPage, showSettingsPage } = bmdConfig!\r\n  return (\r\n    <React.Fragment>\r\n      <Main>\r\n        <MainChild center>\r\n          <Breadcrumbs step={4} />\r\n          <Prose textCenter id=\"audiofocus\">\r\n            <h1 aria-label=\"Cast your ballot.\">Cast your printed ballot</h1>\r\n            <Text narrow>\r\n              Before you cast your official printed ballot in the ballot box,\r\n              double-check your printed ballot to confirm your selections.\r\n            </Text>\r\n            <Text narrow>\r\n              If you find a mistake, ask a poll worker for help.\r\n            </Text>\r\n            <div aria-label=\"Press the down arrow to continue, then\" />\r\n            <p>\r\n              <LinkButton\r\n                primary\r\n                big\r\n                to=\"/\"\r\n                aria-label=\"Press the select button to confirm that you will review and cast your printed ballot.\"\r\n              >\r\n                Okay, I will review and cast my printed ballot.\r\n              </LinkButton>\r\n            </p>\r\n          </Prose>\r\n        </MainChild>\r\n      </Main>\r\n      <ButtonBar secondary separatePrimaryButton>\r\n        <div />\r\n        {showHelpPage && <LinkButton to=\"/help\">Help</LinkButton>}\r\n        {showSettingsPage && <LinkButton to=\"/settings\">Settings</LinkButton>}\r\n      </ButtonBar>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default VoteInstructionsPage\r\n","import { Parties } from '../config/types'\r\n\r\nexport const findPartyById = (parties: Parties, id: string) => {\r\n  return parties.find(p => p.id === id)\r\n}\r\n\r\nexport default { findPartyById }\r\n","import React, { ReactNode } from 'react'\r\nimport ReactModal from 'react-modal'\r\nimport styled from 'styled-components'\r\n\r\nimport './Modal.css'\r\n\r\nimport ButtonBar from './ButtonBar'\r\n\r\ninterface ModalContentInterface {\r\n  centerContent?: boolean\r\n}\r\n\r\nconst ModalContent = styled('div')<ModalContentInterface>`\r\n  display: flex;\r\n  flex: 1;\r\n  align-items: center;\r\n  justify-content: ${({ centerContent = false }) =>\r\n    centerContent ? 'center' : undefined};\r\n  overflow: auto;\r\n  padding: 1rem 0.5rem;\r\n  @media (min-width: 480px) {\r\n    padding: 2rem 1rem;\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  isOpen: boolean\r\n  ariaLabel?: string\r\n  content?: ReactNode\r\n  centerContent?: boolean\r\n  actions?: ReactNode\r\n  onAfterOpen?: () => void\r\n}\r\n\r\nconst Modal: React.FC<Props> = ({\r\n  actions,\r\n  content,\r\n  centerContent,\r\n  ariaLabel = 'Alert Modal',\r\n  isOpen,\r\n  onAfterOpen = () => {\r\n    window.setTimeout(() => {\r\n      const element = document.getElementById('modalaudiofocus')\r\n      if (element) {\r\n        element.focus()\r\n        element.click()\r\n      }\r\n    }, 10)\r\n  },\r\n}: Props) => (\r\n  <ReactModal\r\n    appElement={\r\n      document.getElementById('root')! || document.body.firstElementChild\r\n    }\r\n    ariaHideApp\r\n    role=\"none\"\r\n    isOpen={isOpen}\r\n    contentLabel={ariaLabel}\r\n    portalClassName=\"modal-portal\"\r\n    className=\"modal-content\"\r\n    overlayClassName=\"modal-overlay\"\r\n    onAfterOpen={onAfterOpen}\r\n  >\r\n    <ModalContent centerContent={centerContent} data-testid=\"modal-content\">\r\n      {content}\r\n    </ModalContent>\r\n    <ButtonBar as=\"div\" dark={false}>\r\n      {actions}\r\n    </ButtonBar>\r\n  </ReactModal>\r\n)\r\n\r\nexport default Modal\r\n","import camelCase from 'lodash.camelcase'\r\nimport React from 'react'\r\nimport Keyboard from 'react-simple-keyboard'\r\nimport 'react-simple-keyboard/build/css/index.css'\r\nimport styled from 'styled-components'\r\n\r\nimport { findPartyById } from '../utils/find'\r\n\r\nimport {\r\n  ButtonEvent,\r\n  Candidate,\r\n  CandidateContest as CandidateContestInterface,\r\n  CandidateVote,\r\n  InputEvent,\r\n  OptionalCandidate,\r\n  Parties,\r\n  Scrollable,\r\n  ScrollDirections,\r\n  ScrollShadows,\r\n  UpdateVoteFunction,\r\n} from '../config/types'\r\n\r\nimport BallotContext from '../contexts/ballotContext'\r\n\r\nimport GLOBALS from '../config/globals'\r\nimport Button from './Button'\r\nimport Main from './Main'\r\nimport Modal from './Modal'\r\nimport Prose from './Prose'\r\nimport Text from './Text'\r\n\r\nconst tabletMinWidth = 720\r\n\r\nconst ContentHeader = styled.div`\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  max-width: 35rem;\r\n  padding: 1rem 0.75rem 0.5rem;\r\n  @media (min-width: ${tabletMinWidth}px) {\r\n    padding: 1rem 1.5rem 0.5rem;\r\n    padding-left: 5rem;\r\n  }\r\n`\r\nconst ContestSection = styled.div`\r\n  text-transform: uppercase;\r\n  font-size: 0.85rem;\r\n  font-weight: 600;\r\n`\r\nconst VariableContentContainer = styled.div<ScrollShadows>`\r\n  display: flex;\r\n  flex: 1;\r\n  position: relative;\r\n  overflow: auto;\r\n  &::before,\r\n  &::after {\r\n    position: absolute;\r\n    z-index: 1;\r\n    width: 100%;\r\n    height: 0.25rem;\r\n    content: '';\r\n    transition: opacity 0.25s ease;\r\n  }\r\n  &::before {\r\n    top: 0;\r\n    opacity: ${({ showTopShadow }) =>\r\n      showTopShadow ? /* istanbul ignore next: Tested by Cypress */ 1 : 0};\r\n    background: linear-gradient(\r\n      to bottom,\r\n      rgb(177, 186, 190) 0%,\r\n      transparent 100%\r\n    );\r\n  }\r\n  &::after {\r\n    bottom: 0;\r\n    opacity: ${({ showBottomShadow }) =>\r\n      showBottomShadow ? /* istanbul ignore next: Tested by Cypress */ 1 : 0};\r\n    background: linear-gradient(\r\n      to bottom,\r\n      transparent 0%,\r\n      rgb(177, 186, 190) 100%\r\n    );\r\n  }\r\n`\r\nconst ScrollControls = styled.div`\r\n  display: none;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  max-width: 35rem;\r\n  padding: 0.5rem 0.75rem 0.5rem 0;\r\n  padding-left: calc(100% - 7rem);\r\n  pointer-events: none;\r\n  & > * {\r\n    pointer-events: auto;\r\n  }\r\n  html[data-useragent*='Windows'] & {\r\n    margin-left: -17px; /* Windows Chrome scrollbar width */\r\n  }\r\n  @media (min-width: ${tabletMinWidth}px) {\r\n    display: flex;\r\n  }\r\n  @media (min-width: 840px) {\r\n    left: 50%;\r\n    margin-left: -420px;\r\n    padding-left: calc(840px - 7rem);\r\n    html[data-useragent*='Windows'] & {\r\n      margin-left: calc(-420px + -17px); /* Windows Chrome scrollbar width */\r\n    }\r\n  }\r\n`\r\nconst ScrollContainer = styled.div`\r\n  flex: 1;\r\n  overflow: auto;\r\n`\r\nconst ScrollableContentWrapper = styled.div<Scrollable>`\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  max-width: 35rem;\r\n  padding: 0.5rem 0.5rem 1rem;\r\n  @media (min-width: ${tabletMinWidth}px) {\r\n    padding-right: ${({ isScrollable }) =>\r\n      isScrollable\r\n        ? /* istanbul ignore next: Tested by Cypress */ '8rem'\r\n        : '1rem'};\r\n    padding-left: 1rem;\r\n  }\r\n`\r\nconst ChoicesGrid = styled.div`\r\n  display: grid;\r\n  grid-auto-rows: minmax(auto, 1fr);\r\n  grid-gap: 0.75rem;\r\n`\r\nconst Choice = styled('label')<{ isSelected: boolean }>`\r\n  display: grid;\r\n  align-items: center;\r\n  position: relative;\r\n  border-radius: 0.125rem;\r\n  box-shadow: 0 0.125rem 0.125rem 0 rgba(0, 0, 0, 0.14),\r\n    0 0.1875rem 0.0625rem -0.125rem rgba(0, 0, 0, 0.12),\r\n    0 0.0625rem 0.3125rem 0 rgba(0, 0, 0, 0.2);\r\n  background: ${({ isSelected }) => (isSelected ? '#028099' : '#FFFFFF')};\r\n  cursor: pointer;\r\n  color: ${({ isSelected }) => (isSelected ? '#FFFFFF' : undefined)};\r\n  transition: background 0.25s, color 0.25s;\r\n  button& {\r\n    text-align: left;\r\n  }\r\n  :focus-within {\r\n    outline: rgb(77, 144, 254) dashed 0.25rem;\r\n  }\r\n  ::before {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    border-right: 1px solid;\r\n    border-color: ${({ isSelected }) =>\r\n      isSelected ? '#028099' : 'rgb(211, 211, 211)'};\r\n    border-radius: 0.125rem 0 0 0.125rem;\r\n    background: #FFFFFF;\r\n    width: 3rem;\r\n    text-align: center;\r\n    color: #028099;\r\n    font-size: 2rem;\r\n    font-weight: 700;\r\n    content: '${({ isSelected }) => (isSelected ? GLOBALS.CHECK_ICON : '')}';\r\n  }\r\n  & > div {\r\n    padding: 0.5rem 0.5rem 0.5rem 4rem;\r\n    @media (min-width: 480px) {\r\n      padding: 1rem 1rem 1rem 4rem;\r\n    }\r\n  }\r\n`\r\nconst ChoiceInput = styled.input.attrs({\r\n  type: 'checkbox',\r\n  role: 'option',\r\n})`\r\n  margin-right: 0.5rem;\r\n`\r\n\r\nconst WriteInCandidateForm = styled.div`\r\n  margin: 1rem 0 -1rem;\r\n  border-radius: 0.25rem;\r\n  background-color: rgb(211, 211, 211);\r\n  padding: 0.25rem;\r\n`\r\n\r\nconst WriteInCandidateFieldSet = styled.fieldset`\r\n  margin: 0.5rem 0.5rem 1rem;\r\n`\r\n\r\nconst WriteInCandidateInput = styled.input.attrs({\r\n  readOnly: true,\r\n  type: 'text',\r\n})`\r\n  outline: none;\r\n  border: 1px solid rgb(169, 169, 169);\r\n  box-shadow: 0 0 3px -1px rgba(0, 0, 0, 0.3);\r\n  width: 100%;\r\n  padding: 0.25rem 0.35rem;\r\n`\r\n\r\ninterface Props {\r\n  contest: CandidateContestInterface\r\n  parties: Parties\r\n  vote: CandidateVote\r\n  updateVote: UpdateVoteFunction\r\n}\r\n\r\ninterface State {\r\n  attemptedOvervoteCandidate: OptionalCandidate\r\n  candidatePendingRemoval: OptionalCandidate\r\n  isScrollAtBottom: boolean\r\n  isScrollAtTop: boolean\r\n  isScrollable: boolean\r\n  writeInCandateModalIsOpen: boolean\r\n  writeInCandidateName: string\r\n}\r\n\r\nconst initialState = {\r\n  attemptedOvervoteCandidate: undefined,\r\n  candidatePendingRemoval: undefined,\r\n  isScrollable: false,\r\n  isScrollAtBottom: true,\r\n  isScrollAtTop: true,\r\n  writeInCandateModalIsOpen: false,\r\n  writeInCandidateName: '',\r\n}\r\n\r\nclass CandidateContest extends React.Component<Props, State> {\r\n  public static contextType = BallotContext\r\n  public state: State = initialState\r\n  private keyboard = React.createRef<Keyboard>()\r\n  private scrollContainer = React.createRef<HTMLDivElement>()\r\n\r\n  public componentDidMount() {\r\n    this.updateContestChoicesScrollStates()\r\n    window.addEventListener('resize', this.updateContestChoicesScrollStates)\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: Props) {\r\n    /* istanbul ignore else */\r\n    if (this.props.vote.length !== prevProps.vote.length) {\r\n      this.updateContestChoicesScrollStates()\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount = () => {\r\n    window.removeEventListener('resize', this.updateContestChoicesScrollStates)\r\n  }\r\n\r\n  public findCandidateById = (candidates: Candidate[], id: string) =>\r\n    candidates.find(c => c.id === id)\r\n\r\n  public addCandidateToVote = (id: string) => {\r\n    const { contest, vote } = this.props\r\n    const { candidates } = contest\r\n    const candidate = this.findCandidateById(candidates, id)!\r\n    this.props.updateVote(contest.id, [...vote, candidate])\r\n  }\r\n\r\n  public removeCandidateFromVote = (id: string) => {\r\n    const { contest, vote } = this.props\r\n    const newVote = vote.filter(c => c.id !== id)\r\n    this.props.updateVote(contest.id, newVote)\r\n  }\r\n\r\n  public handleDisabledClick = () => {\r\n    // maybe we'll do more when a disabled item is clicked, for now nothing.\r\n  }\r\n\r\n  public handleUpdateSelection = (event: InputEvent) => {\r\n    const { vote } = this.props\r\n    const id = (event.target as HTMLInputElement).value\r\n    const candidate = this.findCandidateById(vote, id)\r\n    if (candidate) {\r\n      if (candidate.isWriteIn) {\r\n        this.setState({ candidatePendingRemoval: candidate })\r\n      } else {\r\n        this.removeCandidateFromVote(id)\r\n      }\r\n    } else {\r\n      this.addCandidateToVote(id)\r\n    }\r\n  }\r\n\r\n  public handleChangeVoteAlert = (\r\n    attemptedOvervoteCandidate: OptionalCandidate\r\n  ) => {\r\n    this.setState({ attemptedOvervoteCandidate })\r\n  }\r\n\r\n  public closeAttemptedVoteAlert = () => {\r\n    this.setState({ attemptedOvervoteCandidate: undefined })\r\n  }\r\n\r\n  public confirmRemovePendingWriteInCandidate = () => {\r\n    this.removeCandidateFromVote(this.state.candidatePendingRemoval!.id)\r\n    this.clearCandidateIdPendingRemoval()\r\n  }\r\n\r\n  public clearCandidateIdPendingRemoval = () => {\r\n    this.setState({ candidatePendingRemoval: undefined })\r\n  }\r\n\r\n  public initWriteInCandidate = () => {\r\n    this.toggleWriteInCandidateModal(true)\r\n  }\r\n\r\n  public normalizeName = (name: string) =>\r\n    name\r\n      .trim()\r\n      .replace(/\\t+/g, ' ')\r\n      .replace(/\\s+/g, ' ')\r\n\r\n  public addWriteInCandidate = () => {\r\n    const { contest, vote } = this.props\r\n    const normalizedCandidateName = this.normalizeName(\r\n      this.state.writeInCandidateName\r\n    )\r\n    this.props.updateVote(contest.id, [\r\n      ...vote,\r\n      {\r\n        id: `write-in__${camelCase(normalizedCandidateName)}`,\r\n        isWriteIn: true,\r\n        name: normalizedCandidateName,\r\n      },\r\n    ])\r\n    this.setState({ writeInCandidateName: '' })\r\n    this.toggleWriteInCandidateModal(false)\r\n  }\r\n\r\n  public cancelWriteInCandidateModal = () => {\r\n    this.setState({ writeInCandidateName: '' })\r\n    this.toggleWriteInCandidateModal(false)\r\n  }\r\n\r\n  public toggleWriteInCandidateModal = (writeInCandateModalIsOpen: boolean) => {\r\n    this.setState({ writeInCandateModalIsOpen })\r\n  }\r\n\r\n  public onKeyboardInputChange = (writeInCandidateName: string) => {\r\n    this.setState({ writeInCandidateName })\r\n  }\r\n\r\n  public updateContestChoicesScrollStates = () => {\r\n    const target = this.scrollContainer.current\r\n    /* istanbul ignore next - `target` should aways exist, but sometimes it doesn't. Don't know how to create this condition in testing.  */\r\n    if (!target) {\r\n      return\r\n    }\r\n    const isTabletMinWidth = target.offsetWidth >= tabletMinWidth\r\n    const targetMinHeight =\r\n      GLOBALS.FONT_SIZES[this.context.userSettings.textSize] * 8 // magic number: room for buttons + spacing\r\n    const windowsScrollTopOffsetMagicNumber = 1 // Windows Chrome is often 1px when using scroll buttons.\r\n    const windowsScrollTop = Math.ceil(target.scrollTop) // Windows Chrome scrolls to sub-pixel values.\r\n    this.setState({\r\n      isScrollable:\r\n        isTabletMinWidth &&\r\n        /* istanbul ignore next: Tested by Cypress */\r\n        target.scrollHeight > target.offsetHeight &&\r\n        /* istanbul ignore next: Tested by Cypress */\r\n        target.offsetHeight > targetMinHeight,\r\n      isScrollAtBottom:\r\n        windowsScrollTop +\r\n          target.offsetHeight +\r\n          windowsScrollTopOffsetMagicNumber >= // Windows Chrome \"gte\" check.\r\n        target.scrollHeight,\r\n      isScrollAtTop: target.scrollTop === 0,\r\n    })\r\n  }\r\n\r\n  public scrollContestChoices = /* istanbul ignore next: Tested by Cypress */ (\r\n    event: ButtonEvent\r\n  ) => {\r\n    const direction = (event.target as HTMLElement).dataset\r\n      .direction as ScrollDirections\r\n    const scrollContainer = this.scrollContainer.current!\r\n    const currentScrollTop = scrollContainer.scrollTop\r\n    const offsetHeight = scrollContainer.offsetHeight\r\n    const scrollHeight = scrollContainer.scrollHeight\r\n    const idealScrollDistance = Math.round(offsetHeight * 0.75)\r\n    const maxScrollableDownDistance =\r\n      scrollHeight - offsetHeight - currentScrollTop\r\n    const maxScrollTop =\r\n      direction === 'down'\r\n        ? currentScrollTop + maxScrollableDownDistance\r\n        : currentScrollTop\r\n    const idealScrollTop =\r\n      direction === 'down'\r\n        ? currentScrollTop + idealScrollDistance\r\n        : currentScrollTop - idealScrollDistance\r\n    const top = idealScrollTop > maxScrollTop ? maxScrollTop : idealScrollTop\r\n    scrollContainer.scrollTo({ behavior: 'smooth', left: 0, top })\r\n  }\r\n\r\n  public render() {\r\n    const { contest, parties, vote } = this.props\r\n    const hasReachedMaxSelections = contest.seats === vote.length\r\n    const {\r\n      attemptedOvervoteCandidate,\r\n      candidatePendingRemoval,\r\n      isScrollable,\r\n      isScrollAtBottom,\r\n      isScrollAtTop,\r\n      writeInCandidateName,\r\n      writeInCandateModalIsOpen,\r\n    } = this.state\r\n    const maxWriteInCandidateLength = 40\r\n    return (\r\n      <React.Fragment>\r\n        <Main noOverflow noPadding>\r\n          <ContentHeader id=\"contest-header\">\r\n            <Prose id=\"audiofocus\">\r\n              <h1 aria-label={`${contest.title}.`}>\r\n                <ContestSection>{contest.section}</ContestSection>\r\n                {contest.title}\r\n              </h1>\r\n              <p\r\n                aria-label={`Vote for ${contest.seats}. You have selected ${\r\n                  vote.length\r\n                }. Use the down arrow to hear your options. Use the right arrow to move to the next contest.`}\r\n              >\r\n                <strong>Vote for {contest.seats}.</strong> You have selected{' '}\r\n                {vote.length}.\r\n              </p>\r\n            </Prose>\r\n          </ContentHeader>\r\n          <VariableContentContainer\r\n            showTopShadow={!isScrollAtTop}\r\n            showBottomShadow={!isScrollAtBottom}\r\n          >\r\n            <ScrollContainer\r\n              ref={this.scrollContainer}\r\n              onScroll={this.updateContestChoicesScrollStates}\r\n            >\r\n              <ScrollableContentWrapper isScrollable={isScrollable}>\r\n                <ChoicesGrid>\r\n                  {contest.candidates.map(candidate => {\r\n                    const isChecked = !!this.findCandidateById(\r\n                      vote,\r\n                      candidate.id\r\n                    )\r\n                    const isDisabled = hasReachedMaxSelections && !isChecked\r\n                    const handleDisabledClick = () => {\r\n                      if (isDisabled) {\r\n                        this.handleChangeVoteAlert(candidate)\r\n                      }\r\n                    }\r\n                    const party =\r\n                      candidate.partyId &&\r\n                      findPartyById(parties, candidate.partyId)\r\n                    return (\r\n                      <Choice\r\n                        key={candidate.id}\r\n                        htmlFor={candidate.id}\r\n                        isSelected={isChecked}\r\n                        onClick={handleDisabledClick}\r\n                        aria-label={`${candidate.name}, ${\r\n                          party ? party.name : ''\r\n                        }.`}\r\n                      >\r\n                        <ChoiceInput\r\n                          id={candidate.id}\r\n                          name={candidate.name}\r\n                          value={candidate.id}\r\n                          onChange={\r\n                            isDisabled\r\n                              ? this.handleDisabledClick\r\n                              : this.handleUpdateSelection\r\n                          }\r\n                          checked={isChecked}\r\n                          className=\"visually-hidden\"\r\n                        />\r\n                        <Prose>\r\n                          <Text wordBreak>\r\n                            <strong>{candidate.name}</strong>\r\n                            <br />\r\n                            {party ? party.name : ''}\r\n                          </Text>\r\n                        </Prose>\r\n                      </Choice>\r\n                    )\r\n                  })}\r\n                  {contest.allowWriteIns &&\r\n                    vote\r\n                      .filter(c => c.isWriteIn)\r\n                      .map(candidate => {\r\n                        return (\r\n                          <Choice\r\n                            key={candidate.id}\r\n                            htmlFor={candidate.id}\r\n                            isSelected\r\n                          >\r\n                            <ChoiceInput\r\n                              id={candidate.id}\r\n                              name={contest.id}\r\n                              value={candidate.id}\r\n                              onChange={this.handleUpdateSelection}\r\n                              checked\r\n                              className=\"visually-hidden\"\r\n                            />\r\n                            <Prose>\r\n                              <p aria-label={`${candidate.name}.`}>\r\n                                <strong>{candidate.name}</strong>\r\n                              </p>\r\n                            </Prose>\r\n                          </Choice>\r\n                        )\r\n                      })}\r\n                  {contest.allowWriteIns && !hasReachedMaxSelections && (\r\n                    <Choice\r\n                      as=\"button\"\r\n                      isSelected={false}\r\n                      onClick={this.initWriteInCandidate}\r\n                    >\r\n                      <Prose>\r\n                        <p aria-label=\"add write-in candidate.\">\r\n                          <em>add write-in candidate</em>\r\n                        </p>\r\n                      </Prose>\r\n                    </Choice>\r\n                  )}\r\n                </ChoicesGrid>\r\n              </ScrollableContentWrapper>\r\n            </ScrollContainer>\r\n            {isScrollable /* istanbul ignore next: Tested by Cypress */ && (\r\n              <ScrollControls aria-hidden=\"true\">\r\n                <Button\r\n                  aria-hidden\r\n                  data-direction=\"up\"\r\n                  disabled={isScrollAtTop}\r\n                  onClick={this.scrollContestChoices}\r\n                >\r\n                  ↑ See More\r\n                </Button>\r\n                <Button\r\n                  aria-hidden\r\n                  data-direction=\"down\"\r\n                  disabled={isScrollAtBottom}\r\n                  onClick={this.scrollContestChoices}\r\n                >\r\n                  ↓ See More\r\n                </Button>\r\n              </ScrollControls>\r\n            )}\r\n          </VariableContentContainer>\r\n        </Main>\r\n        <Modal\r\n          isOpen={!!attemptedOvervoteCandidate}\r\n          ariaLabel=\"\"\r\n          content={\r\n            <Prose>\r\n              <Text id=\"modalaudiofocus\">\r\n                You may only select {contest.seats}{' '}\r\n                {contest.seats === 1 ? 'candidate' : 'candidates'} in this\r\n                contest. To vote for{' '}\r\n                {attemptedOvervoteCandidate && attemptedOvervoteCandidate.name},\r\n                you must first unselect selected{' '}\r\n                {contest.seats === 1 ? 'candidate' : 'candidates'}.\r\n                <span aria-label=\"Use the select button to continue.\" />\r\n              </Text>\r\n            </Prose>\r\n          }\r\n          actions={\r\n            <Button\r\n              primary\r\n              autoFocus\r\n              onClick={this.closeAttemptedVoteAlert}\r\n              aria-label=\"use the select button to continue.\"\r\n            >\r\n              Okay\r\n            </Button>\r\n          }\r\n        />\r\n        <Modal\r\n          isOpen={!!candidatePendingRemoval}\r\n          content={\r\n            <Prose>\r\n              <Text>\r\n                Do you want to unselect and remove{' '}\r\n                {candidatePendingRemoval && candidatePendingRemoval.name}?\r\n              </Text>\r\n            </Prose>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button\r\n                danger\r\n                onClick={this.confirmRemovePendingWriteInCandidate}\r\n              >\r\n                Yes, Remove.\r\n              </Button>\r\n              <Button onClick={this.clearCandidateIdPendingRemoval}>\r\n                Cancel\r\n              </Button>\r\n            </>\r\n          }\r\n        />\r\n        <Modal\r\n          isOpen={writeInCandateModalIsOpen}\r\n          content={\r\n            <div>\r\n              <Prose>\r\n                <h2>Write-In Candidate</h2>\r\n                <Text>\r\n                  Enter the name of a person who is <strong>not</strong> on the\r\n                  ballot using the on-screen keyboard.\r\n                </Text>\r\n                {writeInCandidateName.length > 35 && (\r\n                  <Text error>\r\n                    <strong>Note:</strong> You have entered{' '}\r\n                    {writeInCandidateName.length} of maximum{' '}\r\n                    {maxWriteInCandidateLength} characters.\r\n                  </Text>\r\n                )}\r\n              </Prose>\r\n              <WriteInCandidateForm>\r\n                <WriteInCandidateFieldSet>\r\n                  <legend>\r\n                    <label htmlFor=\"WriteInCandidateName\">\r\n                      <Prose>\r\n                        <Text bold small>\r\n                          {contest.title} (write-in)\r\n                        </Text>\r\n                      </Prose>\r\n                    </label>\r\n                  </legend>\r\n                  <WriteInCandidateInput\r\n                    id=\"WriteInCandidateName\"\r\n                    value={writeInCandidateName}\r\n                    placeholder=\"candidate name\"\r\n                  />\r\n                </WriteInCandidateFieldSet>\r\n                <Keyboard\r\n                  ref={this.keyboard}\r\n                  layout={{\r\n                    default: [\r\n                      'Q W E R T Y U I O P',\r\n                      'A S D F G H J K L -',\r\n                      'Z X C V B N M , .',\r\n                      '{space} {bksp}',\r\n                    ],\r\n                  }}\r\n                  display={{ '{bksp}': '⌫ delete', '{space}': 'space' }}\r\n                  mergeDisplay\r\n                  disableCaretPositioning\r\n                  maxLength={maxWriteInCandidateLength}\r\n                  layoutName=\"default\"\r\n                  theme=\"hg-theme-default vs-simple-keyboard\"\r\n                  onChange={this.onKeyboardInputChange}\r\n                  useButtonTag\r\n                />\r\n              </WriteInCandidateForm>\r\n            </div>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button\r\n                primary={this.normalizeName(writeInCandidateName).length > 0}\r\n                onClick={this.addWriteInCandidate}\r\n                disabled={this.normalizeName(writeInCandidateName).length === 0}\r\n              >\r\n                Accept\r\n              </Button>\r\n              <Button onClick={this.cancelWriteInCandidateModal}>Cancel</Button>\r\n            </>\r\n          }\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CandidateContest\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport {\r\n  ButtonEvent,\r\n  InputEvent,\r\n  OptionalYesNoVote,\r\n  Scrollable,\r\n  ScrollDirections,\r\n  ScrollShadows,\r\n  UpdateVoteFunction,\r\n  YesNoContest as YesNoContestInterface,\r\n  YesNoVote,\r\n} from '../config/types'\r\n\r\nimport BallotContext from '../contexts/ballotContext'\r\n\r\nimport GLOBALS from '../config/globals'\r\nimport Button from './Button'\r\nimport Main from './Main'\r\nimport Modal from './Modal'\r\nimport Prose from './Prose'\r\nimport Text, { TextWithLineBreaks } from './Text'\r\n\r\nconst tabletMinWidth = 720\r\nconst votes = GLOBALS.YES_NO_VOTES\r\n\r\nconst ContentHeader = styled.div`\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  max-width: 35rem;\r\n  padding: 1rem 0.75rem 0.5rem;\r\n  @media (min-width: ${tabletMinWidth}px) {\r\n    padding: 1rem 1.5rem 0.5rem;\r\n    padding-left: 5rem;\r\n  }\r\n`\r\nconst ContestSection = styled.div`\r\n  text-transform: uppercase;\r\n  font-size: 0.85rem;\r\n  font-weight: 600;\r\n`\r\nconst ContestDescription = styled.div`\r\n  padding: 0 0.25rem;\r\n  @media (min-width: ${tabletMinWidth}px) {\r\n    padding-left: 4rem;\r\n  }\r\n`\r\nconst ContestFooter = styled.div`\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  max-width: 35rem;\r\n  padding: 1rem 0.5rem;\r\n  @media (min-width: ${tabletMinWidth}px) {\r\n    padding-right: 1rem;\r\n    padding-left: 1rem;\r\n  }\r\n`\r\nconst VariableContentContainer = styled.div<ScrollShadows>`\r\n  display: flex;\r\n  flex: 1;\r\n  position: relative;\r\n  overflow: auto;\r\n  &::before,\r\n  &::after {\r\n    position: absolute;\r\n    z-index: 1;\r\n    width: 100%;\r\n    height: 0.25rem;\r\n    content: '';\r\n    transition: opacity 0.25s ease;\r\n  }\r\n  &::before {\r\n    top: 0;\r\n    opacity: ${({ showTopShadow }) =>\r\n      showTopShadow ? /* istanbul ignore next: Tested by Cypress */ 1 : 0};\r\n    background: linear-gradient(\r\n      to bottom,\r\n      rgb(177, 186, 190) 0%,\r\n      transparent 100%\r\n    );\r\n  }\r\n  &::after {\r\n    bottom: 0;\r\n    opacity: ${({ showBottomShadow }) =>\r\n      showBottomShadow ? /* istanbul ignore next: Tested by Cypress */ 1 : 0};\r\n    background: linear-gradient(\r\n      to bottom,\r\n      transparent 0%,\r\n      rgb(177, 186, 190) 100%\r\n    );\r\n  }\r\n`\r\nconst ScrollControls = styled.div`\r\n  display: none;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  max-width: 35rem;\r\n  padding: 0.5rem 0.75rem 0.5rem 0;\r\n  padding-left: calc(100% - 7rem);\r\n  pointer-events: none;\r\n  & > * {\r\n    pointer-events: auto;\r\n  }\r\n  html[data-useragent*='Windows'] & {\r\n    margin-left: -17px; /* Windows Chrome scrollbar width */\r\n  }\r\n  @media (min-width: ${tabletMinWidth}px) {\r\n    display: flex;\r\n  }\r\n  @media (min-width: 840px) {\r\n    left: 50%;\r\n    margin-left: -420px;\r\n    padding-left: calc(840px - 7rem);\r\n    html[data-useragent*='Windows'] & {\r\n      margin-left: calc(-420px + -17px); /* Windows Chrome scrollbar width */\r\n    }\r\n  }\r\n`\r\nconst ScrollContainer = styled.div`\r\n  flex: 1;\r\n  overflow: auto;\r\n`\r\nconst ScrollableContentWrapper = styled.div<Scrollable>`\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  max-width: 35rem;\r\n  padding: 0.5rem 0.5rem 1rem;\r\n  @media (min-width: ${tabletMinWidth}px) {\r\n    padding-right: ${({ isScrollable }) =>\r\n      isScrollable\r\n        ? /* istanbul ignore next: Tested by Cypress */ '8rem'\r\n        : '1rem'};\r\n    padding-left: 1rem;\r\n  }\r\n`\r\nconst ChoicesGrid = styled.div`\r\n  display: grid;\r\n  grid-auto-rows: minmax(auto, 1fr);\r\n  grid-gap: 0.75rem;\r\n`\r\nconst Choice = styled('label')<{ isSelected: boolean }>`\r\n  display: grid;\r\n  align-items: center;\r\n  position: relative;\r\n  border-radius: 0.125rem;\r\n  box-shadow: 0 0.125rem 0.125rem 0 rgba(0, 0, 0, 0.14),\r\n    0 0.1875rem 0.0625rem -0.125rem rgba(0, 0, 0, 0.12),\r\n    0 0.0625rem 0.3125rem 0 rgba(0, 0, 0, 0.2);\r\n  background: ${({ isSelected }) => (isSelected ? '#028099' : '#FFFFFF')};\r\n  cursor: pointer;\r\n  min-height: 2.5rem;\r\n  color: ${({ isSelected }) => (isSelected ? '#FFFFFF' : undefined)};\r\n  transition: background 0.25s, color 0.25s;\r\n  button& {\r\n    text-align: left;\r\n  }\r\n  :focus-within {\r\n    outline: rgb(77, 144, 254) dashed 0.25rem;\r\n  }\r\n  ::before {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    border-right: 1px solid;\r\n    border-color: ${({ isSelected }) =>\r\n      isSelected ? '#028099' : 'rgb(211, 211, 211)'};\r\n    border-radius: 0.125rem 0 0 0.125rem;\r\n    background: #FFFFFF;\r\n    width: 3rem;\r\n    text-align: center;\r\n    color: #028099;\r\n    font-size: 2rem;\r\n    content: '${({ isSelected }) => (isSelected ? '✓' : '')}';\r\n  }\r\n  & > div {\r\n    padding: 0.5rem 0.5rem 0.5rem 4rem;\r\n    @media (min-width: 480px) {\r\n      padding: 1rem 1rem 1rem inherit;\r\n    }\r\n  }\r\n`\r\nconst ChoiceInput = styled.input.attrs({\r\n  role: 'option',\r\n  type: 'checkbox',\r\n})`\r\n  margin-right: 0.5rem;\r\n`\r\ninterface Props {\r\n  contest: YesNoContestInterface\r\n  vote: OptionalYesNoVote\r\n  updateVote: UpdateVoteFunction\r\n}\r\n\r\ninterface State {\r\n  isScrollable: boolean\r\n  isScrollAtBottom: boolean\r\n  isScrollAtTop: boolean\r\n  overvoteSelection: OptionalYesNoVote\r\n}\r\n\r\nconst initialState = {\r\n  isScrollable: false,\r\n  isScrollAtBottom: true,\r\n  isScrollAtTop: true,\r\n  overvoteSelection: undefined,\r\n}\r\n\r\nexport default class YesNoContest extends React.Component<Props> {\r\n  public static contextType = BallotContext\r\n  public state: State = initialState\r\n  private scrollContainer = React.createRef<HTMLDivElement>()\r\n\r\n  public componentDidMount() {\r\n    this.updateContestChoicesScrollStates()\r\n    window.addEventListener('resize', this.updateContestChoicesScrollStates)\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: Props) {\r\n    if (this.props.vote !== prevProps.vote) {\r\n      this.updateContestChoicesScrollStates()\r\n    }\r\n  }\r\n\r\n  public handleDisabledClick = () => {\r\n    // maybe we'll do more when a disabled item is clicked, for now nothing.\r\n  }\r\n\r\n  public handleUpdateSelection = (event: InputEvent) => {\r\n    const target = event.target as HTMLInputElement\r\n    const newVote = target.value as YesNoVote\r\n    const { vote } = this.props\r\n    if (vote === newVote) {\r\n      this.props.updateVote(this.props.contest.id, undefined)\r\n    } else {\r\n      this.props.updateVote(this.props.contest.id, newVote)\r\n    }\r\n  }\r\n\r\n  public handleChangeVoteAlert = (overvoteSelection: YesNoVote) => {\r\n    this.setState({ overvoteSelection })\r\n  }\r\n\r\n  public updateContestChoicesScrollStates = () => {\r\n    const target = this.scrollContainer.current\r\n    /* istanbul ignore next - `target` should aways exist, but sometimes it doesn't. Don't know how to create this condition in testing.  */\r\n    if (!target) {\r\n      return\r\n    }\r\n    const isTabletMinWidth = target.offsetWidth >= tabletMinWidth\r\n    const targetMinHeight =\r\n      GLOBALS.FONT_SIZES[this.context.userSettings.textSize] * 8 // magic number: room for buttons + spacing\r\n    const windowsScrollTopOffsetMagicNumber = 1 // Windows Chrome is often 1px when using scroll buttons.\r\n    const windowsScrollTop = Math.ceil(target.scrollTop) // Windows Chrome scrolls to sub-pixel values.\r\n    this.setState({\r\n      isScrollable:\r\n        isTabletMinWidth &&\r\n        /* istanbul ignore next: Tested by Cypress */\r\n        target.scrollHeight > target.offsetHeight &&\r\n        /* istanbul ignore next: Tested by Cypress */\r\n        target.offsetHeight > targetMinHeight,\r\n      isScrollAtBottom:\r\n        windowsScrollTop +\r\n          target.offsetHeight +\r\n          windowsScrollTopOffsetMagicNumber >= // Windows Chrome \"gte\" check.\r\n        target.scrollHeight,\r\n      isScrollAtTop: target.scrollTop === 0,\r\n    })\r\n  }\r\n\r\n  public scrollContestChoices = /* istanbul ignore next: Tested by Cypress */ (\r\n    event: ButtonEvent\r\n  ) => {\r\n    const direction = (event.target as HTMLElement).dataset\r\n      .direction as ScrollDirections\r\n    const scrollContainer = this.scrollContainer.current!\r\n    const currentScrollTop = scrollContainer.scrollTop\r\n    const offsetHeight = scrollContainer.offsetHeight\r\n    const scrollHeight = scrollContainer.scrollHeight\r\n    const idealScrollDistance = Math.round(offsetHeight * 0.75)\r\n    const maxScrollableDownDistance =\r\n      scrollHeight - offsetHeight - currentScrollTop\r\n    const maxScrollTop =\r\n      direction === 'down'\r\n        ? currentScrollTop + maxScrollableDownDistance\r\n        : currentScrollTop\r\n    const idealScrollTop =\r\n      direction === 'down'\r\n        ? currentScrollTop + idealScrollDistance\r\n        : currentScrollTop - idealScrollDistance\r\n    const top = idealScrollTop > maxScrollTop ? maxScrollTop : idealScrollTop\r\n    scrollContainer.scrollTo({\r\n      behavior: 'smooth',\r\n      left: 0,\r\n      top,\r\n    })\r\n  }\r\n\r\n  public closeOvervoteAlert = () => {\r\n    this.setState({\r\n      overvoteSelection: initialState.overvoteSelection,\r\n    })\r\n  }\r\n\r\n  public render() {\r\n    const { contest, vote } = this.props\r\n    const { overvoteSelection } = this.state\r\n    const { isScrollable, isScrollAtBottom, isScrollAtTop } = this.state\r\n    return (\r\n      <React.Fragment>\r\n        <Main noOverflow noPadding>\r\n          <ContentHeader id=\"contest-header\">\r\n            <Prose id=\"audiofocus\">\r\n              <h1 aria-label={`${contest.title}.`}>\r\n                <ContestSection>{contest.section}</ContestSection>\r\n                {contest.title}\r\n              </h1>\r\n              <p aria-label=\"Vote Yes or No. Use the down arrow to select your preference. Use the right arrow to move to the next contest.\">\r\n                <strong>Vote Yes or No.</strong>\r\n              </p>\r\n            </Prose>\r\n          </ContentHeader>\r\n          <VariableContentContainer\r\n            showTopShadow={!isScrollAtTop}\r\n            showBottomShadow={!isScrollAtBottom}\r\n          >\r\n            <ScrollContainer\r\n              ref={this.scrollContainer}\r\n              onScroll={this.updateContestChoicesScrollStates}\r\n            >\r\n              <ScrollableContentWrapper isScrollable={isScrollable}>\r\n                <ContestDescription>\r\n                  <Prose>\r\n                    <TextWithLineBreaks text={contest.description} />\r\n                  </Prose>\r\n                </ContestDescription>\r\n              </ScrollableContentWrapper>\r\n            </ScrollContainer>\r\n            {isScrollable /* istanbul ignore next: Tested by Cypress */ && (\r\n              <ScrollControls aria-hidden=\"true\">\r\n                <Button\r\n                  data-direction=\"up\"\r\n                  disabled={isScrollAtTop}\r\n                  onClick={this.scrollContestChoices}\r\n                >\r\n                  ↑ See More\r\n                </Button>\r\n                <Button\r\n                  data-direction=\"down\"\r\n                  disabled={isScrollAtBottom}\r\n                  onClick={this.scrollContestChoices}\r\n                >\r\n                  ↓ See More\r\n                </Button>\r\n              </ScrollControls>\r\n            )}\r\n          </VariableContentContainer>\r\n          <ContestFooter>\r\n            <ChoicesGrid>\r\n              {['Yes', 'No'].map(answer => {\r\n                const answerLowerCase = answer.toLowerCase()\r\n                const isChecked = vote === answerLowerCase\r\n                const isDisabled = !isChecked && !!vote\r\n                const handleDisabledClick = () => {\r\n                  if (isDisabled) {\r\n                    this.handleChangeVoteAlert(\r\n                      answer.toLowerCase() as YesNoVote\r\n                    )\r\n                  }\r\n                }\r\n                return (\r\n                  <Choice\r\n                    key={answer}\r\n                    htmlFor={answerLowerCase}\r\n                    isSelected={isChecked}\r\n                    onClick={handleDisabledClick}\r\n                  >\r\n                    <ChoiceInput\r\n                      id={answerLowerCase}\r\n                      name={contest.id}\r\n                      value={answerLowerCase}\r\n                      onChange={\r\n                        isDisabled\r\n                          ? this.handleDisabledClick\r\n                          : this.handleUpdateSelection\r\n                      }\r\n                      checked={isChecked}\r\n                      className=\"visually-hidden\"\r\n                    />\r\n                    <Prose>\r\n                      <Text\r\n                        aria-label={`${answer} on ${contest.shortTitle ||\r\n                          contest.title}`}\r\n                        wordBreak\r\n                      >\r\n                        {answer}\r\n                      </Text>\r\n                    </Prose>\r\n                  </Choice>\r\n                )\r\n              })}\r\n            </ChoicesGrid>\r\n          </ContestFooter>\r\n        </Main>\r\n        <Modal\r\n          isOpen={!!overvoteSelection}\r\n          content={\r\n            <Prose>\r\n              {overvoteSelection && (\r\n                <p>\r\n                  Do you want to change your vote to{' '}\r\n                  <strong>{votes[overvoteSelection]}</strong>? To change your\r\n                  vote, first unselect your vote for{' '}\r\n                  <strong>\r\n                    {\r\n                      {\r\n                        no: votes.yes,\r\n                        yes: votes.no,\r\n                      }[overvoteSelection]\r\n                    }\r\n                  </strong>\r\n                  .\r\n                </p>\r\n              )}\r\n            </Prose>\r\n          }\r\n          actions={\r\n            <Button primary autoFocus onClick={this.closeOvervoteAlert}>\r\n              Okay\r\n            </Button>\r\n          }\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nimport { CandidateVote, OptionalYesNoVote } from '../config/types'\r\n\r\nimport BallotContext from '../contexts/ballotContext'\r\n\r\nimport ButtonBar from '../components/ButtonBar'\r\nimport CandidateContest from '../components/CandidateContest'\r\nimport LinkButton from '../components/LinkButton'\r\nimport Text from '../components/Text'\r\nimport YesNoContest from '../components/YesNoContest'\r\n\r\nconst Progress = styled(Text)`\r\n  flex: 2;\r\n`\r\n\r\ninterface ContestParams {\r\n  contestNumber: string\r\n}\r\n\r\nconst ContestPage = (props: RouteComponentProps<ContestParams>) => {\r\n  const { contestNumber } = props.match.params\r\n  const { election, updateVote, votes, contests, resetBallot } = useContext(\r\n    BallotContext\r\n  )\r\n\r\n  const { bmdConfig } = election!\r\n  const { showHelpPage, showSettingsPage } = bmdConfig!\r\n  const currentContestIndex = parseInt(contestNumber, 10)\r\n  const contest = contests[currentContestIndex]\r\n\r\n  if (!contest) {\r\n    resetBallot()\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  const prevContestIndex = currentContestIndex - 1\r\n  const prevContest = contests[prevContestIndex]\r\n\r\n  const nextContestIndex = currentContestIndex + 1\r\n  const nextContest = contests[nextContestIndex]\r\n  const vote = votes[contest.id]\r\n  let isVoteComplete = !!vote\r\n  if (contest.type === 'candidate') {\r\n    isVoteComplete = contest.seats === ((vote as CandidateVote) || []).length\r\n  }\r\n  const isReviewMode = window.location.hash === '#review'\r\n  // TODO:\r\n  // - confirm intent when navigating away without selecting a candidate\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {contest.type === 'candidate' && (\r\n        <CandidateContest\r\n          aria-live=\"assertive\"\r\n          key={contest.id}\r\n          contest={contest}\r\n          parties={election!.parties}\r\n          vote={(vote || []) as CandidateVote}\r\n          updateVote={updateVote}\r\n        />\r\n      )}\r\n      {contest.type === 'yesno' && (\r\n        <YesNoContest\r\n          key={contest.id}\r\n          contest={contest}\r\n          vote={vote as OptionalYesNoVote}\r\n          updateVote={updateVote}\r\n        />\r\n      )}\r\n      <ButtonBar>\r\n        {isReviewMode ? (\r\n          <React.Fragment>\r\n            <LinkButton\r\n              primary={isVoteComplete}\r\n              to={`/review#contest-${contest.id}`}\r\n              id=\"next\"\r\n            >\r\n              Review Ballot\r\n            </LinkButton>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <LinkButton\r\n              id=\"next\"\r\n              primary={isVoteComplete}\r\n              to={nextContest ? `/contests/${nextContestIndex}` : '/pre-review'}\r\n            >\r\n              Next\r\n            </LinkButton>\r\n            <LinkButton\r\n              id=\"previous\"\r\n              to={prevContest ? `/contests/${prevContestIndex}` : '/start'}\r\n            >\r\n              Back\r\n            </LinkButton>\r\n            <Progress center white>\r\n              {currentContestIndex + 1} of {contests.length}\r\n            </Progress>\r\n          </React.Fragment>\r\n        )}\r\n      </ButtonBar>\r\n      <ButtonBar\r\n        secondary\r\n        separatePrimaryButton\r\n        centerOnlyChild={!showHelpPage && !showSettingsPage && false}\r\n      >\r\n        <div />\r\n        {showHelpPage && <LinkButton to=\"/help\">Help</LinkButton>}\r\n        {showSettingsPage && <LinkButton to=\"/settings\">Settings</LinkButton>}\r\n      </ButtonBar>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ContestPage\r\n","import React from 'react'\r\n\r\nimport ButtonBar from '../components/ButtonBar'\r\nimport LinkButton from '../components/LinkButton'\r\nimport Main, { MainChild } from '../components/Main'\r\nimport Prose from '../components/Prose'\r\n\r\nconst HelpPage = () => {\r\n  return (\r\n    <>\r\n      <Main>\r\n        <MainChild>\r\n          <Prose>\r\n            <h1>Help</h1>\r\n            <p>Help content will be available here.</p>\r\n          </Prose>\r\n        </MainChild>\r\n      </Main>\r\n      <ButtonBar>\r\n        <div />\r\n        <LinkButton goBack>Back</LinkButton>\r\n        <div />\r\n        <div />\r\n      </ButtonBar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HelpPage\r\n","import React, { useContext } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\n\r\nimport BallotContext from '../contexts/ballotContext'\r\n\r\nimport Button from '../components/Button'\r\nimport Main, { MainChild } from '../components/Main'\r\nimport Prose from '../components/Prose'\r\n\r\nconst NotFoundPage = (props: RouteComponentProps) => {\r\n  const { resetBallot } = useContext(BallotContext)\r\n  const { pathname } = props.location\r\n  const requestResetBallot = () => {\r\n    resetBallot()\r\n  }\r\n  return (\r\n    <Main>\r\n      <MainChild center>\r\n        <Prose textCenter>\r\n          <h1>Page Not Found.</h1>\r\n          <p>\r\n            No page exists at <code>{pathname}</code>.\r\n          </p>\r\n          <p>\r\n            <Button onClick={requestResetBallot}>Start Over</Button>\r\n          </p>\r\n        </Prose>\r\n      </MainChild>\r\n    </Main>\r\n  )\r\n}\r\n\r\nexport default NotFoundPage\r\n","import React, { useContext } from 'react'\r\n\r\nimport Breadcrumbs from '../components/Breadcrumbs'\r\nimport ButtonBar from '../components/ButtonBar'\r\nimport LinkButton from '../components/LinkButton'\r\nimport Main, { MainChild } from '../components/Main'\r\nimport Prose from '../components/Prose'\r\nimport Text from '../components/Text'\r\nimport BallotContext from '../contexts/ballotContext'\r\n\r\nconst SummaryPage = () => {\r\n  const { election } = useContext(BallotContext)\r\n  const { bmdConfig } = election!\r\n  const { showHelpPage, showSettingsPage } = bmdConfig!\r\n  return (\r\n    <React.Fragment>\r\n      <Main>\r\n        <MainChild center>\r\n          <Breadcrumbs step={2} />\r\n          <Prose textCenter id=\"audiofocus\">\r\n            <h1 aria-label=\"Review Your Selections.\">Review Your Selections</h1>\r\n            <Text narrow>Confirm and change any votes as necessary.</Text>\r\n            <div aria-label=\"Use the down arrow, then\" />\r\n            <p>\r\n              <LinkButton\r\n                primary\r\n                big\r\n                to=\"/review\"\r\n                aria-label=\"Use the select button to begin your review.\"\r\n              >\r\n                Review Selections\r\n              </LinkButton>\r\n            </p>\r\n          </Prose>\r\n        </MainChild>\r\n      </Main>\r\n      <ButtonBar>\r\n        <div />\r\n        <LinkButton goBack id=\"previous\">\r\n          Back\r\n        </LinkButton>\r\n        <div />\r\n        <div />\r\n      </ButtonBar>\r\n      <ButtonBar secondary separatePrimaryButton>\r\n        <div />\r\n        {showHelpPage && <LinkButton to=\"/help\">Help</LinkButton>}\r\n        {showSettingsPage && <LinkButton to=\"/settings\">Settings</LinkButton>}\r\n      </ButtonBar>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SummaryPage\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface Props {\r\n  seal: string\r\n  sealURL: string\r\n}\r\n\r\nconst SealImage = styled.img`\r\n  max-width: 1in;\r\n`\r\n\r\nconst Seal = ({ seal, sealURL }: Props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {seal ? (\r\n        <div\r\n          className=\"seal\"\r\n          // TODO: Sanitize the SVG content: https://github.com/votingworks/bmd/issues/99\r\n          dangerouslySetInnerHTML={{ __html: seal }} // eslint-disable-line react/no-danger\r\n        />\r\n      ) : sealURL ? (\r\n        <div className=\"seal\">\r\n          <SealImage src={sealURL} alt=\"\" />\r\n        </div>\r\n      ) : (\r\n        <React.Fragment />\r\n      )}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Seal\r\n","export function randomBase64(numBytes: number) {\r\n  // get random values to fill an array of prescribed length, b64 encode it, and strip the '=' at the end.\r\n  return window\r\n    .btoa(\r\n      String.fromCharCode.apply(undefined, (window.crypto.getRandomValues(\r\n        new Uint8ClampedArray(numBytes)\r\n      ) as unknown) as number[])\r\n    )\r\n    .replace(/=+$/, '')\r\n}\r\n\r\nexport default { randomBase64 }\r\n","import React from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport QRCode from '../components/QRCode'\r\nimport Seal from '../components/Seal'\r\nimport { findPartyById } from '../utils/find'\r\nimport { randomBase64 } from '../utils/random'\r\nimport encodeVotes from '../encodeVotes'\r\n\r\nimport {\r\n  Candidate,\r\n  CandidateContest,\r\n  CandidateVote,\r\n  Contests,\r\n  OptionalYesNoVote,\r\n  Parties,\r\n  YesNoContest,\r\n  YesNoVote,\r\n} from '../config/types'\r\n\r\nimport Breadcrumbs from '../components/Breadcrumbs'\r\nimport Button from '../components/Button'\r\nimport ButtonBar from '../components/ButtonBar'\r\nimport LinkButton from '../components/LinkButton'\r\nimport Main, { MainChild } from '../components/Main'\r\nimport Modal from '../components/Modal'\r\nimport Prose from '../components/Prose'\r\nimport Text from '../components/Text'\r\nimport GLOBALS from '../config/globals'\r\nimport BallotContext from '../contexts/ballotContext'\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  border-bottom: 0.2rem solid #000000;\r\n  height: 1.15in;\r\n  & > .seal {\r\n    margin: 0.25rem 0;\r\n    width: 1in;\r\n  }\r\n  & h2 {\r\n    margin-bottom: 0;\r\n  }\r\n  & h3 {\r\n    margin-top: 0;\r\n  }\r\n  & > .ballot-header-content {\r\n    flex: 1;\r\n    margin: 0 1rem;\r\n    max-width: 100%;\r\n  }\r\n`\r\n\r\nconst QRCodeContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-self: flex-end;\r\n  border: 0.2rem solid #000000;\r\n  border-bottom: 0;\r\n  max-width: 50%;\r\n  padding: 0.25rem;\r\n  & > div:first-child {\r\n    margin-right: 0.25rem;\r\n    width: 1in;\r\n  }\r\n  & > div:last-child {\r\n    display: flex;\r\n    flex: 1;\r\n    & > div {\r\n      display: flex;\r\n      flex: 1;\r\n      flex-direction: column;\r\n      align-self: stretch;\r\n      justify-content: space-between;\r\n      font-size: 0.8rem;\r\n      & strong {\r\n        font-size: 1rem;\r\n        word-break: break-word;\r\n      }\r\n    }\r\n  }\r\n`\r\nconst Content = styled.div`\r\n  flex: 1;\r\n`\r\nconst BallotSelections = styled.div`\r\n  columns: 2;\r\n  column-gap: 2rem;\r\n`\r\nconst Contest = styled.div`\r\n  border-bottom: 0.01rem solid #000000;\r\n  padding: 0.5rem 0;\r\n  break-inside: avoid;\r\n  page-break-inside: avoid;\r\n`\r\nconst ContestProse = styled(Prose)`\r\n  & > h3 {\r\n    font-size: 0.875em;\r\n    font-weight: 400;\r\n  }\r\n`\r\nconst NoSelection = () => (\r\n  <Text italic muted>\r\n    [no selection]\r\n  </Text>\r\n)\r\n\r\nconst CandidateContestResult = ({\r\n  contest,\r\n  parties,\r\n  vote = [],\r\n}: {\r\n  contest: CandidateContest\r\n  parties: Parties\r\n  vote: CandidateVote\r\n}) => {\r\n  const remainingChoices = contest.seats - vote.length\r\n  return vote === undefined || vote.length === 0 ? (\r\n    <NoSelection />\r\n  ) : (\r\n    <React.Fragment>\r\n      {vote.map((candidate: Candidate) => (\r\n        <Text bold key={candidate.id} wordBreak>\r\n          <strong>{candidate.name}</strong>{' '}\r\n          {candidate.partyId &&\r\n            `/ ${findPartyById(parties, candidate.partyId)!.name}`}\r\n          {candidate.isWriteIn && `(write-in)`}\r\n        </Text>\r\n      ))}\r\n      {!!remainingChoices && (\r\n        <Text italic muted>\r\n          [no selection for {remainingChoices} of {contest.seats} choices]\r\n        </Text>\r\n      )}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst YesNoContestResult = (props: {\r\n  contest: YesNoContest\r\n  vote: OptionalYesNoVote\r\n}) =>\r\n  props.vote ? (\r\n    <Text bold wordBreak>\r\n      <strong>\r\n        {GLOBALS.YES_NO_VOTES[props.vote]}{' '}\r\n        {!!props.contest.shortTitle && `on ${props.contest.shortTitle}`}\r\n      </strong>\r\n    </Text>\r\n  ) : (\r\n    <NoSelection />\r\n  )\r\n\r\ninterface State {\r\n  showConfirmModal: boolean\r\n}\r\n\r\nclass SummaryPage extends React.Component<RouteComponentProps, State> {\r\n  public static contextType = BallotContext\r\n  public state: State = {\r\n    showConfirmModal: false,\r\n  }\r\n  public componentDidMount = () => {\r\n    window.addEventListener('afterprint', this.afterPrint)\r\n  }\r\n  public componentWillUnmount = () => {\r\n    window.removeEventListener('afterprint', this.afterPrint)\r\n  }\r\n  public afterPrint = async () => {\r\n    if (this.context.election.ballotTrackerConfig) {\r\n      window.setTimeout(() => {\r\n        this.props.history.push('/tracker')\r\n      }, 0)\r\n    } else {\r\n      this.resetBallot()\r\n    }\r\n  }\r\n  public resetBallot = () => {\r\n    // setTimeout to prevent a React infinite recursion issue\r\n    window.setTimeout(() => {\r\n      this.context.resetBallot('/cast')\r\n    }, 0)\r\n  }\r\n  public hideConfirm = () => {\r\n    this.setState({ showConfirmModal: false })\r\n  }\r\n  public showConfirm = () => {\r\n    this.setState({ showConfirmModal: true })\r\n  }\r\n  public print = () => {\r\n    this.context.markVoterCardUsed().then((success: boolean) => {\r\n      if (success) {\r\n        window.print()\r\n      }\r\n    })\r\n  }\r\n  public render() {\r\n    const {\r\n      ballotStyleId,\r\n      contests,\r\n      election: {\r\n        seal,\r\n        sealURL,\r\n        parties,\r\n        title,\r\n        county,\r\n        state,\r\n        date,\r\n        bmdConfig,\r\n      },\r\n      precinctId,\r\n      votes,\r\n    } = this.context\r\n    const { showHelpPage, showSettingsPage } = bmdConfig\r\n\r\n    const encodedVotes: string = encodeVotes(contests, votes)\r\n\r\n    const serialNumber: string = randomBase64(16)\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Main>\r\n          <MainChild center>\r\n            <Breadcrumbs step={3} />\r\n            <Prose textCenter className=\"no-print\" id=\"audiofocus\">\r\n              <h1 aria-label=\"Print your official ballot.\">\r\n                Print your official ballot\r\n              </h1>\r\n              <Text narrow>\r\n                If you have reviewed your selections and you are done voting,\r\n                you are ready to print your official ballot.\r\n              </Text>\r\n              <span aria-label=\"First, press the down arrow, then\" />\r\n              <Button\r\n                primary\r\n                big\r\n                onClick={this.showConfirm}\r\n                aria-label=\"Use the select button to print your ballot.\"\r\n              >\r\n                Print Ballot\r\n              </Button>\r\n            </Prose>\r\n          </MainChild>\r\n        </Main>\r\n        <ButtonBar>\r\n          <div />\r\n          <LinkButton to=\"/review\" id=\"previous\">\r\n            Back\r\n          </LinkButton>\r\n          <div />\r\n          <div />\r\n        </ButtonBar>\r\n        <ButtonBar secondary separatePrimaryButton>\r\n          <div />\r\n          {showHelpPage && <LinkButton to=\"/help\">Help</LinkButton>}\r\n          {showSettingsPage && <LinkButton to=\"/settings\">Settings</LinkButton>}\r\n        </ButtonBar>\r\n        <Modal\r\n          isOpen={this.state.showConfirmModal}\r\n          centerContent\r\n          ariaLabel=\"\"\r\n          content={\r\n            <Prose id=\"modalaudiofocus\">\r\n              <Text center>\r\n                You may not make any changes after you print your ballot.\r\n              </Text>\r\n              <Text center>Do you want to print your ballot?</Text>\r\n              <span aria-label=\"Use the down arrow to continue.\" />\r\n            </Prose>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button\r\n                role=\"link\"\r\n                aria-label=\"Use the select button to print your ballot.\"\r\n                primary\r\n                onClick={() => {\r\n                  this.print()\r\n                }}\r\n              >\r\n                Yes, print my ballot.\r\n              </Button>\r\n              <Button onClick={this.hideConfirm}>No, go back.</Button>\r\n            </>\r\n          }\r\n        />\r\n        <div aria-hidden=\"true\" className=\"print-only\">\r\n          <Header>\r\n            <Seal seal={seal} sealURL={sealURL} />\r\n            <Prose className=\"ballot-header-content\">\r\n              <h2>Official Ballot</h2>\r\n              <h3>{title}</h3>\r\n              <p>\r\n                {date}\r\n                <br />\r\n                {county.name}, {state}\r\n              </p>\r\n            </Prose>\r\n            <QRCodeContainer>\r\n              <QRCode\r\n                value={`${ballotStyleId}.${precinctId}.${encodedVotes}.${serialNumber}`}\r\n              />\r\n              <div>\r\n                <div>\r\n                  <div>\r\n                    <div>Ballot Style</div>\r\n                    <strong>{ballotStyleId}</strong>\r\n                  </div>\r\n                  <div>\r\n                    <div>Precinct Number</div>\r\n                    <strong>{precinctId}</strong>\r\n                  </div>\r\n                  <div>\r\n                    <div>Serial Number</div>\r\n                    <strong>{serialNumber}</strong>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </QRCodeContainer>\r\n          </Header>\r\n          <Content>\r\n            <BallotSelections>\r\n              {(contests as Contests).map(contest => (\r\n                <Contest key={contest.id}>\r\n                  <ContestProse compact>\r\n                    <h3>{contest.title}</h3>\r\n                    {contest.type === 'candidate' && (\r\n                      <CandidateContestResult\r\n                        contest={contest}\r\n                        parties={parties}\r\n                        vote={votes[contest.id] as CandidateVote}\r\n                      />\r\n                    )}\r\n                    {contest.type === 'yesno' && (\r\n                      <YesNoContestResult\r\n                        contest={contest}\r\n                        vote={votes[contest.id] as YesNoVote}\r\n                      />\r\n                    )}\r\n                  </ContestProse>\r\n                </Contest>\r\n              ))}\r\n            </BallotSelections>\r\n          </Content>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SummaryPage\r\n","import {\r\n  Candidate,\r\n  CandidateContest,\r\n  CandidateVote,\r\n  Contests,\r\n  Vote,\r\n  VotesDict,\r\n} from './config/types'\r\n\r\nexport default function encodeVotes(contests: Contests, votes: VotesDict) {\r\n  return contests\r\n    .map(contest => {\r\n      const contestVote: Vote = votes[contest.id]!\r\n      if (!contestVote) {\r\n        return ''\r\n      }\r\n\r\n      if (contest.type === 'yesno') {\r\n        return contestVote === 'yes' ? '1' : '0'\r\n      }\r\n\r\n      const candidateIDs = (contest as CandidateContest).candidates.map(\r\n        (c: Candidate) => c.id\r\n      )\r\n      return (contestVote as CandidateVote)\r\n        .map(c => (c.isWriteIn ? 'W' : candidateIDs.indexOf(c.id)))\r\n        .join(',')\r\n    })\r\n    .join('|')\r\n}\r\n","import pluralize from 'pluralize'\r\nimport React from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { findPartyById } from '../utils/find'\r\n\r\nimport {\r\n  ButtonEvent,\r\n  Candidate,\r\n  CandidateContest,\r\n  CandidateVote,\r\n  Contests,\r\n  OptionalYesNoVote,\r\n  Parties,\r\n  Scrollable,\r\n  ScrollDirections,\r\n  ScrollShadows,\r\n  YesNoContest,\r\n  YesNoVote,\r\n} from '../config/types'\r\n\r\nimport Button, { DecoyButton } from '../components/Button'\r\nimport ButtonBar from '../components/ButtonBar'\r\nimport LinkButton from '../components/LinkButton'\r\nimport Main from '../components/Main'\r\nimport Prose from '../components/Prose'\r\nimport Text from '../components/Text'\r\nimport GLOBALS from '../config/globals'\r\nimport BallotContext from '../contexts/ballotContext'\r\n\r\nconst tabletMinWidth = 768\r\n\r\nconst ContentHeader = styled.div`\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  max-width: 35rem;\r\n  padding: 0.5rem 0.5rem;\r\n  @media (min-width: ${tabletMinWidth}px) {\r\n    padding: 0.5rem 1rem;\r\n  }\r\n`\r\nconst ContentFooter = styled.div`\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  max-width: 35rem;\r\n  padding: 0.5rem 0.5rem;\r\n  @media (min-width: ${tabletMinWidth}px) {\r\n    padding: 0.5rem 1rem;\r\n  }\r\n`\r\nconst VariableContentContainer = styled.div<ScrollShadows>`\r\n  display: flex;\r\n  flex: 1;\r\n  position: relative;\r\n  overflow: auto;\r\n  &::before,\r\n  &::after {\r\n    position: absolute;\r\n    z-index: 1;\r\n    width: 100%;\r\n    height: 0.25rem;\r\n    content: '';\r\n    transition: opacity 0.25s ease;\r\n  }\r\n  &::before {\r\n    top: 0;\r\n    opacity: ${({ showTopShadow }) =>\r\n      showTopShadow ? /* istanbul ignore next: Tested by Cypress */ 1 : 0};\r\n    background: linear-gradient(\r\n      to bottom,\r\n      rgb(177, 186, 190) 0%,\r\n      transparent 100%\r\n    );\r\n  }\r\n  &::after {\r\n    bottom: 0;\r\n    opacity: ${({ showBottomShadow }) =>\r\n      showBottomShadow ? /* istanbul ignore next: Tested by Cypress */ 1 : 0};\r\n    background: linear-gradient(\r\n      to bottom,\r\n      transparent 0%,\r\n      rgb(177, 186, 190) 100%\r\n    );\r\n  }\r\n`\r\nconst ScrollContainer = styled.div`\r\n  flex: 1;\r\n  overflow: auto;\r\n`\r\nconst ScrollableContentWrapper = styled.div<Scrollable>`\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  max-width: 35rem;\r\n  padding: 0.5rem 0.5rem 1rem;\r\n  @media (min-width: ${tabletMinWidth}px) {\r\n    padding-right: 1rem;\r\n    padding-left: 1rem;\r\n  }\r\n`\r\n\r\nconst Contest = styled(LinkButton)`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 0.75rem;\r\n  border-radius: 0.125rem;\r\n  box-shadow: 0 0.125rem 0.125rem 0 rgba(0, 0, 0, 0.14),\r\n    0 0.1875rem 0.0625rem -0.125rem rgba(0, 0, 0, 0.12),\r\n    0 0.0625rem 0.3125rem 0 rgba(0, 0, 0, 0.2);\r\n  background: #ffffff;\r\n  width: 100%; /* reset Button default here at component rather than pass 'fullWidth' param. */\r\n  padding: 0.375rem 0.5rem;\r\n  text-decoration: inherit;\r\n  white-space: normal; /* reset Button default */\r\n  color: inherit;\r\n  button& {\r\n    cursor: pointer;\r\n    text-align: left;\r\n  }\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n  @media (min-width: 480px) {\r\n    padding: 0.75rem 1rem;\r\n  }\r\n`\r\nconst ContestProse = styled(Prose)`\r\n  flex: 1;\r\n  & > h3 {\r\n    font-weight: 400;\r\n  }\r\n`\r\nconst ContestActions = styled.div`\r\n  display: none;\r\n  padding-left: 2rem;\r\n  @media (min-width: 480px) {\r\n    display: block;\r\n  }\r\n`\r\nconst NoSelection = () => (\r\n  <Text\r\n    aria-label=\"No selection was made for this contest.\"\r\n    bold\r\n    warning\r\n    warningIcon\r\n    wordBreak\r\n  >\r\n    No selection was made for this contest.\r\n  </Text>\r\n)\r\n\r\nconst CandidateContestResult = ({\r\n  contest,\r\n  parties,\r\n  vote = [],\r\n}: {\r\n  contest: CandidateContest\r\n  parties: Parties\r\n  vote: CandidateVote\r\n}) => {\r\n  const remainingChoices = contest.seats - vote.length\r\n  return vote === undefined || vote.length === 0 ? (\r\n    <NoSelection />\r\n  ) : (\r\n    <React.Fragment>\r\n      {vote.map((candidate: Candidate, index: number, array: CandidateVote) => {\r\n        const party =\r\n          candidate.partyId && findPartyById(parties, candidate.partyId)\r\n        return (\r\n          <Text\r\n            key={candidate.id}\r\n            aria-label={`${candidate.name}${party && `, ${party.name}`}${\r\n              candidate.isWriteIn ? `, write-in` : ''\r\n            }${array.length - 1 === index ? '.' : ','}`}\r\n            wordBreak\r\n            voteIcon\r\n          >\r\n            <strong>{candidate.name}</strong> {party && `/ ${party.name}`}\r\n            {candidate.isWriteIn && `(write-in)`}\r\n          </Text>\r\n        )\r\n      })}\r\n      {!!remainingChoices && (\r\n        <Text bold warning warningIcon wordBreak>\r\n          You may select {remainingChoices} more{' '}\r\n          {pluralize('candidate', remainingChoices)}.\r\n        </Text>\r\n      )}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst YesNoContestResult = (props: {\r\n  contest: YesNoContest\r\n  vote: OptionalYesNoVote\r\n}) =>\r\n  props.vote ? (\r\n    <Text bold wordBreak voteIcon>\r\n      {GLOBALS.YES_NO_VOTES[props.vote]}{' '}\r\n      {!!props.contest.shortTitle && `on ${props.contest.shortTitle}`}\r\n    </Text>\r\n  ) : (\r\n    <NoSelection />\r\n  )\r\n\r\ninterface State {\r\n  isScrollAtBottom: boolean\r\n  isScrollAtTop: boolean\r\n  isScrollable: boolean\r\n}\r\n\r\nconst initialState: State = {\r\n  isScrollable: false,\r\n  isScrollAtBottom: true,\r\n  isScrollAtTop: true,\r\n}\r\n\r\nclass ReviewPage extends React.Component<RouteComponentProps, State> {\r\n  public static contextType = BallotContext\r\n  public state: State = initialState\r\n  private scrollContainer = React.createRef<HTMLDivElement>()\r\n\r\n  public componentDidMount = () => {\r\n    this.updateContestChoicesScrollStates()\r\n    window.addEventListener('resize', this.updateContestChoicesScrollStates)\r\n    const targetElement =\r\n      window.location.hash && document.querySelector(window.location.hash)\r\n    /* istanbul ignore next: Tested by Cypress */\r\n    if (targetElement && !navigator.userAgent.includes('jsdom')) {\r\n      targetElement.scrollIntoView({ block: 'center' })\r\n      window.setTimeout(() => (targetElement as HTMLDivElement).focus(), 1)\r\n    }\r\n  }\r\n\r\n  public updateContestChoicesScrollStates = () => {\r\n    const target = this.scrollContainer.current\r\n    /* istanbul ignore next - `target` should aways exist, but sometimes it doesn't. Don't know how to create this condition in testing.  */\r\n    if (!target) {\r\n      return\r\n    }\r\n    const isTabletMinWidth = target.offsetWidth >= tabletMinWidth\r\n    const targetMinHeight =\r\n      GLOBALS.FONT_SIZES[this.context.userSettings.textSize] * 8 // magic number: room for buttons + spacing\r\n    const windowsScrollTopOffsetMagicNumber = 1 // Windows Chrome is often 1px when using scroll buttons.\r\n    const windowsScrollTop = Math.ceil(target.scrollTop) // Windows Chrome scrolls to sub-pixel values.\r\n    this.setState({\r\n      isScrollable:\r\n        isTabletMinWidth &&\r\n        /* istanbul ignore next: Tested by Cypress */\r\n        target.scrollHeight > target.offsetHeight &&\r\n        /* istanbul ignore next: Tested by Cypress */\r\n        target.offsetHeight > targetMinHeight,\r\n      isScrollAtBottom:\r\n        windowsScrollTop +\r\n          target.offsetHeight +\r\n          windowsScrollTopOffsetMagicNumber >= // Windows Chrome \"gte\" check.\r\n        target.scrollHeight,\r\n      isScrollAtTop: target.scrollTop === 0,\r\n    })\r\n  }\r\n\r\n  public scrollContestChoices = /* istanbul ignore next: Tested by Cypress */ (\r\n    event: ButtonEvent\r\n  ) => {\r\n    const direction = (event.target as HTMLElement).dataset\r\n      .direction as ScrollDirections\r\n    const scrollContainer = this.scrollContainer.current!\r\n    const currentScrollTop = scrollContainer.scrollTop\r\n    const offsetHeight = scrollContainer.offsetHeight\r\n    const scrollHeight = scrollContainer.scrollHeight\r\n    const idealScrollDistance = Math.round(offsetHeight * 0.75)\r\n    const maxScrollableDownDistance =\r\n      scrollHeight - offsetHeight - currentScrollTop\r\n    const maxScrollTop =\r\n      direction === 'down'\r\n        ? currentScrollTop + maxScrollableDownDistance\r\n        : currentScrollTop\r\n    const idealScrollTop =\r\n      direction === 'down'\r\n        ? currentScrollTop + idealScrollDistance\r\n        : currentScrollTop - idealScrollDistance\r\n    const top = idealScrollTop > maxScrollTop ? maxScrollTop : idealScrollTop\r\n    scrollContainer.scrollTo({ behavior: 'smooth', left: 0, top })\r\n  }\r\n\r\n  public render() {\r\n    const {\r\n      contests,\r\n      election: {\r\n        bmdConfig: { showHelpPage, showSettingsPage },\r\n        parties,\r\n      },\r\n      votes,\r\n    } = this.context\r\n    const { isScrollable, isScrollAtBottom, isScrollAtTop } = this.state\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Main noOverflow noPadding>\r\n          <ContentHeader>\r\n            <Prose id=\"audiofocus\">\r\n              <h1 aria-label=\"Review your ballot selections. Use the down arrow to go through all contests. Use the select button to change a particular contest. When you are done reviewing, use the right arrow to continue.\">\r\n                Review Your Ballot Selections\r\n              </h1>\r\n              <Button\r\n                aria-hidden\r\n                data-direction=\"up\"\r\n                disabled={isScrollAtTop}\r\n                fullWidth\r\n                onClick={this.scrollContestChoices}\r\n              >\r\n                ↑ See More\r\n              </Button>\r\n            </Prose>\r\n          </ContentHeader>\r\n          <VariableContentContainer\r\n            showTopShadow={!isScrollAtTop}\r\n            showBottomShadow={!isScrollAtBottom}\r\n          >\r\n            <ScrollContainer\r\n              ref={this.scrollContainer}\r\n              onScroll={this.updateContestChoicesScrollStates}\r\n            >\r\n              <ScrollableContentWrapper isScrollable={isScrollable}>\r\n                {(contests as Contests).map((contest, i) => (\r\n                  <Contest\r\n                    id={`contest-${contest.id}`}\r\n                    key={contest.id}\r\n                    to={`/contests/${i}#review`}\r\n                  >\r\n                    <ContestProse compact>\r\n                      <h3 aria-label={`${contest.title.replace(',', '')},`}>\r\n                        {contest.section}, {contest.title}\r\n                      </h3>\r\n\r\n                      {contest.type === 'candidate' && (\r\n                        <CandidateContestResult\r\n                          contest={contest}\r\n                          parties={parties}\r\n                          vote={votes[contest.id] as CandidateVote}\r\n                        />\r\n                      )}\r\n                      {contest.type === 'yesno' && (\r\n                        <YesNoContestResult\r\n                          contest={contest}\r\n                          vote={votes[contest.id] as YesNoVote}\r\n                        />\r\n                      )}\r\n                    </ContestProse>\r\n                    <ContestActions aria-label=\"press enter to change your answer for this contest.\">\r\n                      <DecoyButton aria-hidden=\"true\">Change</DecoyButton>\r\n                    </ContestActions>\r\n                  </Contest>\r\n                ))}\r\n              </ScrollableContentWrapper>\r\n            </ScrollContainer>\r\n          </VariableContentContainer>\r\n          <ContentFooter>\r\n            <Button\r\n              aria-hidden\r\n              data-direction=\"down\"\r\n              disabled={isScrollAtBottom}\r\n              fullWidth\r\n              onClick={this.scrollContestChoices}\r\n            >\r\n              ↓ See More\r\n            </Button>\r\n          </ContentFooter>\r\n        </Main>\r\n        <ButtonBar>\r\n          <LinkButton to=\"/print\" id=\"next\">\r\n            Next\r\n          </LinkButton>\r\n          <div />\r\n          <div />\r\n          <div />\r\n        </ButtonBar>\r\n        <ButtonBar secondary separatePrimaryButton>\r\n          <div />\r\n          {showHelpPage && <LinkButton to=\"/help\">Help</LinkButton>}\r\n          {showSettingsPage && <LinkButton to=\"/settings\">Settings</LinkButton>}\r\n        </ButtonBar>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ReviewPage\r\n","import styled from 'styled-components'\r\n\r\nconst thumbSize = 1\r\nconst thumbRadius = thumbSize / 2\r\nconst stepSize = 0.5\r\nconst stepRadius = stepSize / 2\r\nconst trackBackgroundColor = 'rgb(211, 211, 211)'\r\nconst thumbColor = 'black'\r\n\r\nconst trackStyles = `\r\n  cursor: pointer;\r\n  width: 100%;\r\n  height: ${stepSize}rem;\r\n  margin: ${stepRadius}rem 0;\r\n  background: radial-gradient(\r\n      circle ${stepRadius}rem at calc(0% + ${thumbRadius}rem) ${stepRadius}rem,\r\n      ${thumbColor},\r\n      ${thumbColor} 100%,\r\n      transparent\r\n    ),\r\n    radial-gradient(\r\n      circle ${stepRadius}rem at calc((100% + 0.125rem) * .34) ${stepRadius}rem,\r\n      ${thumbColor},\r\n      ${thumbColor} 100%,\r\n      transparent\r\n    ),\r\n    radial-gradient(\r\n      circle ${stepRadius}rem at calc((100% - 0.125rem) * .66) ${stepRadius}rem,\r\n      ${thumbColor},\r\n      ${thumbColor} 100%,\r\n      transparent\r\n    ),\r\n    radial-gradient(\r\n      circle ${stepRadius}rem at calc(100% - ${thumbRadius}rem) ${stepRadius}rem,\r\n      ${thumbColor},\r\n      ${thumbColor} 100%,\r\n      transparent\r\n    ),\r\n    linear-gradient(\r\n      to right,\r\n      transparent,\r\n      transparent ${thumbRadius}rem,\r\n      ${trackBackgroundColor} ${thumbRadius}rem,\r\n      ${trackBackgroundColor} calc(100% - ${thumbRadius}rem),\r\n      transparent calc(100% - ${thumbRadius}rem),\r\n      transparent\r\n    ), #edeff0;\r\n  border-color: transparent;\r\n  color: transparent;\r\n`\r\nconst thumbStyles = `\r\n  height: ${thumbSize}rem;\r\n  width: ${thumbSize}rem;\r\n  border-radius: ${thumbRadius}rem;\r\n  background: ${thumbColor};\r\n  cursor: pointer;\r\n  margin-top: -${stepRadius}rem;\r\n`\r\n\r\nconst Range = styled.input.attrs({\r\n  type: 'range',\r\n})`\r\n  background: transparent;\r\n  width: 300px;\r\n  &,\r\n  &::-webkit-slider-runnable-track,\r\n  &::-webkit-slider-thumb {\r\n    appearance: none;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &::-webkit-slider-runnable-track {\r\n    ${trackStyles} /* stylelint-disable-line value-keyword-case */\r\n  }\r\n  &:focus::-webkit-slider-runnable-track {\r\n    outline: none;\r\n  }\r\n  &::-webkit-slider-thumb {\r\n    ${thumbStyles} /* stylelint-disable-line value-keyword-case */\r\n  }\r\n  &:focus::-webkit-slider-thumb {\r\n    outline: rgb(77, 144, 254) dashed 0.25rem;\r\n  }\r\n\r\n  /*\r\n\r\n  Enable the below if/when adding styles for Moz / MSIE\r\n\r\n  &::-moz-range-track {\r\n    ${trackStyles}\r\n  }\r\n  &::-moz-range-thumb {\r\n    ${thumbStyles}\r\n  }\r\n\r\n  &::-ms-track {\r\n    ${trackStyles}\r\n  }\r\n  &::-ms-fill-lower {\r\n    background: ${trackBackgroundColor};\r\n  }\r\n  &::-ms-fill-upper {\r\n    background: ${trackBackgroundColor};\r\n  }\r\n  &::-ms-thumb {\r\n    ${thumbStyles}\r\n  }\r\n  */\r\n`\r\n\r\nexport default Range\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport GLOBALS from '../config/globals'\r\n\r\nimport { ButtonEvent, InputEvent, TextSizeSetting } from '../config/types'\r\n\r\nimport BallotContext from '../contexts/ballotContext'\r\n\r\nimport Button from '../components/Button'\r\nimport ButtonBar from '../components/ButtonBar'\r\nimport LinkButton from '../components/LinkButton'\r\nimport Main, { MainChild } from '../components/Main'\r\nimport Modal from '../components/Modal'\r\nimport Prose from '../components/Prose'\r\nimport RangeInput from '../components/RangeInput'\r\nimport Text from '../components/Text'\r\n\r\nconst SettingLabel = styled.label`\r\n  display: block;\r\n  margin: 1.5rem 0 1rem;\r\n  font-size: 1.25rem;\r\n  font-weight: 700;\r\n`\r\nconst FontSizeControlsContainer = styled.div`\r\n  display: flex;\r\n  & input {\r\n    flex: 1;\r\n    margin-right: 0.5rem;\r\n    margin-left: 0.5rem;\r\n  }\r\n  button {\r\n    border-radius: 50%;\r\n    width: 2.5rem;\r\n    height: 2.5rem;\r\n    padding: 0 0 0.2rem;\r\n  }\r\n`\r\n\r\nconst SettingsPage = () => {\r\n  const { resetBallot, userSettings, setUserSettings, votes } = useContext(\r\n    BallotContext\r\n  )\r\n  const [showResetBallotAlert, setResetBallotAlert] = useState(false)\r\n  const cancelResetBallot = () => {\r\n    setResetBallotAlert(false)\r\n  }\r\n  const requestResetBallot = () => {\r\n    resetBallot()\r\n  }\r\n  const requestNewBallot = () => {\r\n    Object.keys(votes).length === 0 ? resetBallot() : setResetBallotAlert(true)\r\n  }\r\n  const onFontSizeChange = (event: InputEvent) => {\r\n    const target = event.target as HTMLInputElement\r\n    const textSize = +target.value as TextSizeSetting\r\n    setUserSettings({ textSize })\r\n  }\r\n  const adjustFontSize = (event: ButtonEvent) => {\r\n    const target = event.target as HTMLButtonElement\r\n    const textSize = (userSettings.textSize + +target.value) as TextSizeSetting\r\n    setUserSettings({ textSize })\r\n  }\r\n  return (\r\n    <>\r\n      <Main>\r\n        <MainChild>\r\n          <Prose>\r\n            <h1>Settings</h1>\r\n            <p>Adjust the following settings to meet your needs.</p>\r\n            <SettingLabel htmlFor=\"font-size\">Font Size</SettingLabel>\r\n            <FontSizeControlsContainer>\r\n              <Button\r\n                aria-hidden\r\n                data-testid=\"decrease-font-size-button\"\r\n                disabled={userSettings.textSize === 0}\r\n                onClick={adjustFontSize}\r\n                value={-1}\r\n              >\r\n                -\r\n              </Button>\r\n              <RangeInput\r\n                id=\"font-size\"\r\n                min={0}\r\n                max={3}\r\n                step={1}\r\n                value={userSettings.textSize}\r\n                onChange={onFontSizeChange}\r\n              />\r\n              <Button\r\n                aria-hidden\r\n                data-testid=\"increase-font-size-button\"\r\n                disabled={\r\n                  userSettings.textSize === GLOBALS.FONT_SIZES.length - 1\r\n                }\r\n                onClick={adjustFontSize}\r\n                value={1}\r\n              >\r\n                +\r\n              </Button>\r\n            </FontSizeControlsContainer>\r\n            <h2>Clear Selections</h2>\r\n            <p>Clear all selections and start over.</p>\r\n            <Button onClick={requestNewBallot}>Start Over</Button>\r\n          </Prose>\r\n        </MainChild>\r\n      </Main>\r\n      <ButtonBar>\r\n        <div />\r\n        <LinkButton goBack>Back</LinkButton>\r\n        <div />\r\n        <div />\r\n      </ButtonBar>\r\n      <Modal\r\n        isOpen={showResetBallotAlert}\r\n        content={\r\n          <Prose>\r\n            <Text>\r\n              Are you sure you want to clear all selections and start over?\r\n            </Text>\r\n          </Prose>\r\n        }\r\n        actions={\r\n          <>\r\n            <Button danger onClick={requestResetBallot}>\r\n              Yes, Remove All Votes\r\n            </Button>\r\n            <Button onClick={cancelResetBallot}>Cancel</Button>\r\n          </>\r\n        }\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SettingsPage\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport BallotContext from '../contexts/ballotContext'\r\n\r\nimport LinkButton from '../components/LinkButton'\r\nimport Main, { MainChild } from '../components/Main'\r\nimport Prose from '../components/Prose'\r\n\r\nconst Seal = styled.div`\r\n  margin: 0 auto 1rem;\r\n  max-width: 320px;\r\n`\r\n\r\nconst SealImage = styled.img`\r\n  max-width: 320px;\r\n`\r\n\r\nconst StartPage = () => {\r\n  const { ballotStyleId, election, precinctId } = useContext(BallotContext)\r\n  const { title, state, county, date, seal, sealURL } = election!\r\n\r\n  return (\r\n    <Main>\r\n      <MainChild center>\r\n        {seal ? (\r\n          <Seal aria-hidden=\"true\" dangerouslySetInnerHTML={{ __html: seal }} />\r\n        ) : sealURL ? (\r\n          <Seal aria-hidden=\"true\">\r\n            <SealImage alt=\"\" src={sealURL} />\r\n          </Seal>\r\n        ) : (\r\n          <React.Fragment />\r\n        )}\r\n        <Prose textCenter>\r\n          <h1 aria-label={`${title}.`}>{title}</h1>\r\n          <p aria-hidden=\"true\">\r\n            {date}\r\n            <br />\r\n            {county.name}, {state}\r\n            <br />\r\n            Ballot Style {ballotStyleId}\r\n            <br />\r\n            Precinct {precinctId}\r\n          </p>\r\n          <p>\r\n            <LinkButton\r\n              primary\r\n              to=\"/instructions/\"\r\n              id=\"next\"\r\n              aria-label=\"Select Next to Get Started.\"\r\n            >\r\n              Get Started\r\n            </LinkButton>\r\n          </p>\r\n        </Prose>\r\n      </MainChild>\r\n    </Main>\r\n  )\r\n}\r\n\r\nexport default StartPage\r\n","import React, { useContext } from 'react'\r\n\r\nimport Breadcrumbs from '../components/Breadcrumbs'\r\nimport ButtonBar from '../components/ButtonBar'\r\nimport LinkButton from '../components/LinkButton'\r\nimport Main, { MainChild } from '../components/Main'\r\nimport Prose from '../components/Prose'\r\nimport Text from '../components/Text'\r\nimport BallotContext from '../contexts/ballotContext'\r\n\r\nconst InstructionsPage = () => {\r\n  const { contests, election } = useContext(BallotContext)\r\n  const { bmdConfig } = election!\r\n  const { showHelpPage, showSettingsPage } = bmdConfig!\r\n  return (\r\n    <React.Fragment>\r\n      <Main>\r\n        <MainChild center id=\"audiofocus\">\r\n          <Breadcrumbs step={1} />\r\n          <Prose textCenter>\r\n            <h1 aria-label=\"Mark your ballot.\">Mark your ballot</h1>\r\n            <Text narrow>{`This ballot has ${contests.length} contests.`}</Text>\r\n            <p>\r\n              <LinkButton\r\n                primary\r\n                big\r\n                to=\"/contests/\"\r\n                id=\"next\"\r\n                aria-label=\"Select Next to Start Voting.\"\r\n              >\r\n                Start Voting\r\n              </LinkButton>\r\n            </p>\r\n          </Prose>\r\n        </MainChild>\r\n      </Main>\r\n      <ButtonBar secondary separatePrimaryButton>\r\n        <div />\r\n        {showHelpPage && <LinkButton to=\"/help\">Help</LinkButton>}\r\n        {showSettingsPage && <LinkButton to=\"/settings\">Settings</LinkButton>}\r\n      </ButtonBar>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default InstructionsPage\r\n","// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport { ElectionGuardAPI } from 'eg-api'\r\nimport { VotesDict, BallotTrackerType } from './config/types'\r\n\r\n// const hardWiredTracker =\r\n//   'Quill X8TP7 Home 4X815 Tree EB5Q2 Elephant M8MDP Cup 8D33U Balloon YN31A Frame PHK3X Link T98RV Dancer'\r\n\r\n// export default function encryptAndGetTracker(\r\n//   // eslint-disable-next-line\r\n//   trackerType: BallotTrackerType,\r\n//   // eslint-disable-next-line\r\n//   votes: VotesDict\r\n// ): Promise<string> {\r\n//   return new Promise(resolve => {\r\n//     window.setTimeout(() => {\r\n//       resolve(hardWiredTracker)\r\n//     }, 100)\r\n//   })\r\n// }\r\n\r\nexport default function encryptAndGetTracker(\r\n  // eslint-disable-next-line\r\n  trackerType: BallotTrackerType,\r\n  // eslint-disable-next-line\r\n  votes: VotesDict\r\n): Promise<string> {\r\n  // eslint-disable-next-line no-console\r\n  console.log('input=', votes)\r\n  const api = new ElectionGuardAPI()\r\n  return api.encryptVote(votes)\r\n}\r\n","import React from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport QRCode from '../components/QRCode'\r\nimport Seal from '../components/Seal'\r\nimport encryptAndGetTracker from '../endToEnd'\r\n\r\nimport ButtonBar from '../components/ButtonBar'\r\nimport Main, { MainChild } from '../components/Main'\r\nimport Prose from '../components/Prose'\r\nimport BallotContext from '../contexts/ballotContext'\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  height: 0.75in;\r\n  & h2 {\r\n    margin-bottom: 0;\r\n  }\r\n  & h3 {\r\n    margin-top: 0;\r\n  }\r\n  & > .ballot-header-content {\r\n    flex: 1;\r\n    margin: 0 1rem;\r\n    max-width: 100%;\r\n  }\r\n`\r\nconst Content = styled.div`\r\n  flex: 1;\r\n  line-height: 1.2;\r\n`\r\n\r\nconst Highlight = styled.div`\r\n  background: #dddddd;\r\n  padding: 20px;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n  border-top: 0.3rem solid #000000;\r\n  width: 100%;\r\n`\r\n\r\nconst ThinDivider = styled.div`\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n  border-top: 0.1rem solid #000000;\r\n  width: 100%;\r\n`\r\n\r\nconst VerticalDivider = styled.div`\r\n  margin: auto;\r\n  border: 0.1rem solid #000000;\r\n  width: 4px;\r\n  height: 80%;\r\n`\r\n\r\nconst Large = styled.div`\r\n  padding: 10px;\r\n  font-size: 1.3em;\r\n`\r\n\r\nconst TrackingID = styled.div`\r\n  margin: 15px;\r\n  border: 0.1rem solid #000000;\r\n  padding: 20px;\r\n  font-size: 0.9em;\r\n`\r\n\r\nconst Steps = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 33% 34% 33%;\r\n  margin: auto;\r\n  width: 100%;\r\n  font-size: 0.9em;\r\n  justify-items: center;\r\n  & > div {\r\n    padding-right: 60px;\r\n    padding-left: 60px;\r\n  }\r\n  & > div > img {\r\n    display: block;\r\n    height: 10rem;\r\n  }\r\n`\r\n\r\nconst TrackerOptions = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 55% 10% 35%;\r\n  margin: auto;\r\n  width: 100%;\r\n  font-size: 1.3em;\r\n  justify-items: center;\r\n  & > div {\r\n    padding: 10px 20px 20px 20px;\r\n  }\r\n`\r\n\r\nconst QRCodeContainer = styled.div`\r\n  margin-top: 1rem;\r\n  margin-right: 2rem;\r\n  margin-left: 2rem;\r\n  border: 0.1rem solid #000000;\r\n  padding: 1rem;\r\n`\r\n\r\nconst SealContainer = styled.div`\r\n  float: left;\r\n  width: 6rem;\r\n  padding-right: 1rem;\r\n`\r\n\r\nconst ElectionDetails = styled.div`\r\n  float: right;\r\n  margin-top: 1rem;\r\n  margin-right: 1rem;\r\n  width: 20rem;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  font-size: 1em;\r\n`\r\n\r\ninterface State {\r\n  tracker: string\r\n}\r\n\r\nclass TrackerPage extends React.Component<RouteComponentProps, State> {\r\n  public static contextType = BallotContext\r\n\r\n  public state: State = {\r\n    tracker: '',\r\n  }\r\n\r\n  public numStepImagesLoaded = 0\r\n\r\n  public componentDidMount = async () => {\r\n    window.addEventListener('afterprint', this.resetBallot)\r\n    const {\r\n      election: { ballotTrackerConfig },\r\n      votes,\r\n    } = this.context\r\n\r\n    const tracker = await encryptAndGetTracker(\r\n      ballotTrackerConfig.trackerType,\r\n      votes\r\n    )\r\n    this.setState({ tracker })\r\n    if (tracker === '') {\r\n      window.alert('Encryption Server Error')\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount = () => {\r\n    window.removeEventListener('afterprint', this.resetBallot)\r\n  }\r\n\r\n  public resetBallot = () => {\r\n    // Putting it back into event loop because infinite recursion otherwise.\r\n    // TODO: figure out a cleaner way to do this.\r\n    window.setTimeout(() => {\r\n      this.context.resetBallot('/cast')\r\n    }, 100)\r\n  }\r\n\r\n  public stepImageLoaded = () => {\r\n    this.numStepImagesLoaded += 1\r\n\r\n    if (this.numStepImagesLoaded === 3) {\r\n      window.print()\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const {\r\n      election: {\r\n        seal,\r\n        sealURL,\r\n        title,\r\n        county,\r\n        state,\r\n        date,\r\n        ballotTrackerConfig,\r\n      },\r\n    } = this.context\r\n\r\n    const { trackerSiteDisplay, trackerUrlTemplate } = ballotTrackerConfig\r\n\r\n    const { tracker } = this.state\r\n\r\n    if (!tracker) {\r\n      return <React.Fragment>Generating tracker...</React.Fragment>\r\n    }\r\n\r\n    const trackerChunks = tracker.split(' ')\r\n    const boldTrackerChunk = trackerChunks.slice(0, 2).join(' ')\r\n    const restTracker = trackerChunks.slice(2).join(' ')\r\n\r\n    const trackerSafeForEmbedding = tracker.replace(/ /g, '-')\r\n    const trackerUrl = trackerUrlTemplate.replace(\r\n      '<tracker_id>',\r\n      trackerSafeForEmbedding\r\n    )\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Main>\r\n          <MainChild>\r\n            <Prose className=\"no-print\">\r\n              <h1 aria-label=\"Print your tracker.\">\r\n                Now printing your tracker...\r\n              </h1>\r\n              <p>Hold on just a few seconds.</p>\r\n            </Prose>\r\n            <div aria-hidden=\"true\" className=\"print-only\">\r\n              <Header>\r\n                <Prose className=\"ballot-header-content\">\r\n                  <h1>Tracker</h1>\r\n                  <h2>&#x279c; take this home with you</h2>\r\n                </Prose>\r\n              </Header>\r\n              <Content>\r\n                <Highlight>\r\n                  <strong>\r\n                    Use the unique tracking ID below to track your individual\r\n                    ballot and see it’s been recorded.\r\n                  </strong>{' '}\r\n                  Although the contents of your ballot will always remain\r\n                  secret, you can verify that the vote recorded was at the time\r\n                  and place that you voted.\r\n                </Highlight>\r\n                <Divider />\r\n                <Steps>\r\n                  <div>\r\n                    <img\r\n                      onLoad={this.stepImageLoaded}\r\n                      alt=\"Step 1\"\r\n                      src=\"/tracker-step1.svg\"\r\n                      data-testid=\"step1-img\"\r\n                    />\r\n                    <br />\r\n                    <strong>Step 1</strong>: Put your ballot in a ballot box or\r\n                    take it to a poll worker. Then take this page home with you.\r\n                  </div>\r\n                  <div>\r\n                    <img\r\n                      onLoad={this.stepImageLoaded}\r\n                      alt=\"Step 2\"\r\n                      src=\"/tracker-step2.svg\"\r\n                      data-testid=\"step2-img\"\r\n                    />\r\n                    <br />\r\n                    <strong>Step 2</strong>: After the polls close, go online to\r\n                    track your ballot.\r\n                  </div>\r\n                  <div>\r\n                    <img\r\n                      onLoad={this.stepImageLoaded}\r\n                      alt=\"Step 3\"\r\n                      src=\"/tracker-step3.svg\"\r\n                      data-testid=\"step3-img\"\r\n                    />\r\n                    <br />\r\n                    <strong>Step 3</strong>: Your tracker ID will show public\r\n                    information for you to confirm your ballot was counted.\r\n                  </div>\r\n                </Steps>\r\n                <ThinDivider />\r\n                <Large>\r\n                  Visit <b>{trackerSiteDisplay}</b> and either:\r\n                </Large>\r\n                <TrackerOptions>\r\n                  <div>\r\n                    Type the bold part below, then match the rest of the Tracker\r\n                    ID:{' '}\r\n                    <TrackingID>\r\n                      <strong>{boldTrackerChunk}</strong> {restTracker}\r\n                    </TrackingID>\r\n                  </div>\r\n                  <div>\r\n                    <b>OR</b>\r\n                    <br />\r\n                    <br />\r\n                    <VerticalDivider />\r\n                  </div>\r\n                  <div>\r\n                    Scan this tracker ID code:\r\n                    <br />\r\n                    <QRCodeContainer>\r\n                      <QRCode value={trackerUrl} />\r\n                    </QRCodeContainer>\r\n                  </div>\r\n                </TrackerOptions>\r\n                <ElectionDetails>\r\n                  <SealContainer>\r\n                    <Seal seal={seal} sealURL={sealURL} />\r\n                  </SealContainer>\r\n                  <strong>{title}</strong>\r\n                  <br />\r\n                  {date}\r\n                  <br />\r\n                  <strong>{county.name}</strong>\r\n                  <br />\r\n                  {state}\r\n                </ElectionDetails>\r\n              </Content>\r\n            </div>\r\n          </MainChild>\r\n        </Main>\r\n        <ButtonBar />\r\n        <ButtonBar secondary separatePrimaryButton>\r\n          <div />\r\n        </ButtonBar>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TrackerPage\r\n","import React, { useContext } from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\n\r\nimport { Election } from '../config/types'\r\n\r\nimport BallotContext from '../contexts/ballotContext'\r\n\r\nimport ActivationPage from '../pages/ActivationPage'\r\nimport CastBallotPage from '../pages/CastBallotPage'\r\nimport ContestPage from '../pages/ContestPage'\r\nimport HelpPage from '../pages/HelpPage'\r\nimport NotFoundPage from '../pages/NotFoundPage'\r\nimport PreReviewPage from '../pages/PreReviewPage'\r\nimport PrintPage from '../pages/PrintPage'\r\nimport ReviewPage from '../pages/ReviewPage'\r\nimport SettingsPage from '../pages/SettingsPage'\r\nimport StartPage from '../pages/StartPage'\r\nimport InstructionsPage from '../pages/InstructionsPage'\r\nimport TrackerPage from '../pages/TrackerPage'\r\n\r\nconst Ballot = () => {\r\n  const {\r\n    ballotStyleId,\r\n    contests,\r\n    election: contextElection,\r\n    precinctId,\r\n  } = useContext(BallotContext)\r\n  const election = contextElection as Election\r\n  const {\r\n    requireActivation,\r\n    showHelpPage,\r\n    showSettingsPage,\r\n  } = election.bmdConfig!\r\n  const ballotActivated = !!ballotStyleId && !!precinctId\r\n\r\n  return (\r\n    <Switch>\r\n      {requireActivation && !ballotActivated ? (\r\n        <Route exact path=\"/\" component={ActivationPage} />\r\n      ) : (\r\n        <Redirect exact path=\"/\" to=\"/start\" />\r\n      )}\r\n      <Route exact path=\"/activate\" component={ActivationPage} />\r\n      {election.ballotTrackerConfig ? (\r\n        <Route exact path=\"/tracker\" component={TrackerPage} />\r\n      ) : (\r\n        <Redirect exact path=\"/tracker\" to=\"/\" />\r\n      )}\r\n      <Route path=\"/cast\" component={CastBallotPage} />\r\n      <Route path=\"/start\" exact component={StartPage} />\r\n      <Route path=\"/instructions\" exact component={InstructionsPage} />\r\n      <Redirect\r\n        exact\r\n        from=\"/contests\"\r\n        to={contests.length ? '/contests/0' : '/'}\r\n      />\r\n      <Route path=\"/contests/:contestNumber\" component={ContestPage} />\r\n      <Route path=\"/pre-review\" component={PreReviewPage} />\r\n      <Route path=\"/review\" component={ReviewPage} />\r\n      <Route path=\"/print\" component={PrintPage} />\r\n      {showHelpPage && <Route path=\"/help\" component={HelpPage} />}\r\n      {showSettingsPage && <Route path=\"/settings\" component={SettingsPage} />}\r\n      <Route path=\"/:path\" component={NotFoundPage} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Ballot\r\n","import React from 'react'\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledScreen = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`\r\n\r\nclass Screen extends React.Component<RouteComponentProps> {\r\n  public screen = React.createRef<HTMLDivElement>()\r\n  public componentDidMount() {\r\n    this.focus()\r\n  }\r\n  public componentDidUpdate(prevProps: RouteComponentProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      this.focus()\r\n    }\r\n  }\r\n  public focus = () => {\r\n    const elementToFocus =\r\n      document.getElementById('audiofocus') || this.screen.current!\r\n    elementToFocus.focus()\r\n    elementToFocus.click()\r\n  }\r\n  public render() {\r\n    return (\r\n      <StyledScreen ref={this.screen} tabIndex={-1}>\r\n        {this.props.children}\r\n      </StyledScreen>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Screen)\r\n","/* eslint-disable @typescript-eslint/no-explicit-any */\r\n\r\n// Ported to TypeScript from:\r\n// https://github.com/joaquimserafim/isJSON\r\n\r\nfunction isString(x: string) {\r\n  return Object.prototype.toString.call(x) === '[object String]'\r\n}\r\n\r\nfunction isObject(obj: {}) {\r\n  return Object.prototype.toString.call(obj) === '[object Object]'\r\n}\r\n\r\nexport function isJSON(str: any, passObject?: boolean): boolean {\r\n  if (passObject && isObject(str)) {\r\n    return true\r\n  }\r\n\r\n  if (!isString(str)) {\r\n    return false\r\n  }\r\n\r\n  str = str.replace(/\\s/g, '').replace(/\\n|\\r/, '')\r\n\r\n  if (/^\\{(.*?)\\}$/.test(str)) {\r\n    return /\"(.*?)\":(.*?)/g.test(str)\r\n  }\r\n\r\n  if (/^\\[(.*?)\\]$/.test(str)) {\r\n    return (\r\n      str\r\n        .replace(/^\\[/, '')\r\n        .replace(/\\]$/, '')\r\n        .replace(/},{/g, '}\\n{')\r\n        .split(/\\n/)\r\n        .map((s: any) => isJSON(s))\r\n        // @ts-ignore: 'prev' must be defined but is unused.\r\n        .reduce((prev: any, curr: any) => !!curr)\r\n    )\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nexport function isJSONStrict(str: any) {\r\n  if (isObject(str)) {\r\n    return true\r\n  }\r\n\r\n  try {\r\n    return JSON.parse(str) && true\r\n  } catch (ex) {\r\n    return false\r\n  }\r\n}\r\n\r\nexport default isJSON\r\n","import React from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport styled from 'styled-components'\r\n\r\nimport electionSample from '../data/electionSample.json'\r\nimport isJSON from '../utils/isJSON'\r\n\r\nimport Button from './Button'\r\nimport Prose from './Prose'\r\nimport { Election } from '../config/types'\r\nimport Main, { MainChild } from './Main'\r\nimport Text from './Text'\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  flex: 1;\r\n  margin: auto;\r\n  width: 100%;\r\n`\r\n\r\nconst Footer = styled.footer`\r\n  padding: 1rem;\r\n`\r\n\r\ninterface Props {\r\n  setElection: (election: Election) => void\r\n}\r\ninterface State {\r\n  errorMessage: string\r\n  loaded: boolean\r\n  loading: boolean\r\n}\r\n\r\nconst initialState = {\r\n  errorMessage: '',\r\n  loaded: false,\r\n  loading: false,\r\n}\r\n\r\nclass UploadConfig extends React.Component<Props, State> {\r\n  public state: State = initialState\r\n\r\n  public setErrorMessage = (\r\n    errorMessage: string = 'Only files that end in \".json\" are accepted. Try again.'\r\n  ) => {\r\n    this.setState({\r\n      ...initialState,\r\n      errorMessage,\r\n    })\r\n  }\r\n\r\n  public loadSampleElection = () => {\r\n    this.props.setElection(electionSample as Election)\r\n  }\r\n\r\n  public onDrop = (acceptedFiles: File[]) => {\r\n    if (acceptedFiles.length === 1) {\r\n      acceptedFiles.forEach((file: File) => {\r\n        if (file.name.endsWith('.json')) {\r\n          const reader = new FileReader()\r\n          reader.onload = () => {\r\n            this.setState({\r\n              loading: true,\r\n            })\r\n            const result = reader.result\r\n            if (typeof result === 'string' && isJSON(result)) {\r\n              window.setTimeout(() => {\r\n                this.setState({\r\n                  ...initialState,\r\n                  loaded: true,\r\n                })\r\n                const election = JSON.parse(result)\r\n                // TODO: Test that uploaded election.json file matches expected object shape. https://github.com/votingworks/bmd/issues/23\r\n                this.props.setElection(election)\r\n              }, 100)\r\n            } else {\r\n              this.setErrorMessage(\r\n                'File content must be JSON text only. Try again.'\r\n              )\r\n            }\r\n          }\r\n          reader.readAsText(file)\r\n        } else {\r\n          this.setErrorMessage()\r\n        }\r\n      })\r\n    } else {\r\n      this.setErrorMessage()\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const { loading, loaded, errorMessage } = this.state\r\n    return (\r\n      <>\r\n        <Main noPadding>\r\n          {loading || loaded ? (\r\n            <p>{loaded ? 'File loaded' : 'Loading file…'} </p>\r\n          ) : (\r\n            <Dropzone\r\n              accept=\"application/json\"\r\n              onDrop={this.onDrop}\r\n              multiple={false}\r\n            >\r\n              {({ getRootProps, getInputProps, isDragActive }) => (\r\n                <Label\r\n                  // TODO:: remove \"as\" after issue resolved:\r\n                  // https://github.com/react-dropzone/react-dropzone/issues/182\r\n                  as=\"div\"\r\n                  data-testid=\"dropzone\"\r\n                  htmlFor=\"election-file-upload\"\r\n                  {...getRootProps()}\r\n                >\r\n                  <MainChild center padded>\r\n                    <input\r\n                      id=\"election-file-upload\"\r\n                      data-testid=\"file-input\"\r\n                      {...getInputProps()}\r\n                    />\r\n                    <Prose textCenter>\r\n                      {isDragActive ? (\r\n                        <p>Drop files here…</p>\r\n                      ) : (\r\n                        <React.Fragment>\r\n                          <h1>Load Election Configuration File</h1>\r\n                          <p>\r\n                            Drag and drop <code>election.json</code> file here,\r\n                            or click to browse for file.\r\n                          </p>\r\n                          {errorMessage && <Text error>{errorMessage}</Text>}\r\n                        </React.Fragment>\r\n                      )}\r\n                    </Prose>\r\n                  </MainChild>\r\n                </Label>\r\n              )}\r\n            </Dropzone>\r\n          )}\r\n        </Main>\r\n        <Footer>\r\n          <Prose textCenter>\r\n            <Text center small>\r\n              <a href=\"/data/election.json\">\r\n                Download sample <code>election.json</code> file\r\n              </a>{' '}\r\n              to upload, or{' '}\r\n              <Button onClick={this.loadSampleElection}>\r\n                Load Sample Election File\r\n              </Button>\r\n            </Text>\r\n          </Prose>\r\n        </Footer>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UploadConfig\r\n","import Mousetrap from 'mousetrap'\r\nimport React from 'react'\r\n// @ts-ignore - @types/react-gamepad doesn't exist\r\nimport Gamepad from 'react-gamepad'\r\nimport { BrowserRouter, Route, RouteComponentProps } from 'react-router-dom'\r\n\r\nimport GLOBALS from './config/globals'\r\n\r\nimport 'normalize.css'\r\nimport './App.css'\r\n\r\nimport {\r\n  handleGamepadButtonDown,\r\n  handleGamepadKeyboardEvent,\r\n} from './lib/gamepad'\r\n\r\nimport {\r\n  ActivationData,\r\n  BallotStyle,\r\n  CardData,\r\n  Contests,\r\n  Election,\r\n  ElectionDefaults,\r\n  OptionalElection,\r\n  OptionalVote,\r\n  PartialUserSettings,\r\n  TextSizeSetting,\r\n  UserSettings,\r\n  VoterCardData,\r\n  VotesDict,\r\n} from './config/types'\r\n\r\nimport Ballot from './components/Ballot'\r\nimport Screen from './components/Screen'\r\nimport UploadConfig from './components/UploadConfig'\r\nimport BallotContext from './contexts/ballotContext'\r\n\r\nimport electionDefaults from './data/electionDefaults.json'\r\nimport electionSample from './data/electionSample.json'\r\n\r\nexport const mergeWithDefaults = (\r\n  election: Election,\r\n  defaults: ElectionDefaults = electionDefaults\r\n) => ({ ...defaults, ...election })\r\n\r\ninterface State {\r\n  ballotStyleId: string\r\n  cardData?: CardData\r\n  contests: Contests\r\n  election: OptionalElection\r\n  loadingElection: boolean\r\n  precinctId: string\r\n  userSettings: UserSettings\r\n  votes: VotesDict\r\n}\r\n\r\nexport const electionKey = 'election'\r\nexport const activationStorageKey = 'activation'\r\nexport const votesStorageKey = 'votes'\r\nconst removeElectionShortcuts = ['mod+k']\r\n\r\nconst initialState = {\r\n  ballotStyleId: '',\r\n  contests: [],\r\n  election: undefined,\r\n  loadingElection: false,\r\n  precinctId: '',\r\n  userSettings: { textSize: GLOBALS.TEXT_SIZE as TextSizeSetting },\r\n  votes: {},\r\n}\r\n\r\ninterface CompleteCardData {\r\n  cardData: CardData\r\n  longValueExists: boolean\r\n}\r\n\r\nlet checkCardInterval = 0\r\nlet cardReaderAttached = true\r\n\r\nexport class App extends React.Component<RouteComponentProps, State> {\r\n  public state: State = initialState\r\n\r\n  public processVoterCardData = (voterCardData: VoterCardData) => {\r\n    if (!this.state.election) {\r\n      return\r\n    }\r\n\r\n    // better UI at some point\r\n    // don't reuse a card that has been written\r\n    if (voterCardData.uz) {\r\n      return\r\n    }\r\n\r\n    const ballotStyle = this.state.election.ballotStyles.find(\r\n      bs => voterCardData.bs === bs.id\r\n    )\r\n    const precinct = this.state.election.precincts.find(\r\n      pr => pr.id === voterCardData.pr\r\n    )\r\n\r\n    if (ballotStyle && precinct) {\r\n      const activationData: ActivationData = {\r\n        ballotStyle,\r\n        precinct,\r\n      }\r\n      this.activateBallot(activationData)\r\n    }\r\n  }\r\n\r\n  public processCardData = (completeCardData: CompleteCardData) => {\r\n    const { cardData, longValueExists } = completeCardData\r\n\r\n    switch (cardData.t) {\r\n      case 'voter':\r\n        this.processVoterCardData(cardData as VoterCardData)\r\n        break\r\n      case 'pollworker':\r\n        // poll worker admin screen goes here\r\n        break\r\n      case 'clerk':\r\n        if (\r\n          !this.state.election &&\r\n          longValueExists &&\r\n          !this.state.loadingElection\r\n        ) {\r\n          this.setState({ loadingElection: true })\r\n          this.fetchElection().then(election => {\r\n            // setTimeout to prevent tests from going into infinite loops\r\n            window.setTimeout(() => {\r\n              this.setElection(JSON.parse(election.longValue))\r\n            }, 0)\r\n          })\r\n        }\r\n        break\r\n    }\r\n  }\r\n\r\n  public fetchElection = async () => {\r\n    return fetch('/card/read_long').then(result => result.json())\r\n  }\r\n\r\n  public startPolling = () => {\r\n    checkCardInterval = window.setInterval(() => {\r\n      fetch('/card/read')\r\n        .then(result => result.json())\r\n        .then(resultJSON => {\r\n          // card was just taken out\r\n          const { ballotStyleId } = this.getBallotActivation()\r\n          if (!resultJSON.present && ballotStyleId) {\r\n            this.resetBallot()\r\n            return\r\n          }\r\n\r\n          if (resultJSON.shortValue) {\r\n            const cardData = JSON.parse(resultJSON.shortValue) as CardData\r\n            this.processCardData({\r\n              cardData: cardData,\r\n              longValueExists: resultJSON.longValueExists,\r\n            })\r\n          }\r\n        })\r\n        .catch(() => {\r\n          // if it's an error, aggressively assume there's no backend and stop hammering\r\n          this.stopPolling()\r\n          cardReaderAttached = false\r\n        })\r\n    }, 200)\r\n  }\r\n\r\n  public stopPolling = () => {\r\n    window.clearInterval(checkCardInterval)\r\n  }\r\n\r\n  public markVoterCardUsed = async () => {\r\n    // this is a demo with no card reader attached\r\n    // TODO: limit this to demo elections\r\n    // https://github.com/votingworks/bmd/issues/390\r\n    if (!cardReaderAttached) {\r\n      return true\r\n    }\r\n\r\n    const { ballotStyleId, precinctId } = this.getBallotActivation()\r\n\r\n    const newCardData: VoterCardData = {\r\n      bs: ballotStyleId,\r\n      pr: precinctId,\r\n      t: 'voter',\r\n      uz: new Date().getTime(),\r\n    }\r\n\r\n    const newCardDataSerialized = JSON.stringify(newCardData)\r\n\r\n    await fetch('/card/write', {\r\n      method: 'post',\r\n      body: newCardDataSerialized,\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n\r\n    const readCheck = await fetch('/card/read')\r\n    const readCheckObj = await readCheck.json()\r\n\r\n    return readCheckObj.shortValue === newCardDataSerialized\r\n  }\r\n\r\n  public componentDidMount = () => {\r\n    if (window.location.hash === '#sample') {\r\n      this.setState({\r\n        election: mergeWithDefaults(electionSample as Election),\r\n      })\r\n    } else {\r\n      const election = this.getElection()\r\n      const { ballotStyleId, precinctId } = this.getBallotActivation()\r\n      const ballotStyle =\r\n        ballotStyleId &&\r\n        election &&\r\n        election.ballotStyles.find(bs => bs.id === ballotStyleId)\r\n      const contests = ballotStyle\r\n        ? this.getContests(ballotStyle, election)\r\n        : initialState.contests\r\n      this.setState({\r\n        ballotStyleId,\r\n        contests,\r\n        election,\r\n        precinctId,\r\n        votes: this.getVotes(),\r\n      })\r\n    }\r\n    Mousetrap.bind(removeElectionShortcuts, this.reset)\r\n    document.addEventListener('keydown', handleGamepadKeyboardEvent)\r\n    document.documentElement.setAttribute('data-useragent', navigator.userAgent)\r\n    this.setDocumentFontSize()\r\n\r\n    this.startPolling()\r\n  }\r\n\r\n  public componentWillUnount = /* istanbul ignore next - triggering keystrokes issue - https://github.com/votingworks/bmd/issues/62 */ () => {\r\n    Mousetrap.unbind(removeElectionShortcuts)\r\n    document.removeEventListener('keydown', handleGamepadKeyboardEvent)\r\n    window.clearInterval(checkCardInterval)\r\n  }\r\n\r\n  public getElection = (): OptionalElection => {\r\n    const election = window.localStorage.getItem(electionKey)\r\n    return election ? JSON.parse(election) : undefined\r\n  }\r\n\r\n  public setElection = (electionConfigFile: Election) => {\r\n    const election = mergeWithDefaults(electionConfigFile)\r\n    this.setState({ election, loadingElection: false })\r\n    window.localStorage.setItem(electionKey, JSON.stringify(election))\r\n  }\r\n\r\n  public getBallotActivation = () => {\r\n    const voterData = window.localStorage.getItem(activationStorageKey)\r\n    return voterData ? JSON.parse(voterData) : {}\r\n  }\r\n\r\n  public setBallotActivation = (data: {\r\n    ballotStyleId: string\r\n    precinctId: string\r\n  }) => {\r\n    /* istanbul ignore else */\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      window.localStorage.setItem(activationStorageKey, JSON.stringify(data))\r\n    }\r\n  }\r\n\r\n  public getVotes = () => {\r\n    const votesData = window.localStorage.getItem(votesStorageKey)\r\n    return votesData ? JSON.parse(votesData) : {}\r\n  }\r\n\r\n  public setVotes = (votes: VotesDict) => {\r\n    /* istanbul ignore else */\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      window.localStorage.setItem(votesStorageKey, JSON.stringify(votes))\r\n    }\r\n  }\r\n\r\n  public resetVoterData = () => {\r\n    window.localStorage.removeItem(activationStorageKey)\r\n    window.localStorage.removeItem(votesStorageKey)\r\n  }\r\n\r\n  public reset = /* istanbul ignore next - triggering keystrokes issue - https://github.com/votingworks/bmd/issues/62 */ () => {\r\n    this.setState(initialState)\r\n    window.localStorage.removeItem(electionKey)\r\n    this.resetVoterData()\r\n    this.props.history.push('/')\r\n  }\r\n\r\n  public updateVote = (contestId: string, vote: OptionalVote) => {\r\n    this.setState(\r\n      prevState => ({\r\n        votes: { ...prevState.votes, [contestId]: vote },\r\n      }),\r\n      () => {\r\n        this.setVotes(this.state.votes)\r\n      }\r\n    )\r\n  }\r\n\r\n  public resetBallot = (path: string = '/') => {\r\n    this.resetVoterData()\r\n    this.setState(\r\n      {\r\n        ...initialState,\r\n        election: this.getElection(),\r\n      },\r\n      () => {\r\n        this.props.history.push(path)\r\n      }\r\n    )\r\n  }\r\n\r\n  public getContests = (ballotStyle: BallotStyle, election?: Election) =>\r\n    (election || this.state.election!).contests.filter(\r\n      c =>\r\n        ballotStyle.districts.includes(c.districtId) &&\r\n        ballotStyle.partyId === c.partyId\r\n    )\r\n\r\n  public activateBallot = ({ ballotStyle, precinct }: ActivationData) => {\r\n    this.setBallotActivation({\r\n      ballotStyleId: ballotStyle.id,\r\n      precinctId: precinct.id,\r\n    })\r\n    this.setState({\r\n      ballotStyleId: ballotStyle.id,\r\n      contests: this.getContests(ballotStyle),\r\n      precinctId: precinct.id,\r\n    })\r\n  }\r\n\r\n  public setUserSettings = (partial: PartialUserSettings) => {\r\n    this.setState(\r\n      prevState => ({\r\n        userSettings: { ...prevState.userSettings, ...partial },\r\n      }),\r\n      () => {\r\n        const { textSize } = partial\r\n        const isValidTextSize =\r\n          'textSize' in partial &&\r\n          typeof textSize === 'number' &&\r\n          textSize >= 0 &&\r\n          textSize <= GLOBALS.FONT_SIZES.length - 1\r\n        /* istanbul ignore else */\r\n        if (isValidTextSize) {\r\n          this.setDocumentFontSize(textSize!)\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  public setDocumentFontSize = (textSize: number = GLOBALS.TEXT_SIZE) => {\r\n    document.documentElement.style.fontSize = `${\r\n      GLOBALS.FONT_SIZES[textSize]\r\n    }px`\r\n  }\r\n\r\n  public componentDidCatch() {\r\n    this.reset()\r\n    window.location.reload()\r\n  }\r\n\r\n  public render() {\r\n    const { election } = this.state\r\n    if (!election) {\r\n      return <UploadConfig setElection={this.setElection} />\r\n    } else {\r\n      return (\r\n        <Gamepad onButtonDown={handleGamepadButtonDown}>\r\n          <BallotContext.Provider\r\n            value={{\r\n              activateBallot: this.activateBallot,\r\n              ballotStyleId: this.state.ballotStyleId,\r\n              contests: this.state.contests,\r\n              election,\r\n              markVoterCardUsed: this.markVoterCardUsed,\r\n              precinctId: this.state.precinctId,\r\n              resetBallot: this.resetBallot,\r\n              setUserSettings: this.setUserSettings,\r\n              updateVote: this.updateVote,\r\n              userSettings: this.state.userSettings,\r\n              votes: this.state.votes,\r\n            }}\r\n          >\r\n            <Ballot />\r\n          </BallotContext.Provider>\r\n        </Gamepad>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst Root = () => (\r\n  <BrowserRouter>\r\n    <Screen>\r\n      <Route path=\"/\" component={App} />\r\n    </Screen>\r\n  </BrowserRouter>\r\n)\r\n\r\nexport default Root\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (!installingWorker) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              /* eslint-disable-next-line no-console */\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              /* eslint-disable-next-line no-console */\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      /* eslint-disable-next-line no-console */\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      /* eslint-disable-next-line no-console */\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\ninterface Config {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    )\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          /* eslint-disable-next-line no-console */\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root')!)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar nounlist_1 = require(\"./data/nounlist\");\n/**\r\n * A character set for the character and number strings\r\n * This must be at least 23 characters long, if it's\r\n * longer nothing will break, but more won't be used\r\n */\n\n\nvar chars = \"2346789BCDFGHJKM\";\n/**\r\n *\r\n * @param binString String representing a binary number\r\n * @param beginning Start of the string to be represented as a number, inclusive\r\n * @param end End of the string to be represented as a number, non-inclusive\r\n *\r\n * @returns Number representation of the binary substring\r\n */\n\nfunction numberFromBinary(binString, beginning, end) {\n  return parseInt(binString.substring(beginning, end), 2);\n}\n/**\r\n *\r\n * @param rnd A random number between 0 and 2 ^ 12\r\n *\r\n * @returns the [rnd] word of the dictionary\r\n */\n\n\nfunction getNoun(rnd) {\n  return nounlist_1.dictionary[rnd];\n}\n/**\r\n *\r\n * @param binString A binary string of length 20\r\n *\r\n * @returns A 5 character representation of the binary string using the\r\n *          character dictionary\r\n */\n\n\nfunction getRChars(binString) {\n  var result = \"\"; // View the data is 5 chunks of 4 bits\n\n  for (var i = 0; i < 5; i++) {\n    // Parse the next 4 bits as a number\n    var nm = numberFromBinary(binString, i * 4, i * 4 + 4);\n    result = result + chars.charAt(nm);\n  }\n\n  return result;\n}\n/**\r\n *\r\n * @param randomness An array of at least length 32.\r\n *\r\n * @returns A ballot tracker\r\n */\n\n\nfunction makeBallotTracker(randomness) {\n  var binaries = []; // Convert the randomness into binary, unnecessary with current form\n\n  randomness.forEach(function (element) {\n    var binString = element.toString(2); // These won't all be bytes unless we add the appropriate number of\n    // leading 0s\n\n    var lengthDif = 8 - binString.length;\n    var pad = '0'.repeat(lengthDif);\n    binaries.push(pad + binString);\n  });\n  var binary = binaries.join(\"\");\n  var result = []; // We go through 8 times, but for the final one we only do the noun\n\n  for (var i = 0; i < 8; i++) {\n    // We're eating 32 bits with each noun/chars pair\n    var startIndex = i * 32;\n    result.push(getNoun(numberFromBinary(binary, startIndex, startIndex + 12)));\n    result.push(getRChars(binary.substring(startIndex + 12, startIndex + 32)));\n  }\n\n  return result.join(\" \");\n}\n\nexports.makeBallotTracker = makeBallotTracker;\n\nfunction makeBallotTrackerFromString(randomness) {\n  var arr = new Uint8Array(randomness.match(/.{1,2}/g).map(function (_byte) {\n    return parseInt(_byte, 16);\n  }));\n  return makeBallotTracker(arr);\n}\n\nexports.makeBallotTrackerFromString = makeBallotTrackerFromString;\n/**\r\n * @returns A random byte array for testing\r\n */\n\nfunction getRandomCode() {\n  var nums = [];\n\n  for (var i = 0; i < 32; i++) {\n    nums.push(Math.floor(Math.random() * 255));\n  }\n\n  return Uint8Array.from(nums);\n}\n\nexports.getRandomCode = getRandomCode;\n\nfunction makeRandomTrackers(ct) {\n  var result = [];\n\n  for (var i = 0; i < ct; i++) {\n    result.push(makeBallotTracker(getRandomCode()));\n  }\n\n  return result;\n}\n\nexports.makeRandomTrackers = makeRandomTrackers;","\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\egadmin\\\\Documents\\\\GitHub\\\\bmd_0717_1458\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\egadmin\\\\Documents\\\\GitHub\\\\bmd_0717_1458\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ballotTracker_1 = require(\"./ballotTracker\");\n\nvar axios_1 = __importDefault(require(\"axios\"));\n\nvar electionSample_json_1 = __importDefault(require(\"./data/electionSample.json\"));\n\nvar ballotTracker_2 = require(\"./ballotTracker\");\n\nexports.makeRandomTrackers = ballotTracker_2.makeRandomTrackers;\nexports.makeBallotTrackerFromString = ballotTracker_2.makeBallotTrackerFromString;\n\nvar csv_1 = require(\"./csv\");\n\nexports.translateCSV = csv_1.translateCSV;\n\nvar ElectionGuardAPI =\n/*#__PURE__*/\nfunction () {\n  function ElectionGuardAPI() {\n    _classCallCheck(this, ElectionGuardAPI);\n  }\n\n  _createClass(ElectionGuardAPI, [{\n    key: \"getElectionConfig\",\n    // /**\n    //  * Send a request to encrypt the example ballot, update the results div with the\n    //  * response\n    //  */\n    // public doRequest(): void {\n    //     axios.post(\"http://localhost:8080/vote\", ballot)\n    //         .then((success) => document.getElementById(\"resultDiv\").innerHTML = success.data);\n    // }\n    // public doNothing() : void {\n    //     console.log(\"nothing done\");\n    // }\n    value: function getElectionConfig() {\n      return Promise.resolve(electionSample_json_1.default);\n    }\n  }, {\n    key: \"encryptVote\",\n    value: function encryptVote(vote) {\n      return axios_1.default.post(\"http://localhost:8080/ballot\", vote).then(function (success) {\n        console.log(success);\n        console.log(success.request.responseURL);\n        return axios_1.default.get(success.request.responseURL).then(function (success) {\n          console.log(\"hash =\", success.data);\n          return ballotTracker_1.makeBallotTrackerFromString(success.data);\n          var asciiCodes = [];\n          success.data.split('').forEach(function (_char) {\n            asciiCodes.push(_char.charCodeAt(0));\n          });\n          var array = Uint8Array.from(asciiCodes);\n          return ballotTracker_1.makeBallotTracker(array);\n        }, function (failure) {\n          console.log(\"failed getting hash\");\n          return '';\n        });\n      }, function (failure) {\n        console.log(\"failed casting ballot\");\n        return '';\n      });\n    }\n  }]);\n\n  return ElectionGuardAPI;\n}();\n\nexports.ElectionGuardAPI = ElectionGuardAPI;"],"sourceRoot":""}